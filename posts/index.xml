<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on CodeMist</title><link>https://www.peterlau.xyz/posts/</link><description>Recent content in Posts on CodeMist</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 05 Jun 2023 13:32:34 +0800</lastBuildDate><atom:link href="https://www.peterlau.xyz/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Emacs Tips</title><link>https://www.peterlau.xyz/posts/2023-06-05-emacs-tips/</link><pubDate>Mon, 05 Jun 2023 13:32:34 +0800</pubDate><guid>https://www.peterlau.xyz/posts/2023-06-05-emacs-tips/</guid><description>some useful tips of SSH</description></item><item><title>SSH Tips</title><link>https://www.peterlau.xyz/posts/2023-06-05-ssh-tips/</link><pubDate>Mon, 05 Jun 2023 13:17:08 +0800</pubDate><guid>https://www.peterlau.xyz/posts/2023-06-05-ssh-tips/</guid><description>some useful tips of SSH</description></item><item><title>Hugo Tips</title><link>https://www.peterlau.xyz/posts/hugo-tips/</link><pubDate>Fri, 30 Sep 2022 04:17:20 +0800</pubDate><guid>https://www.peterlau.xyz/posts/hugo-tips/</guid><description>Notes of Hugo</description></item><item><title>PostgreSQL Logical Replication with Docker and Elixir</title><link>https://www.peterlau.xyz/posts/postgresql-logical-replication-with-docker-and-elixir/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.peterlau.xyz/posts/postgresql-logical-replication-with-docker-and-elixir/</guid><description>postgresql, logical replication, docker, elixir, wal2json</description></item><item><title>Missing Steps of Heroku</title><link>https://www.peterlau.xyz/posts/missing-steps-of-heroku-docker/</link><pubDate>Tue, 17 Sep 2019 15:19:17 +0800</pubDate><guid>https://www.peterlau.xyz/posts/missing-steps-of-heroku-docker/</guid><description> &lt;h3 id="docker">Docker &lt;a href="#docker" class="anchor">üîó&lt;/a>&lt;/h3>&lt;p>Ê†πÊçÆ Dockerfile ÊûÑÂª∫ÈïúÂÉèÔºö&lt;/p>
&lt;p>&lt;code>docker build . -t &amp;lt;your_image_name&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;code>heroku container:push &amp;lt;your_image_name&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;code>heroku container:release &amp;lt;your_image_name&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;code>heroku open&lt;/code>&lt;/p>
&lt;p>Got Error: Expected response to be successful, got 422
Name is invalid&lt;/p>
&lt;p>&lt;code>HEROKU_DEBUG=1 heroku container:release &amp;lt;your_organization&amp;gt;/&amp;lt;your_image_name&amp;gt;:&amp;lt;your_image_tag&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/57846015/heroku-name-is-invalid-when-deploy-docker-image-how-to-debug">https://stackoverflow.com/questions/57846015/heroku-name-is-invalid-when-deploy-docker-image-how-to-debug&lt;/a>&lt;/p>
&lt;p>&lt;code>heroku open&lt;/code>&lt;/p>
&lt;p>Real-time tail&lt;/p>
&lt;p>&lt;code>heroku logs --tail&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/41804507/h14-error-in-heroku-no-web-processes-running">https://stackoverflow.com/questions/41804507/h14-error-in-heroku-no-web-processes-running&lt;/a>&lt;/p>
&lt;p>ÂéüÂõ†ÔºöÊ≤°ÊúâÂêØÂä® dyno Heroku ÊúÄÂ∞èËÆ°ÁÆóÂçïÂÖÉ&lt;/p>
&lt;p>Â¶ÇÊûú‰ΩøÁî® Procfile ÂèØ‰ª•Áî®ÂëΩ‰ª§&lt;/p>
&lt;pre>&lt;code>heroku ps:scale web=1
&lt;/code>&lt;/pre>
&lt;p>ÂØπÂ∫î Procfile&lt;/p>
&lt;pre>&lt;code>web: gunicorn -w 4 -b 0.0.0.0:$PORT -k gevent main:app
&lt;/code>&lt;/pre>
&lt;p>Ê≤°ÊúâÁî® Procfile ÂèØ‰ª•ÂéªÂ∫îÁî® Resources ‰∏ã&lt;/p>
&lt;p>&lt;a href="https://dashboard.heroku.com/apps/pure-fjord-97245/resources">https://dashboard.heroku.com/apps/pure-fjord-97245/resources&lt;/a>&lt;/p>
&lt;p>‰øÆÊîπ dyno Áä∂ÊÄÅ&lt;/p>
&lt;pre>&lt;code> heroku login -i ‰øùÊåÅÂú®ÁªàÁ´Ø‰∏ãÁôªÂΩï
heroku apps
docker-compose build
&lt;/code>&lt;/pre>
&lt;p>Your Ruby version is 2.5.6, but your Gemfile specified 2.5.3&lt;/p>
&lt;p>Dockerfile&lt;/p>
&lt;p>FROM ruby:2.5 -&amp;gt; FROM ruby:2.5.3&lt;/p>
&lt;pre>&lt;code> docker-compose run --rm web rails db:create
&lt;/code>&lt;/pre>
&lt;p>Deployment to Heroku&lt;/p>
&lt;pre>&lt;code> $ heroku update beta
$ heroku plugins:install @heroku-cli/plugin-manifest
$ heroku apps:create --manifest
$ heroku addons:create heroku-postgresql:hobby-dev
&lt;/code>&lt;/pre>
&lt;p>heroku addons:create heroku-postgresql:hobby-dev -a bebopx_hello-heroku.1&lt;/p>
&lt;p>heroku addons:create heroku-postgresql:hobby-dev -a pure-fjord-97245&lt;/p>
&lt;pre>&lt;code> $ heroku config:set RAILS_MASTER_KEY=`cat config/master.key`
$ heroku config:set RACK_ENV=production RAILS_ENV=production
$ heroku config:set RAILS_SERVE_STATIC_FILES=enabled
$ heroku config:set WEB_CONCURRENCY=2
$ heroku config:set LANG=en_US.UTF-8
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.teamtreehouse.com/deploy-static-site-heroku">https://blog.teamtreehouse.com/deploy-static-site-heroku&lt;/a>&lt;/p></description></item><item><title>ÁÆ°ÁêÜÂ§ö‰∏™ SSH Key</title><link>https://www.peterlau.xyz/posts/manage-multiple-ssh-key/</link><pubDate>Mon, 16 Sep 2019 13:24:59 +0800</pubDate><guid>https://www.peterlau.xyz/posts/manage-multiple-ssh-key/</guid><description> &lt;p>SSH Key ÊúÄÂ§ßÁöÑ‰ºòÂäøÊòØÂÖçËæìÂÖ•Â§çÊùÇÁöÑÂØÜÁ†ÅÔºå‰∏ÄÂÆöÁ®ãÂ∫¶ÈÅøÂÖç‰∏≠Èó¥‰∫∫ÊîªÂáª„ÄÇ&lt;/p>
&lt;p>Â§öÁ´ôÁÇπÁÆ°ÁêÜÂèØ‰ª•ÈÄöËøá SSH Config Ëß£ÂÜ≥„ÄÇ&lt;/p>
&lt;p>Â§öÁ´ôÁÇπÂ§öË¥¶Êà∑ÂèØ‰ª•Áî®Á±ª‰ººÊñπÊ≥ï„ÄÇ &lt;a href="https://gist.github.com/jexchan/2351996">https://gist.github.com/jexchan/2351996&lt;/a>&lt;/p>
&lt;p>ÂºäÁ´ØÔºåÈúÄË¶Å‰øÆÊîπ remote url&lt;/p>
&lt;p>Êõ¥ÁÆÄÂçïÊñπÊ≥ïÔºå‰ΩøÁî®ÊîØÊåÅÂ§öË¥¶Êà∑ÁöÑ Git ÂÆ¢Êà∑Á´ØÁÆ°ÁêÜ„ÄÇ&lt;/p>
&lt;p>Êõ¥‰∏™‰∫∫ÂåñÊñπÊ≥ïÔºåËá™Â∑±ÂÆûÁé∞ Git ÂÆ¢Êà∑Á´ØÁÆ°ÁêÜ„ÄÇ&lt;/p>
&lt;p>ËøôÈáåËÆ∞ÂΩï‰∏Ä‰∏™Âü∫‰∫é Docker ÁöÑÊñπÊ≥ï„ÄÇÊÄùË∑ØÂæàÁÆÄÂçïÔºåÁî®Âü∫‰∫é Alpine ÁöÑÊúÄÂ∞èÂåñÈïúÂÉèÔºåÂÆâË£Ö Git OpenSSH ÂêéÈÄöËøá docker run ÊâßË°å git Êìç‰Ωú„ÄÇ&lt;/p>
&lt;p>Generate ssh key&lt;/p>
&lt;p>ssh-keygen -t rsa -b 4096 -C &amp;ldquo;&lt;a href="mailto:your_email@example.com">your_email@example.com&lt;/a>&amp;rdquo;&lt;/p>
&lt;p>eval &amp;ldquo;$(ssh-agent -s)&amp;rdquo;&lt;/p>
&lt;p>ssh-add -K ~/.ssh/id_rsa&lt;/p>
&lt;p>ssh-keygen -p&lt;/p>
&lt;p>docker run -it &amp;ndash;rm -v $(pwd):/repo -v $HOME/.ssh/docker_config/ssh:/root/.ssh bebopx/git:alpine cd /repo;ssh -T &lt;a href="mailto:git@github.com">git@github.com&lt;/a>&lt;/p>
&lt;p>docker run -it &amp;ndash;rm -w /repo -v $(pwd):/repo -v $HOME/.ssh/docker_config/ssh:/root/.ssh bebopx/git:alpine git clone &lt;a href="mailto:git@github.com">git@github.com&lt;/a>:bebopxff/links_share.git&lt;/p>
&lt;p>docker run -it &amp;ndash;rm -w /repo -v $(pwd):/repo -v $HOME/.ssh/docker_config/ssh:/root/.ssh bebopx/git:alpine git push&lt;/p>
&lt;p>docker run -it &amp;ndash;rm -w /repo -v $(pwd):/repo -v $HOME/.ssh/docker_config/ssh:/root/.ssh bebopx/git:alpine git clone &lt;a href="mailto:git@github.com">git@github.com&lt;/a>:bebopxff/links_share.git&lt;/p></description></item><item><title>macOS ‰∏ãÂÆâË£ÖÊàñÊõ¥Êñ∞ Dart Âà∞ÊúÄÊñ∞ÁâàÊú¨</title><link>https://www.peterlau.xyz/posts/2018-07-14-macos-brew-dart/</link><pubDate>Sat, 14 Jul 2018 00:54:31 +0800</pubDate><guid>https://www.peterlau.xyz/posts/2018-07-14-macos-brew-dart/</guid><description> &lt;p>È¶ñÂÖàÊ£ÄÊü• macOS Á≥ªÁªüÊòØÂê¶Êúâ&lt;/p>
&lt;p>&lt;code>/usr/local/Homebrew/Library/Taps/dart-lang/homebrew-dart&lt;/code>„ÄÇ&lt;/p>
&lt;p>Â¶ÇÊûúÊ≤°ÊúâÂ∞±ÊâßË°å&lt;/p>
&lt;p>&lt;code>brew tap dart-lang/dart&lt;/code>Ôºå&lt;/p>
&lt;p>ÁÑ∂ÂêéËøõÂÖ• &lt;code>homebrew-dart&lt;/code>Ôºö&lt;/p>
&lt;p>&lt;code>cd /usr/local/Homebrew/Library/Taps/dart-lang/homebrew-dart&lt;/code>„ÄÇ&lt;/p>
&lt;p>Â∞Ü &lt;code>dart.rb&lt;/code>„ÄÅ&lt;code>dart@1.rb&lt;/code>„ÄÅ&lt;code>dart@2.rb&lt;/code> ‰∏≠ÁöÑ &lt;code>storage.googleapis.com&lt;/code> ÊõøÊç¢‰∏∫ &lt;code>storage.flutter-io.cn&lt;/code>„ÄÇ&lt;/p>
&lt;p>ÁÑ∂ÂêéËøêË°å&lt;/p>
&lt;p>&lt;code>brew install dart --devel&lt;/code> Êàñ &lt;code>brew upgrade dart --devel --force&lt;/code> ÂÆâË£ÖÊúÄÊñ∞ÁöÑ DartÔºå&lt;/p>
&lt;p>ÊúÄÂêéÁî® &lt;code>dart --version&lt;/code> È™åËØÅÂÆâË£ÖÁªìÊûú„ÄÇ&lt;/p></description></item><item><title>OpenAI Five</title><link>https://www.peterlau.xyz/posts/2018-06-30-openai-five/</link><pubDate>Sat, 30 Jun 2018 00:54:31 +0800</pubDate><guid>https://www.peterlau.xyz/posts/2018-06-30-openai-five/</guid><description> &lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;meta charset="utf-8" />
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge" />
&lt;title>OpenAI Five&lt;/title>
&lt;meta name="HandheldFriendly" content="True" />
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0" />
&lt;link rel="shortcut icon" href="https://www.peterlau.xyz/favicon.ico" type="image/x-icon" />
&lt;link rel="canonical" href="https://blog.openai.com/openai-five/" />
&lt;meta name="referrer" content="no-referrer-when-downgrade" />
&lt;meta property="og:site_name" content="OpenAI Blog" />
&lt;meta property="og:type" content="article" />
&lt;meta property="og:title" content="OpenAI Five" />
&lt;meta property="og:description" content="Our team of five neural networks, OpenAI Five, has started to defeat amateur human teams at Dota 2." />
&lt;meta property="og:url" content="https://blog.openai.com/openai-five/" />
&lt;meta property="og:image" content="https://blog.openai.com/content/images/2018/06/dota-card-2.jpg" />
&lt;meta property="article:published_time" content="2018-06-25T14:00:10.000Z" />
&lt;meta property="article:modified_time" content="2018-06-25T20:53:45.000Z" />
&lt;meta property="article:publisher" content="https://www.facebook.com/openai.research" />
&lt;meta name="twitter:card" content="summary_large_image" />
&lt;meta name="twitter:title" content="OpenAI Five" />
&lt;meta name="twitter:description" content="Our team of five neural networks, OpenAI Five, has started to defeat amateur human teams at Dota 2." />
&lt;meta name="twitter:url" content="https://blog.openai.com/openai-five/" />
&lt;meta name="twitter:image" content="https://blog.openai.com/content/images/2018/06/dota-card-2.jpg" />
&lt;meta name="twitter:label1" content="Written by" />
&lt;meta name="twitter:data1" content="OpenAI" />
&lt;meta name="twitter:label2" content="Filed under" />
&lt;meta name="twitter:data2" content="" />
&lt;meta name="twitter:site" content="@openai" />
&lt;meta property="og:image:width" content="1200" />
&lt;meta property="og:image:height" content="675" />
&lt;link rel="alternate" type="application/rss+xml" title="OpenAI Blog" href="https://blog.openai.com/rss/" />
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
&lt;link rel="icon" href="https://blog.openai.com/assets/images/favicon/favicon.ico">
&lt;link rel="shortcut icon" href="https://blog.openai.com/assets/images/favicon/favicon.ico">
&lt;link rel="apple-touch-icon" href="https://blog.openai.com/assets/images/favicon/favicon.png">
&lt;link rel="stylesheet" type="text/css" href="https://blog.openai.com/assets/css/style.css?v=f5ebf2b765" />
&lt;meta name="twitter:card" content="summary_large_image">
&lt;/head>
&lt;body class="post-template tag-hash-design-card-image">
&lt;main class="Main">
&lt;div class="MainContent">
&lt;article class="Post post tag-hash-design-card-image" id="openai-five">
&lt;header class="PostHeader">
&lt;div class="PostHeader-background">
&lt;svg class="icon" width="100%" height="100%" viewBox="0 0 330 418" preserveAspectRatio="none">
&lt;/svg>
&lt;div class="PostHeader-background-glare">&lt;/div>
&lt;/div>
&lt;/header>
&lt;section class="PostContent post-content">
&lt;div class="kg-card-markdown">
&lt;/section>
&lt;div id="dota-5v5-hero-video">
&lt;div class="Post__RobotsThatLearn__Video">
&lt;a href="https://www.youtube.com/watch?v=eHipy_j29Xw" class="Post__RobotsThatLearn__Video-button">&lt;span>&lt;strong>Watch Video&lt;/strong>&lt;/span>&lt;/a>
&lt;div class="Post__IngredientsForRoboticsResearch__PlayerContainer">
&lt;div class="Post__IngredientsForRoboticsResearch__Player">
&lt;iframe class="no-fluidvids" width="100%" height="100%" src="https://www.youtube.com/embed/eHipy_j29Xw?rel=0&amp;amp;showinfo=0&amp;amp;enablejsapi=1&amp;amp;color=white&amp;amp;vq=hd1080" frameborder="0" allow="encrypted-media" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;section class="Post-inner PostContent post-content research-release-post" id="content">
&lt;p>Our team of five neural networks, OpenAI Five, has started to &lt;a href="#thegames">defeat&lt;/a> amateur human teams at &lt;a href="http://www.dota2.com/play/">Dota 2&lt;/a>. While today we play with &lt;a href="#restricted">restrictions&lt;/a>, we
aim to beat a team of top professionals at &lt;a href="https://en.wikipedia.org/wiki/The_International_(Dota_2)">The International&lt;/a> in August subject only to a limited set of heroes. We may not succeed: Dota 2 is one of the most
popular and &lt;a href="https://purgegamers.true.io/g/dota-2-guide">complex&lt;/a> esports games in the world, with creative and motivated professionals who &lt;a href="https://venturebeat.com/2017/02/12/dota-evil-geniuses/">train&lt;/a> year-round
to earn part of Dota's annual $40M &lt;a href="https://www.esportsearnings.com/history/2017/games">prize pool&lt;/a> (the largest of any esports game).&lt;/p>
&lt;p>OpenAI Five plays 180 years worth of games against itself every day, learning via self-play. It trains using a scaled-up version of &lt;a href="https://blog.openai.com/openai-baselines-ppo/">Proximal Policy Optimization&lt;/a> running on
256 GPUs and 128,000 CPU cores ‚Äî a larger-scale version of the system we built to play the much-simpler &lt;a href="https://blog.openai.com/dota-2/">solo variant&lt;/a> of the game last year. Using a separate &lt;a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/#lstm-networks">LSTM&lt;/a> for each hero and no human data, it learns recognizable strategies. This indicates that &lt;a href="https://www.technologyreview.com/s/603501/10-breakthrough-technologies-2017-reinforcement-learning/">reinforcement learning&lt;/a> can
yield long-term planning with large but achievable scale ‚Äî without fundamental advances, contrary to our own expectations upon starting the project.&lt;/p>
&lt;p>To benchmark our progress, we'll host a match versus top players on July 28th. &lt;a href="https://www.twitch.tv/openai">Follow&lt;/a> us on Twitch to view the live broadcast, or &lt;a href="https://www.eventbrite.com/e/openai-five-benchmark-tickets-47144438284">request&lt;/a> an invite to attend in person!&lt;/p>
&lt;style>
.Post__RobotsThatLearn__Video {
margin: 0;
}
.Post__RobotsThatLearn__Video-button span {
padding-top: 33vh;
}
.Post__RobotsThatLearn__Video-button span {
background-image: url(https://blog.openai.com/content/images/2018/06/hero-lineup-dimmed.jpg);
background-size: cover;
background-position: center center;
}
#dota-5v5-hero-video {
width: 100%;
background-repeat: no-repeat;
background-position: center;
margin-bottom: 2.5rem;
}
.ResearchPostHeader {
padding-bottom: 0;
margin-bottom: 0;
}
@media screen and (min-width: 776.25px) {
.ResearchPostHeader-intro {
width: 655px;
padding-left: 25px;
}
}
.PostContent .ResearchPostHeader-title {
margin-bottom: 0.4em !important;
}
.ResearchPostHeader-coverContainer {
display: none;
}
&lt;/style>
&lt;p>&lt;img src="https://blog.openai.com/content/images/2018/06/H0A3837.jpg" alt="Players and audience of the bot playing against our human test team">&lt;br>
&lt;em>OpenAI Five playing the best OpenAI employee team. The match was commentated by professional commentator &lt;a href="https://liquipedia.net/dota2/Blitz">Blitz&lt;/a> and OpenAI Dota team member Christy Dennison, and observed by a crowd from the community.&lt;/em>&lt;/p>
&lt;h1 id="theproblem">The problem&lt;/h1>
&lt;p>One AI milestone is to exceed human capabilities in a complex video game like &lt;a href="https://qz.com/1051052/deepmind-goog-and-facebook-fb-have-started-the-global-sprint-for-ai-to-beat-starcraft-ii/">StarCraft&lt;/a> or Dota. Relative
to previous AI milestones like &lt;a href="https://en.wikipedia.org/wiki/Deep_Blue_(chess_computer)">Chess&lt;/a> or &lt;a href="https://deepmind.com/research/alphago/">Go&lt;/a>, complex video games start to capture the messiness and continuous
nature of the real world. The hope is that systems which solve complex video games will be highly general, with applications outside of games.&lt;/p>
&lt;p>Dota 2 is a real-time strategy game played between two teams of five players, with each player controlling a character called a &amp;quot;hero&amp;quot;. A Dota-playing AI must master the following:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Long time horizons.&lt;/strong> Dota games run at 30 frames per second for an average of 45 minutes, resulting in 80,000 ticks per game. Most actions (like ordering a hero to &lt;a href="https://developer.valvesoftware.com/wiki/Dota_Bot_Scripting#UNIT_SCOPED_FUNCTIONS">move&lt;/a> to a location) have minor impact individually, but some individual actions like &lt;a href="https://dota2.gamepedia.com/Town_Portal_Scroll">town portal&lt;/a> usage can affect the game strategically; some &lt;a href="https://www.liquiddota.com/forum/dota-2-strategy/454744-a-small-primer-on-dota-2-strategy">strategies&lt;/a> can play out over an entire game. OpenAI Five observes every fourth frame, yielding 20,000 moves. &lt;a href="https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/">Chess&lt;/a> usually ends before 40 moves, &lt;a href="https://en.wikipedia.org/wiki/Go_and_mathematics#Game_tree_complexity">Go&lt;/a> before 150 moves, with almost every move being strategic.&lt;/li>
&lt;li>&lt;strong>Partially-observed state.&lt;/strong> Units and buildings can only see the area around them. The rest of the map is covered in a fog hiding enemies and their strategies. Strong play requires making inferences based on incomplete
data, as well as modeling what one's opponent might be up to. Both chess and Go are full-information games.&lt;/li>
&lt;li>&lt;strong>High-dimensional, continuous action space.&lt;/strong> In Dota, each hero can take dozens of actions, and many actions target either another unit or a position on the ground. We discretize the space into 170,000 possible actions
per hero (not all valid each tick, such as using a spell on &lt;a href="https://dota2.gamepedia.com/Cooldown">cooldown&lt;/a>); not counting the continuous parts, there are an average of ~1,000 valid actions each tick. The average
&lt;a href="https://en.wikipedia.org/wiki/Branching_factor">number of actions&lt;/a> in chess is 35; in Go, 250.&lt;/li>
&lt;li>&lt;strong>High-dimensional, continuous observation space.&lt;/strong> Dota is played on a large continuous &lt;a href="https://devilesk.com/dota2/apps/interactivemap/">map&lt;/a> containing ten heroes, dozens of buildings, dozens of &lt;a href="https://en.wikipedia.org/wiki/Non-player_character">NPC&lt;/a> units, and a long tail of game features such as runes, trees, and wards. Our model observes the state of a Dota game via Valve's &lt;a href="https://developer.valvesoftware.com/wiki/Dota_Bot_Scripting">Bot API&lt;/a> as 20,000 (mostly
floating-point) numbers representing all information a human is allowed to access. A chess board is naturally represented as about 70 enumeration values (a 8x8 board of 6 piece types and minor &lt;a href="https://en.wikipedia.org/wiki/Threefold_repetition">historical&lt;/a> &lt;a href="https://en.wikipedia.org/wiki/Castling">info&lt;/a>); a Go board as about 400 enumeration values (a 19x19 board of 2 piece types plus &lt;a href="https://en.wikipedia.org/wiki/Go_(game)#Ko_rule">Ko&lt;/a>).&lt;/li>
&lt;/ul>
&lt;p>The Dota rules are also very complex ‚Äî the game has been actively developed for over a decade, with game logic implemented in hundreds of thousands of lines of code. This logic takes milliseconds per tick to execute, versus nanoseconds
for Chess or Go engines. The game also gets an update about once every two weeks, constantly changing the environment semantics.&lt;/p>
&lt;h1 id="ourapproach">Our approach&lt;/h1>
&lt;p>Our system learns using a massively-scaled version of &lt;a href="https://blog.openai.com/openai-baselines-ppo/">Proximal Policy Optimization&lt;/a>. Both OpenAI Five and our earlier &lt;a href="https://blog.openai.com/dota-2/">1v1 bot&lt;/a> learn entirely from self-play. They start with random parameters and do not use &lt;a href="https://www.reddit.com/r/DotA2/comments/87up8k/will_open_ai_play_real_5v5_dota_at_ti_8/dwg12om/">search&lt;/a> or bootstrap from human replays.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;strong>OpenAI 1v1 bot&lt;/strong>&lt;/th>
&lt;th>&lt;strong>OpenAI Five&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>CPUs&lt;/strong>&lt;/td>
&lt;td>60,000 CPU cores on Azure&lt;/td>
&lt;td>128,000 &lt;a href="https://cloud.google.com/preemptible-vms/">preemptible&lt;/a> CPU cores on GCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>GPUs&lt;/strong>&lt;/td>
&lt;td>256 K80 GPUs on Azure&lt;/td>
&lt;td>256 P100 GPUs on GCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Experience collected&lt;/strong>&lt;/td>
&lt;td>~300 years per day&lt;/td>
&lt;td>~180 years per day (~900 years per day counting each hero separately)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size of observation&lt;/strong>&lt;/td>
&lt;td>~3.3 kB&lt;/td>
&lt;td>~36.8 kB&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Observations per second of gameplay&lt;/strong>&lt;/td>
&lt;td>10&lt;/td>
&lt;td>7.5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Batch size&lt;/strong>&lt;/td>
&lt;td>8,388,608 observations&lt;/td>
&lt;td>1,048,576 observations&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Batches per minute&lt;/strong>&lt;/td>
&lt;td>~20&lt;/td>
&lt;td>~60&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;style>
.PostContent table {
width: calc(100% + 4rem);
max-width: calc(100% + 4rem);
table-layout: fixed;
}
.PostContent table tbody>tr:nth-child(odd)>td,
.PostContent table tbody>tr:nth-child(odd)>th {
background-color: #f7fbfb;
}
&lt;/style>
&lt;p>RL researchers (including ourselves) have generally &lt;a href="https://himanshusahni.github.io/2018/02/23/reinforcement-learning-never-worked.html">believed&lt;/a> that long time horizons would require fundamentally new advances, such as
&lt;a href="http://www.cs.toronto.edu/~fritz/absps/dh93.pdf">hierarchical&lt;/a> &lt;a href="https://blog.openai.com/learning-a-hierarchy/">reinforcement&lt;/a> &lt;a href="https://einstein.ai/research/hierarchical-reinforcement-learning">learning&lt;/a>.
Our results suggest that we haven't been giving today's algorithms enough credit ‚Äî at least when they're run at sufficient scale and with a reasonable way of &lt;a href="#exploration">exploring&lt;/a>.&lt;/p>
&lt;p>Our agent is trained to maximize the exponentially decayed sum of future rewards, weighted by an exponential decay factor called &lt;code>Œ≥&lt;/code>. During the latest training run of OpenAI Five, we annealed &lt;code>Œ≥&lt;/code> from &lt;code>0.998&lt;/code> (valuing future rewards with a half-life of 46 seconds) to &lt;code>0.9997&lt;/code> (valuing future rewards with a half-life of five minutes). For comparison, the longest horizon in the &lt;a href="https://arxiv.org/abs/1707.06347">PPO&lt;/a> paper was a half-life of 0.5 seconds, the longest in the &lt;a href="https://arxiv.org/abs/1710.02298">Rainbow&lt;/a> paper was a half-life of 4.4 seconds, and the &lt;a href="https://arxiv.org/abs/1805.11593">Observe and Look Further&lt;/a> paper used a half-life of 46 seconds.&lt;/p>
&lt;p>While the current version of OpenAI Five is weak at &lt;a href="https://dota2.gamepedia.com/Creep_control_techniques#Last-hitting">last-hitting&lt;/a> (observing our test matches, the professional Dota commentator &lt;a href="https://liquipedia.net/dota2/Blitz">Blitz&lt;/a> estimated it around median for Dota players), its &lt;a href="#observations">objective prioritization&lt;/a> matches a common professional strategy. Gaining long-term rewards such as strategic map control often requires sacrificing short-term
rewards such as gold gained from &lt;a href="https://dota2.gamepedia.com/Farming">farming&lt;/a>, since grouping up to attack towers takes time. This observation reinforces our belief that the system is truly optimizing over a long horizon.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/UZHTNBMAfAA" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;h4 id="modelstructure">Model structure&lt;/h4>
&lt;p>Each of &lt;a href="https://d4mucfpksywv.cloudfront.net/research-covers/openai-five/network-architecture.pdf">OpenAI Five's networks&lt;/a> contain a single-layer, 1024-unit &lt;a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/#lstm-networks">LSTM&lt;/a> that sees the current game state (extracted from Valve's &lt;a href="https://developer.valvesoftware.com/wiki/Dota_Bot_Scripting">Bot API&lt;/a>) and emits actions through several possible action heads. Each head has semantic meaning,
for example, the number of ticks to delay this action, which action to select, the X or Y coordinate of this action in a grid around the unit, etc. Action heads are computed independently.&lt;/p>
&lt;p>&lt;em>Interactive demonstration of the observation space and action space used by OpenAI Five. OpenAI Five views the world as a list of 20,000 numbers, and takes an action by emitting a list of 8 enumeration values. Select different actions and targets to understand how OpenAI Five encodes each action, and how it observes the world. The image shows the scene as a human would see it.&lt;/em>&lt;/p>
&lt;/section>
&lt;link href="https://d4mucfpksywv.cloudfront.net/research-covers/openai-five/css/style.css" rel="stylesheet">
&lt;div class="diagram-container">
&lt;div id="dota-diagram">&lt;/div>
&lt;/div>
&lt;script src="https://d4mucfpksywv.cloudfront.net/research-covers/openai-five/scripts.v1.min.js" type="text/javascript">&lt;/script>
&lt;section class="Post-inner PostContent post-content research-release-post" id="content">
&lt;p>OpenAI Five can react to missing pieces of state that correlate with what it does see. For example, until recently OpenAI Five's observations did not include &lt;a href="https://dota2.gamepedia.com/Sniper#Abilities">shrapnel&lt;/a> zones
(areas where projectiles rain down on enemies), which humans see on screen. However, we observed OpenAI Five learning to walk out of (though not avoid entering) active shrapnel zones, since it could see its health decreasing.&lt;/p>
&lt;h4 id="exploration">Exploration&lt;/h4>
&lt;p>Given a learning algorithm capable of handling long horizons, we still need to explore the environment. Even with our &lt;a href="#restricted">restrictions&lt;/a>, there are hundreds of items, dozens of buildings, spells, and unit types,
and a long tail of game mechanics to learn about ‚Äî many of which yield powerful combinations
&lt;!--TODO: link to video of combos-->. It's not easy to explore this combinatorially-vast space efficiently.&lt;/p>
&lt;p>OpenAI Five learns from self-play (starting from random weights), which provides a natural curriculum for exploring the environment. To avoid &amp;quot;strategy collapse&amp;quot;, the agent trains 80% of its games against itself and the other
20% against its past selves. In the first games, the heroes walk aimlessly around the map. After several hours of training, concepts such as &lt;a href="https://www.reddit.com/r/DotA2/comments/17fj2y/laning_101/">laning&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Farming">farming&lt;/a>,
or fighting over &lt;a href="https://pvgna.com/dota2/paths/how-to-master-mid-lane">mid&lt;/a> emerge. After several days, they consistently adopt basic human strategies: attempt to steal &lt;a href="https://dota2.gamepedia.com/Bounty_Rune">Bounty&lt;/a> runes from their opponents, walk to their &lt;a href="https://dota2.gamepedia.com/Buildings#Towers">tier one&lt;/a> towers to farm, and rotate heroes around the map to gain lane advantage. And with further training, they become proficient
at high-level strategies like &lt;a href="https://www.reddit.com/r/DotA2/comments/4iyr00/how_do_you_counter_a_5man_early_game_push_strat/">5-hero push&lt;/a>.&lt;/p>
&lt;p>In March 2017, our first &lt;a href="https://www.youtube.com/watch?v=5Fv2c4aNS2w&amp;amp;feature=youtu.be">agent&lt;/a> defeated bots but got confused against humans. To force exploration in strategy space, during training (and only during training)
we randomized the properties (health, speed, start level, etc.) of the units, and it began beating humans. Later on, when a test player was consistently beating our 1v1 bot, we increased our training randomizations and the test
player started to lose. (Our robotics team concurrently applied similar randomization techniques to &lt;a href="https://blog.openai.com/generalizing-from-simulation/">physical&lt;/a> &lt;a href="https://blog.openai.com/spam-detection-in-the-physical-world/">robots&lt;/a> to transfer from simulation to the real world.)&lt;/p>
&lt;p>OpenAI Five uses the randomizations we wrote for our 1v1 bot. It also uses a new &amp;quot;lane assignment&amp;quot; one. At the beginning of each training game, we randomly &amp;quot;assign&amp;quot; each hero to some subset of &lt;a href="https://dota2.gamepedia.com/Lane">lanes&lt;/a> and penalize it for straying from those lanes until a randomly-chosen time in the game.&lt;/p>
&lt;p>Exploration is also helped by a good reward. &lt;a href="https://gist.github.com/dfarhi/66ec9d760ae0c49a5c492c9fae93984a">Our reward&lt;/a> consists mostly of metrics humans track to decide how they're doing in the game: net worth, kills,
deaths, assists, last hits, and the like. We postprocess each agent's reward by subtracting the other team's average reward to prevent the agents from finding positive-sum situations.&lt;/p>
&lt;p>We hardcode item and skill builds (originally written for our &lt;a href="https://blog.openai.com/more-on-dota-2/#infrastructure">scripted&lt;/a> baseline), and choose which of the builds to use at random. &lt;a href="https://dota2.gamepedia.com/Courier">Courier&lt;/a> management is also imported from the scripted baseline.&lt;/p>
&lt;h4 id="coordination">Coordination&lt;/h4>
&lt;p>OpenAI Five does not contain an explicit communication channel between the heroes' neural networks. Teamwork is controlled by a hyperparameter we dubbed &amp;quot;team spirit&amp;quot;. Team spirit ranges from 0 to 1, putting a weight on how
much each of OpenAI Five's heroes should care about its individual reward function versus the average of the team's reward functions. We anneal its value from 0 to 1 over training.&lt;/p>
&lt;h4 id="rapid">Rapid&lt;/h4>
&lt;img class="Dota-Minigraph" src="https://blog.openai.com/content/images/2018/06/rapid@2x.png" alt="OpenAI Rapid" />
&lt;p>Our system is implemented as a general-purpose RL training system called Rapid, which can be applied to any &lt;a href="https://github.com/openai/gym">Gym&lt;/a> environment. We've used Rapid to solve other problems at OpenAI, including
&lt;a href="https://blog.openai.com/competitive-self-play/">Competitive Self-Play&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://blog.openai.com/content/images/2018/06/rapid-architecture@2x--1-.png" alt="rapid-architecture@2x--1-">&lt;/p>
&lt;p>The training system is separated into &lt;em>rollout&lt;/em> workers, which run a copy of the game and an agent gathering experience, and &lt;em>optimizer&lt;/em> nodes, which perform synchronous gradient descent across a fleet of GPUs. The rollout
workers sync their experience through Redis to the optimizers. Each experiment also contains workers evaluating the trained agent versus reference agents, as well as monitoring software such as &lt;a href="https://www.tensorflow.org/programmers_guide/summaries_and_tensorboard">TensorBoard&lt;/a>,
&lt;a href="https://sentry.io/welcome/">Sentry&lt;/a>, and &lt;a href="https://grafana.com/">Grafana&lt;/a>.&lt;/p>
&lt;img class="Dota-Minigraph" src="https://blog.openai.com/content/images/2018/06/gpu-synchronization-time-small@2x.png" />
&lt;p>During synchronous gradient descent, each GPU computes a gradient on its part of the batch, and then the gradients are globally averaged. We originally used &lt;a href="https://en.wikipedia.org/wiki/Message_Passing_Interface">MPI's&lt;/a> &lt;a href="http://www.mcs.anl.gov/research/projects/mpi/mpi-standard/mpi-report-1.1/node82.htm">allreduce&lt;/a> for averaging, but now use our own &lt;a href="https://developer.nvidia.com/nccl">NCCL2&lt;/a> wrappers that parallelize GPU
computations and network data transfer.&lt;br> The latencies for synchronizing 58MB of data (size of OpenAI Five's parameters) across different numbers of GPUs are shown on the right. The latency is low enough to be largely masked
by GPU computation which runs in parallel with it.&lt;/p>
&lt;p>We've implemented Kubernetes, Azure, and GCP backends for Rapid.&lt;/p>
&lt;h1 id="thegames">The games&lt;/h1>
&lt;p>Thus far OpenAI Five has played (with our &lt;a href="#restricted">restrictions&lt;/a>) versus each of these teams:&lt;/p>
&lt;ol>
&lt;li>Best OpenAI employee team: 2.5k &lt;a href="https://dota2.gamepedia.com/Matchmaking_Rating">MMR&lt;/a> (46th percentile)&lt;/li>
&lt;li>Best audience players watching OpenAI employee match (including Blitz, who commentated the first OpenAI employee match): 4-6k MMR (90th-99th percentile), though they'd never played as a team.&lt;/li>
&lt;li>Valve employee team: 2.5-4k MMR (46th-90th percentile).&lt;/li>
&lt;li>Amateur team: 4.2k MMR (93rd percentile), trains as a team.&lt;/li>
&lt;li>Semi-pro team: 5.5k MMR (99th percentile), trains as a team.&lt;/li>
&lt;/ol>
&lt;p>The April 23rd version of OpenAI Five was the first to beat our scripted baseline. The May 15th version of OpenAI Five was evenly matched versus team 1, winning one game and losing another. The June 6th version of OpenAI Five decisively
won all its games versus teams 1-3. We set up informal &lt;a href="https://www.reddit.com/r/DotA2/comments/3s9zet/what_is_a_scrim/">scrims&lt;/a> with teams 4 &amp;amp; 5, expecting to lose soundly, but OpenAI Five won two of its first three
games versus both.&lt;/p>
&lt;p>&lt;img src="https://blog.openai.com/content/images/2018/06/195A8963_cropped.jpg" alt="195A8963_cropped">&lt;/p>
&lt;blockquote>
&lt;p>The teamwork aspect of the bot was just overwhelming. It feels like five selfless players that know a good general strategy.&lt;/p>
&lt;p>‚Äî Blitz&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a name="observations" id="observations">&lt;/a>We observed that OpenAI Five:&lt;/p>
&lt;ul>
&lt;li>Repeatedly sacrificed its own &lt;a href="https://dota2.gamepedia.com/Lane">safe lane&lt;/a> (top lane for dire; bottom lane for radiant) in exchange for controlling the enemy's safe lane, forcing the fight onto the side that is harder
for their opponent to defend. This strategy emerged in the professional scene in the last few years, and is now considered to be the prevailing tactic. Blitz commented that he only learned this after eight years of play, when
&lt;a href="https://liquipedia.net/dota2/Team_Liquid">Team Liquid&lt;/a> told him about it.&lt;/li>
&lt;li>&lt;img class="Dota-Minigraph" src="https://blog.openai.com/content/images/2018/06/ganking-2.gif" />Pushed the &lt;a href="https://purgegamers.true.io/purge/phases-of-the-game/">transitions&lt;/a> from early- to mid-game faster than its
opponents. It did this by: (1) setting up successful &lt;a href="https://dota2.gamepedia.com/Ganking">ganks&lt;/a> (when players move around the map to ambush an enemy hero ‚Äî see animation) when players overextended in their lane,
and (2) by grouping up to take towers before the opponents could organize a counterplay.
&lt;div style="clear:both">&lt;/div>
&lt;/li>
&lt;li>Deviated from current &lt;a href="https://liquipedia.net/dota2/Metagame">playstyle&lt;/a> in a few areas, such as giving &lt;a href="https://dota2.gamepedia.com/Role#Support">support&lt;/a> heroes (which usually do not take priority for resources)
lots of early experience and gold. OpenAI Five's prioritization allows for its damage to peak sooner and push its advantage harder, winning team fights and capitalizing on mistakes to ensure a fast win.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.openai.com/content/images/2018/06/_H0A3928.jpg" alt="_H0A3928">&lt;br>
&lt;em>Trophies awarded after the match between the best players at OpenAI and our bot team. One trophy for the humans, one trophy for the bots (represented by Susan Zhang from our team!)&lt;/em>&lt;/p>
&lt;h1 id="differencesversushumans">Differences versus humans&lt;/h1>
&lt;p>OpenAI Five is given access to the same information as humans, but instantly sees data like positions, healths, and item inventories that humans have to check manually. Our method isn't fundamentally tied to observing state, but just
rendering pixels from the game would require thousands of GPUs.&lt;/p>
&lt;p>OpenAI Five averages around 150-170 actions per minute (and has a theoretical maximum of 450 due to observing every 4th frame). Frame-perfect timing, while &lt;a href="https://www.reddit.com/r/DotA2/comments/493wib/frameperfect_stun_by_swindle_on_enchantress_in_eg/">possible&lt;/a> for skilled players, is trivial for OpenAI Five. OpenAI Five has an average reaction time of 80ms, which is faster than humans.&lt;/p>
&lt;p>These differences matter most in 1v1 (where our bot had a reaction time of 67ms), but the playing field is relatively equitable as we've seen humans learn from and adapt to the bot. Dozens of &lt;a href="https://www.reddit.com/r/DotA2/comments/6yp5ug/black_just_killed_open_ai/">professionals&lt;/a> &lt;a href="https://www.reddit.com/r/DotA2/comments/6wqf5x/bulldog_gets_jebaited_hard_by_openai_bot/">used&lt;/a> our 1v1 bot for &lt;a href="https://www.youtube.com/watch?v=DQ3fPS9345A">training&lt;/a> in the months after last year's &lt;a href="https://en.wikipedia.org/wiki/The_International_(Dota_2)">TI&lt;/a>.
According to Blitz, the 1v1 bot has changed the way people think about 1v1s (the bot adopted a fast-paced playstyle, and everyone has now adapted to keep up).&lt;/p>
&lt;h1 id="surprisingfindings">Surprising findings&lt;/h1>
&lt;style>
img.Dota-Minigraph,
video.Dota-Minigraph {
float: right;
display: inline;
width: 40%;
max-width: none;
padding: 0.5rem 0;
position: inherit;
transform: none;
}
&lt;/style>
&lt;ul>
&lt;li>&lt;img class="Dota-Minigraph" src="https://blog.openai.com/content/images/2018/06/sparse-vs-dense-small@2x.png" alt="Sparse vs Dense rewards learning curves, showing dense reaching an equivalent level of performance faster." />&lt;strong>Binary rewards can give good performance.&lt;/strong> Our 1v1 model had a shaped reward, including rewards for last hits, kills, and the like. We ran an experiment where we only rewarded the agent for winning or losing, and it trained an order of magnitude slower and somewhat
plateaued in the middle, in contrast to the smooth learning curves we usually see. The experiment ran on 4,500 cores and 16 k80 GPUs, training to the level of semi-pros (70 &lt;a href="https://en.wikipedia.org/wiki/TrueSkill">TrueSkill&lt;/a>)
rather than 90 TrueSkill of our best 1v1 bot).&lt;/li>
&lt;li>&lt;strong>Creep blocking can be learned from scratch.&lt;/strong> For 1v1, we learned &lt;a href="https://blog.openai.com/more-on-dota-2/#thetask">creep blocking&lt;/a> using traditional RL with a "creep block" reward. One of our team members
left a 2v2 model training when he went on vacation (proposing to his now wife!), intending to see how much longer training would boost performance. To his surprise, the model had &lt;a href="https://s3-us-west-2.amazonaws.com/openai-assets/dota_2018/cm_creepblock.mp4">learned to creep block&lt;/a> without any special guidance or reward.&lt;/li>
&lt;li>&lt;img class="Dota-Minigraph" src="https://blog.openai.com/content/images/2018/06/bug-comparison-small@2x.png" alt="Comparison of learning curves before and after bugfixes, showing how fixing bugs increases learning speed." />&lt;strong>We're still fixing bugs.&lt;/strong> The chart shows a training run of the code that defeated amateur players, compared to a version where we simply fixed a number of bugs, such as rare crashes during training, or a bug which resulted in a large negative reward
for reaching level 25. It turns out it's possible to beat good humans while still hiding serious bugs!&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.openai.com/content/images/2018/06/group-laptop.jpg" alt="group-laptop">&lt;br>
&lt;em>A subset of the OpenAI Dota team, holding the laptop that &lt;a href="https://blog.openai.com/dota-2/">defeated&lt;/a> the world's top professionals at Dota 1v1 at The International last year.&lt;/em>&lt;/p>
&lt;h1 id="whatsnext">What's next&lt;/h1>
&lt;p>Our team is focused on making our August goal. We don't know if it will be achievable, but we believe that with hard work (and some luck) we have a real shot.&lt;/p>
&lt;p>This post described a snapshot of our system as of June 6th. We'll release updates along the way to surpassing human performance and write a report on our final system once we complete the project. Please join us on July 28th &lt;a href="https://www.twitch.tv/openai">virtually&lt;/a> or &lt;a href="https://www.eventbrite.com/e/openai-dota-5v5-match-tickets-47144438284">in person&lt;/a>, when we'll play a team of top players!&lt;/p>
&lt;p>Our underlying motivation reaches beyond Dota. Real-world AI deployments will need to deal with the &lt;a href="#theproblem">challenges&lt;/a> raised by Dota which are not reflected in Chess, Go, Atari games, or Mujoco benchmark tasks. Ultimately,
we will measure the success of our Dota system in its application to real-world tasks. If you'd like to be part of what comes next, we're &lt;a href="https://openai.com/jobs/">hiring&lt;/a>!&lt;/p>
&lt;script>
// From https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
function teamblock(team, cls) {
function shuffle(array) {
var currentIndex = array.length,
temporaryValue, randomIndex;
// While there remain elements to shuffle...
while (0 !== currentIndex) {
// Pick a remaining element...
randomIndex = Math.floor(Math.random() * currentIndex);
currentIndex -= 1;
// And swap it with the current element.
temporaryValue = array[currentIndex];
array[currentIndex] = array[randomIndex];
array[randomIndex] = temporaryValue;
}
return array;
}
team = shuffle(team);
var items = team.map(function(n) {
return "&lt;li class='Page-Event__Team-individual'>" + n + "&lt;/li>";
}).join("");
var teamblock = "&lt;ul class='Page-Event__Team " + cls + "'>" + items + "&lt;/ul>";
return teamblock
}
var alpha = ["Brooke Chan", "Christy Dennison", "David Farhi", "Filip Wolski", "Greg Brockman", "Henrique Pond√©", "Jakub Pachocki", "Jie Tang", "Jonathan Raiman", "Michael Petrov", "Przemys≈Çaw Dƒôbiak", "Susan Zhang", "Szymon Sidor", "Rafa≈Ç J√≥zefowicz"];
var beta = ["Quirin Fischer", "Christopher Hesse", "Shariq Hashme", "Ilya Sutskever", "Alec Radford", "Scott Gray", "Jack Clark", "Paul Christiano", "David Luan", "Christopher Berner", "Eric Sigler", "Jonas Schneider", "Larissa Schiavo", "Diane Yoon", "John Schulman"]
var byline = "&lt;span class='PostFooter-authors--label'>Built by a team of researchers and engineers at OpenAI (order randomized each pageload).&lt;/span>";
document.addEventListener("DOMContentLoaded", function(event) {
document.querySelector(".PostFooter-authors").innerHTML = byline;
document.querySelector(".PostFooter").innerHTML += "&lt;div class='PostFooter-authors dota-5v5-authors'>" + teamblock(alpha, "") + teamblock(beta, " Page-Event__Team-beta") + "&lt;/div>";
});
&lt;/script>
&lt;style>
.PostFooter {
flex-wrap: wrap;
}
.PostFooter-authors {
width: 50%;
}
.Page-Event__Team-individual {
//font-size: 1.8em;
line-height: 1.28em;
list-style: none; //width: 50%;
text-align: center;
padding: .5rem;
font-weight: 500; //color: #f8dc57;
}
.Page-Event__Team {
margin: 0;
padding: 0px;
max-width: 400px;
margin: 0.5rem auto;
display: -ms-flexbox;
display: flex;
-ms-flex-wrap: wrap;
flex-wrap: wrap;
}
.Page-Event__Team-beta {
margin-top: 3.5rem;
}
&lt;/style>
&lt;hr/>
&lt;div style="font-size: 85%">
&lt;p>&lt;a id="restricted" name="restricted">&lt;/a>[1] Current set of restrictions:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Mirror match of &lt;a href="https://dota2.gamepedia.com/Necrophos">Necrophos&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Sniper">Sniper&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Viper">Viper&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Crystal_Maiden">Crystal Maiden&lt;/a>, and &lt;a href="https://dota2.gamepedia.com/Lich">Lich&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://www.thescoreesports.com/dota2/news/13481-a-basic-guide-to-warding-in-dota-2">warding&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://dota2.gamepedia.com/Roshan">Roshan&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://dota2.gamepedia.com/Invisibility">invisibility&lt;/a> (consumables and relevant items)&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://dota2.gamepedia.com/Summons">summons&lt;/a>/&lt;a href="https://dota2.gamepedia.com/Illusions">illusions&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://dota2.gamepedia.com/Divine_Rapier">Divine Rapier&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Bottle">Bottle&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Quelling_Blade">Quelling Blade&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Boots_of_Travel">Boots of Travel&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Tome_of_Knowledge">Tome of Knowledge&lt;/a>, &lt;a href="https://dota2.gamepedia.com/Infused_Raindrop">Infused Raindrop&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;em>5 invulnerable couriers, no exploiting them by scouting or tanking&lt;/em>&lt;/li>
&lt;li>&lt;em>No &lt;a href="https://dota2.gamepedia.com/Scan">Scan&lt;/a>&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>The hero set restriction makes the game very different from how Dota is played at world-elite level (i.e. &lt;a href="https://dota2.gamepedia.com/Game_modes#Captains_Mode">Captains Mode&lt;/a> drafting from all 100+ heroes). However,
the difference from regular &amp;quot;public&amp;quot; games (&lt;a href="https://dota2.gamepedia.com/Game_modes#All_Pick">All Pick&lt;/a> / &lt;a href="https://dota2.gamepedia.com/Game_modes#Random_Draft">Random Draft&lt;/a>) is smaller.&lt;/p>
&lt;p>Most of the restrictions come from remaining aspects of the game we haven't integrated yet. Some restrictions, in particular wards and Roshan, are central components of professional-level play. We're working to add these as soon
as possible.&lt;/p>
&lt;p>[2] Thanks to the following for feedback on drafts of this post: Alexander Lavin, Andrew Gibiansky, Anna Goldie, Azalia Mirhoseini, Catherine Olsson, David Dohan, David Ha, Denny Britz, Erich Elsen, James Bradbury, John Miller,
Luke Metz, Maddie Hall, Miles Brundage, Nelson Elhage, Ofir Nachum, Pieter Abbeel, Rumen Hristov, Shubho Sengupta, Solomon Boulos, Stephen Merity, Tom Brown, Zak Stone&lt;/p>
&lt;/div>
&lt;script>
var links = document.links;
var article = document.body.querySelector("article");
for (var i = 0, linksLength = links.length; i &lt; linksLength; i++) {
if (links[i].hostname != window.location.hostname &amp;&amp; article.contains(links[i])) {
links[i].target = '_blank';
}
}
&lt;/script>
&lt;!-- for video player -->
&lt;script src="https://www.youtube.com/iframe_api">&lt;/script>
&lt;meta name="twitter:description" content="Our team of five neural networks, OpenAI Five, has started to defeat amateur human teams at Dota 2. While today we play with restrictions, we aim to beat a team of top professionals at The International in August subject only to a limited set of heroes."
/>
&lt;meta name="twitter:card" content="player" />
&lt;meta name="twitter:image" content="https://blog.openai.com/content/images/2018/06/christy-v2-square.jpg" />
&lt;meta name="twitter:player" content="https://www.youtube.com/embed/eHipy_j29Xw?rel=0&amp;showinfo=0" />
&lt;meta name="twitter:player:width" content="600" />
&lt;meta name="twitter:player:height" content="336" />
&lt;/div>
&lt;/section>
&lt;footer class="PostFooter">
&lt;div class="PostFooter-authors">
&lt;span class="PostFooter-authors--label">By&lt;/span>
&lt;/div>
&lt;/footer>
&lt;/article>
&lt;/div>
&lt;/main>
&lt;script type="text/javascript" src="https://blog.openai.com/assets/js/app.js?v=f5ebf2b765">&lt;/script>
&lt;svg width="0" height="0" viewBox="0 0 330 418" style='visibility:hidden;width:0;height:0;display:block;'>
&lt;filter id="f1" x="-50%" y="-50%" width="200%" height="200%">
&lt;feGaussianBlur in="SourceGraphic" stdDeviation="30" />
&lt;/filter>
&lt;defs>
&lt;linearGradient id="blue">
&lt;stop offset="0" stop-color="rgb(94,33,217)" />
&lt;stop offset="1" stop-color="rgb(18,165,226)" />
&lt;/linearGradient>
&lt;linearGradient id="blue_green">
&lt;stop offset="0" stop-color="rgb(47,134,215)"/>
&lt;stop offset="1" stop-color="rgb(28,245,186)"/>
&lt;/linearGradient>
&lt;linearGradient id="cyan">
&lt;stop offset="0" stop-color="rgb(64,100,216)"/>
&lt;stop offset="1" stop-color="rgb(74,216,221)"/>
&lt;/linearGradient>
&lt;linearGradient id="purple">
&lt;stop offset="0" stop-color="rgb(90,64,216)"/>
&lt;stop offset="1" stop-color="rgb(216,74,221)"/>
&lt;/linearGradient>
&lt;linearGradient id="red">
&lt;stop offset="0" stop-color="rgb(183,24,102)"/>
&lt;stop offset="1" stop-color="rgb(235,52,52)"/>
&lt;/linearGradient>
&lt;linearGradient id="orange">
&lt;stop offset="0" stop-color="rgb(211,56,56)"/>
&lt;stop offset="1" stop-color="rgb(242,153,38)"/>
&lt;/linearGradient>
&lt;linearGradient id="yellow">
&lt;stop offset="0" stop-color="rgb(232,91,6)"/>
&lt;stop offset="1" stop-color="rgb(229,231,42)"/>
&lt;/linearGradient>
&lt;linearGradient id="green">
&lt;stop offset="0" stop-color="rgb(13,163,130)"/>
&lt;stop offset="1" stop-color="rgb(103,228,78)"/>
&lt;/linearGradient>
&lt;linearGradient id="black">
&lt;stop offset="0" stop-color="rgb(0,0,0)"/>
&lt;stop offset="1" stop-color="rgb(38,38,38)"/>
&lt;/linearGradient>
&lt;linearGradient id="slate-dark">
&lt;stop offset="0" stop-color="rgb(34,34,34)"/>
&lt;stop offset="1" stop-color="rgb(69,69,77)"/>
&lt;/linearGradient>
&lt;linearGradient id="slate-mid">
&lt;stop offset="0" stop-color="rgb(59,62,76)"/>
&lt;stop offset="1" stop-color="rgb(102,102,120)"/>
&lt;/linearGradient>
&lt;linearGradient id="slate-light">
&lt;stop offset="0" stop-color="rgb(137,137,155)"/>
&lt;stop offset="1" stop-color="rgb(181,181,196)"/>
&lt;/linearGradient>
&lt;!-- Outer shape -->
&lt;symbol id="outer">
&lt;path d="M268.7 12c-10.16-4.21-26.79-4.21-37 0l-137 56.74C84.61 73 72.85 84.71 68.64 94.87l-56.74 137c-4.21 10.16-4.21 26.79 0 37l56.74 137c4.21 10.16 16 21.92 26.13 26.13l137 56.74c10.16 4.21 26.79 4.21 37 0l137-56.74c10.16-4.21 21.92-16 26.13-26.13l56.74-137c4.21-10.16 4.21-26.79 0-37l-56.74-137c-4.21-10.16-16-21.92-26.13-26.13z" />
&lt;/symbol>
&lt;!-- Inner shape -->
&lt;symbol id="inner">
&lt;path d="M250.22 56.28l-137.2 56.84-56.84 137.21 56.84 137.21 137.21 56.83 137.2-56.84 56.84-137.21-56.84-137.2-137.21-56.84z"/>
&lt;/symbol>
&lt;mask id="outerMask" maskUnits="userSpaceOnUse" x="0" y="0" width="500" height="500">
&lt;rect x="0" y="0" width="500" height="500" fill="white"/>
&lt;use filter="url(#f1)" xlink:href="#outer" />
&lt;/mask>
&lt;mask id="outlineMask" maskUnits="userSpaceOnUse" x="0" y="0" width="500" height="500">
&lt;use fill="white" xlink:href="#outer" />
&lt;use fill="black" xlink:href="#inner" />
&lt;/mask>
&lt;/defs>
&lt;symbol id="circle">
&lt;path class="cls-1" d="M46.633,169.834A171,171,0,1,1-162.8,290.749,171,171,0,0,1,46.633,169.834Z"/>
&lt;circle class="cls-2" cx="250.625" cy="98.984" r="171.063"/>
&lt;/symbol>
&lt;symbol id="hexagon">
&lt;path d="M103.728-104.851a20.335,20.335,0,0,0-13.505,0L-16.926-60.458a20.338,20.338,0,0,0-9.549,9.55L-70.851,56.249a20.338,20.338,0,0,0,0,13.506L-26.458,176.9a20.343,20.343,0,0,0,9.551,9.55L90.249,230.828a20.336,20.336,0,0,0,13.505,0L210.9,186.435a20.337,20.337,0,0,0,9.549-9.55L264.828,69.729a20.336,20.336,0,0,0,0-13.505L220.435-50.926a20.337,20.337,0,0,0-9.551-9.549Z"/>
&lt;path d="M186.713,201.118a20.332,20.332,0,0,0-13.506,0l-107.16,44.4a20.342,20.342,0,0,0-9.55,9.551L12.117,362.232a20.341,20.341,0,0,0,0,13.507L56.515,482.9a20.335,20.335,0,0,0,9.551,9.55l107.166,44.38a20.334,20.334,0,0,0,13.507,0l107.159-44.4a20.339,20.339,0,0,0,9.55-9.552l44.38-107.166a20.338,20.338,0,0,0,0-13.506l-44.4-107.16a20.343,20.343,0,0,0-9.552-9.55Z"/>
&lt;/symbol>
&lt;symbol id="square">
&lt;path d="M184.988,276.989a14.03,14.03,0,0,1,0,19.774L38.917,442.917a14.011,14.011,0,0,1-19.762,0L-126.916,296.762a14.027,14.027,0,0,1,0-19.773L19.155,130.835a14.009,14.009,0,0,1,19.762,0Z" transform="translate(0 -47)"/>
&lt;path d="M464.677,206.029a14.843,14.843,0,0,1,0,20.932L309.948,381.673a14.846,14.846,0,0,1-20.933,0L134.286,226.96a14.844,14.844,0,0,1,0-20.931L289.015,51.317a14.847,14.847,0,0,1,20.934,0Z" transform="translate(0 -47)"/>
&lt;/symbol>
&lt;symbol id="triangle">
&lt;path d="M71.037-26.913c-4.7-8.144-12.378-8.144-17.074,0L-130,292.192c-4.695,8.144-.854,14.808,8.537,14.808H246.462c9.391,0,13.232-6.664,8.537-14.808Z"/>
&lt;path d="M305-.476C299.5-10,290.5-10,285-.476L69.5,372.683C64,382.208,68.5,390,79.5,390h431c11,0,15.5-7.792,10-17.317Z"/>
&lt;/symbol>
&lt;symbol id="hexagon-icon">
&lt;g mask="url(#outlineMask)">
&lt;rect mask="url(#outerMask)" x="-50%" y="-50%" width="200%" height="200%" fill="black"/>
&lt;rect mask="url(#outerMask)" x="-50%" y="-50%" width="200%" height="200%" fill="black"/>
&lt;rect mask="url(#outerMask)" x="-50%" y="-50%" width="200%" height="200%" fill="black"/>
&lt;/g>
&lt;/symbol>
&lt;/svg>
&lt;/body>
&lt;style>
.PostHeader {
background: transparent !important;
text-align: left;
margin-bottom: 0;
}
.PostHeader-inner {
padding: calc(35px + 3rem) 25px 3rem;
}
#content {
margin-top: 40px;
}
.PostHeader-title {
color: inherit;
}
&lt;/style>
&lt;script type="application/ld+json">
{
"@context": "https://schema.org",
"@type": "Article",
"publisher": {
"@type": "Organization",
"name": "OpenAI Blog",
"logo": {
"@type": "ImageObject",
"url": "https://blog.openai.com/content/images/2017/03/twitter.png",
"width": 60,
"height": 60
}
},
"author": {
"@type": "Person",
"name": "OpenAI",
"url": "https://blog.openai.com/author/openai/",
"sameAs": []
},
"headline": "OpenAI Five",
"url": "https://blog.openai.com/openai-five/",
"datePublished": "2018-06-25T14:00:10.000Z",
"dateModified": "2018-06-25T20:53:45.000Z",
"image": {
"@type": "ImageObject",
"url": "https://blog.openai.com/content/images/2018/06/dota-card-2.jpg",
"width": 1200,
"height": 675
},
"description": "Our team of five neural networks, OpenAI Five, has started to defeat amateur human teams at Dota 2.",
"mainEntityOfPage": {
"@type": "WebPage",
"@id": "https://blog.openai.com/"
}
}
&lt;/script>
&lt;/html></description></item><item><title>Èù¢Âêë Web ÂºÄÂèëËÄÖÁöÑ‰ª•Â§™ÂùäÂºÄÂèëÊ¶ÇËßà</title><link>https://www.peterlau.xyz/posts/2018-06-29-ethereum-for-web-developers/</link><pubDate>Fri, 29 Jun 2018 13:34:25 +0800</pubDate><guid>https://www.peterlau.xyz/posts/2018-06-29-ethereum-for-web-developers/</guid><description> &lt;p>ÊàëÂ∑≤ÁªèÂ≠¶‰π†‰∫Ü‰∏ÄÊÆµÊó∂Èó¥ÁöÑ‰ª•Â§™ÂùäÂå∫ÂùóÈìæÂπ≥Âè∞ÔºåÊàëÂ≠¶‰π†ÁöÑË∂äÂ§öÔºå‰ª•Â§™ÂùäÂ∞±Ë∂äËÆ©‰∫∫ÂÖ¥Â•ã„ÄÇÁΩë‰∏äÊúâÂêÑÁßçÂêÑÊ†∑Â≠¶‰π†‰ª•Â§™ÂùäÁöÑËµÑÊ∫êÔºåÂæàÂÆπÊòìÂ∞±‰ø°ÊÅØËøáËΩΩ„ÄÇ‰ΩÜÊòØ‰ª•Â§™ÂùäÂπ≥Âè∞ËøòÂú®Âø´ÈÄüÂèëÂ±ï‰∏≠ÔºåËøô‰∫õËµÑÊ∫êÂ§ßÈÉ®ÂàÜÈÉΩËøáÊúü‰∫Ü„ÄÇÊàëËä±‰∫Ü‰∫õÊó∂Èó¥Êï¥ÁêÜËøô‰∫õËµÑÊ∫êÔºåÊâçÊòéÁôΩ‰∫Ü‰ªÄ‰πàÊòØ‰ª•Â§™ÂùäÂèä‰ª•Â§™ÂùäÊòØÂ¶Ç‰ΩïÂ∑•‰ΩúÁöÑ„ÄÇÂú®‰∏é meetup Áæ§ÂèäÂÖ∂‰ªñÁ∫ø‰∏äÁ§æÂå∫ÁöÑÂºÄÂèëËÄÖ‰∫§ÊµÅËøáÁ®ã‰∏≠ÔºåÊàëÂèëÁé∞ÂæàÂ§ö‰∫∫ÊÉ≥Â≠¶‰π†Ëøô‰∏™Êñ∞ÊäÄÊúØÔºåÂç¥ÈÅáÂà∞‰∫ÜÊàë‰πãÂâçÈÅáÂà∞ÁöÑ‰ø°ÊÅØËøáÂ§öÂèàËøáÊó∂ÁöÑÈóÆÈ¢ò„ÄÇÊàëÂ∞ùËØïÂú®Êú¨Êñá‰∏≠Ôºå‰ªé Web ÂºÄÂèëËÄÖÁöÑËßíÂ∫¶Ëß£Èáä‰ª•Â§™Âùä„ÄÇ&lt;/p>
&lt;p>Â¶ÇÊûú‰Ω†ÊòØ‰∏Ä‰∏™ Web ÂºÄÂèëËÄÖÔºå‰Ω†‰∏ÄÂÆöÊòéÁôΩÁΩëÁªúÂ∫îÁî®ÁöÑÂÆ¢Êà∑Á´Ø/ÊúçÂä°Âô®Êû∂ÊûÑÊòØÂ¶Ç‰ΩïÂ∑•‰ΩúÁöÑ„ÄÇ&lt;/p>
&lt;p>&lt;img src="http://paiockmru.bkt.clouddn.com/webapp-hosted-on-aws.png" alt="">&lt;/p>
&lt;p>Êàë‰ª¨ÈÄöÂ∏∏Â∞ÜËá™Â∑±ÁöÑ Web Â∫îÁî®ÊâòÁÆ°Âú®‰∏ªÊú∫Êèê‰æõÂïÜ(Â¶Ç AWSÔºåHeroku ÊàñËÄÖ VPS)‰∏ä„ÄÇÊâÄÊúâÁöÑÂÆ¢Êà∑Á´ØÈÉΩ‰∏éËøô‰∏™‰∏≠Â§ÆÂ∫îÁî®‰∫§‰∫í„ÄÇÂÆ¢Êà∑Á´ØÂèØ‰ª•ÊòØÊµèËßàÂô®ÊàñÂÖ∂‰ªñ‰ΩøÁî®ÊúçÂä°ÁöÑ api„ÄÇÂΩìÂÆ¢Êà∑Á´ØËÆøÈóÆÊúçÂä°Âô®ÊòØÔºåÊúçÂä°Á´ØËØ∑Ê±ÇÊï∞ÊçÆÂ∫ìÊàñÁºìÂ≠òÔºåËØª/ÂÜô/Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìÔºåÂìçÂ∫îÂÆ¢Êà∑Á´ØËØ∑Ê±Ç„ÄÇËøôÂ•óÊû∂ÊûÑÂ§ßÈÉ®ÂàÜÊó∂Èó¥ÈÉΩËÉΩÊ≠£Â∏∏Â∑•‰Ωú„ÄÇ‰ΩÜÊúâÊó∂ÂÄôÔºåÂØπ‰∫é‰∏Ä‰∫õÁâπÂÆöÁöÑ Web Â∫îÁî®ÔºåÂ¶ÇÊûúÂèØ‰ª•ÂÆâÂÖ®ÁÅµÊ¥ªÂú∞ËÆøÈóÆÊï∞ÊçÆÂ∫ìÔºåÂ¶Ç‰∏çÈúÄË¶ÅÁªèËøá Web Â∫îÁî®ÁÆ°ÁêÜÂëòÂêåÊÑèÂ∞±ËÉΩËÆøÈóÆÂ±û‰∫éËá™Â∑±ÁöÑÊï∞ÊçÆÂ∞±Êõ¥Â•Ω‰∫Ü„ÄÇ&lt;/p>
&lt;p>‰æãÂ¶ÇÔºå‰Ω†ÊòØ eBay ‰∏ä‰∏Ä‰∏™ÊúâÊï∞ÁôæÂ•ΩËØÑÁöÑÁÉ≠ÈîÄÂçñÂÆ∂ÔºåÂõ†‰∏∫‰∏Ä‰∫õÂéüÂõ†‰Ω†Ë¢´ eBay Â∞ÅÂè∑‰∫ÜÔºåËøô‰ºö‰∏•ÈáçÂú∞ÂΩ±Âìç‰Ω†ÁöÑÁîüÊÑè„ÄÇÊ≠§Êó∂ÔºåÂ¶ÇÊûú‰Ω†ËÉΩÂ§üÂ∏¶ÁùÄ‰Ω†Â∑≤ÁªèËé∑ÂæóÁöÑÂ•ΩËØÑÂíåÂÆ¢Êà∑ËøÅÁßªÂà∞ÂÖ∂‰ªñÂπ≥Âè∞(Â¶Ç eBay Á´û‰∫âËÄÖ)Â∞±Â•Ω‰∫Ü„ÄÇeBay ÈÄöËøáÊàê‰∏∫ÂçñÂÆ∂Âíå‰π∞ÂÆ∂‰πãÈó¥ÁöÑÂèØ‰ø°‰ªªÁ¨¨‰∏âÊñπÊù•Êèê‰æõÊúçÂä°Ôºå‰ΩÜÂÆÉÂêåÊó∂‰πü‰ªéÊØèÁ¨î‰∫§Êòì‰∏≠ÊäΩÊàê„ÄÇÊúâÊ≤°Êúâ‰∏Ä‰∏™ÊñπÊ≥ïÔºåËÉΩÂ§üÂú®‰π∞ÂçñÂèåÊñπÈó¥Âπ≤Êéâ eBay Êù•ËäÇÁúÅÊäΩÊàêË¥πÔºåÂêåÊó∂‰Ω†ËøòËÉΩÊã•ÊúâËá™Â∑±ÁöÑÊï∞ÊçÆÂë¢ÔºüÁé∞Âú®Â∞±Êúâ‰∏Ä‰∏™ÂÆûÁé∞Ëøô‰∏™ÁõÆÁöÑÁöÑÊñπÊ≥ïÔºåÈÇ£Â∞±ÊòØÂéª‰∏≠ÂøÉÂåñÂ∫îÁî®„ÄÇ‰ª•Â§™ÂùäÂ∞±ËÉΩÂ§üËÆ©ÂºÄÂèë DApp (Âéª‰∏≠ÂøÉÂåñÂ∫îÁî®)ÈùûÂ∏∏ÁÆÄÂçï„ÄÇ&lt;/p>
&lt;p>ËÆ©Êàë‰ª¨Â§ßËá¥Áúã‰∏ã‰ª•Â§™ÂùäÂéª‰∏≠ÂøÉÂåñÂ∫îÁî®ÁöÑÊû∂ÊûÑ„ÄÇ&lt;/p>
&lt;p>&lt;img src="http://paiockmru.bkt.clouddn.com/dapp-hight-level.png" alt="">&lt;/p>
&lt;p>‰Ω†ÂèØËÉΩÊ≥®ÊÑèÂà∞‰∫ÜÔºåÊØè‰∏™ÂÆ¢Êà∑Á´Ø(ÊµèËßàÂô®)ÈÉΩ‰∏é‰∏Ä‰∏™Â∫îÁî®ÂÆû‰æã‰∫§‰∫íÔºåÊ≤°Êúâ‰∏Ä‰∏™ÊâÄÊúâÂ∫îÁî®ÈÉΩËøûÊé•ÁöÑ‰∏≠ÂøÉÂåñÊúçÂä°Âô®„ÄÇËøôÊÑèÂë≥ÁùÄÔºå‰ªª‰Ωï‰∏Ä‰∏™ÊÉ≥‰ΩøÁî® DApp ÁöÑ‰∫∫ÔºåÈÉΩÈúÄË¶ÅÂú®Ëá™Â∑±ÁöÑÁîµËÑëÊàñÊâãÊú∫‰∏äËøêË°åÊï¥‰∏™Âå∫ÂùóÈìæÊã∑Ë¥ù„ÄÇ‰Ω†ÈúÄË¶ÅÂÖà‰∏ãËΩΩÊï¥‰∏™Âå∫ÂùóÈìæÊâçËÉΩÂºÄÂßã‰ΩøÁî® DApp„ÄÇËøô‰∏™ÊñπÊ≥ïÂàöÂºÄÂßãÂê¨Ëµ∑Êù•ÂæàËçíË∞¨Ôºå‰ΩÜÂÆÉÁöÑ‰ºòÂäøÂú®‰∫é‰∏çÈúÄË¶Å‰æùËµñ‰∏Ä‰∏™ÊòéÂ§©ÂèØËÉΩÊ∂àÂ§±‰∏çËßÅÁöÑ‰∏≠Â§ÆÊúçÂä°Âô®„ÄÇ&lt;/p>
&lt;p>‰∫ãÂÆû‰∏ä‰Ω†‰∏çÈúÄË¶ÅËä±Ë¥πÂ§™Â§öÁöÑÁ°¨ÁõòÂíåÂÜÖÂ≠òÊù•‰∏ãËΩΩ‰ΩøÁî®Âå∫ÂùóÈìæ„ÄÇ‰∫∫‰ª¨Â∑≤ÁªèÂÆûÁé∞‰∫ÜÂæàÂ§ö‰ºòÂåñÊñπÊ≥ïÔºåËÉΩÂ§üËÆ©Â∫îÁî®Âú®‰øùÊåÅÂéª‰∏≠ÂøÉÂåñÁöÑÂêåÊó∂‰πüÂèØ‰ª•‰æøÊç∑Âú∞‰ΩøÁî®„ÄÇ&lt;/p>
&lt;p>ÈÇ£‰πàÔºå‰ª•Â§™Âùä‰∏≠ÁöÑÂå∫ÂùóÈìæÂà∞Â∫ïÊòØ‰ªÄ‰πàÔºüÂÆÉÂåÖÂê´‰ª•‰∏ãÂá†‰∏™ÈÉ®ÂàÜ:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Êï∞ÊçÆÂ∫ì:&lt;/p>
&lt;p>ÊØèÂá†‰∏™Âá∫Áé∞Âú®‰ª•Â§™ÂùäÁΩëÁªú‰∏≠ÁöÑ‰∫§ÊòìË¢´ÊâìÂåÖËÆ∞ÂΩïÂú®Âå∫Âùó‰∏≠ÔºåÊØè‰∏™Âå∫ÂùóÈÉΩËøûÊé•Âà∞‰∏ã‰∏Ä‰∏™Âå∫Âùó‰∏ä„ÄÇËøô‰∫õËøûÊé•Ëµ∑Êù•‰øùÂ≠ò‰∫ÜÂÖ®ÈÉ®‰∫§ÊòìËÆ∞ÂΩïÁöÑ‰∏ÄÁ≥ªÂàóÂå∫ÂùóÂ∞±Ë¢´Áß∞‰∏∫Âå∫ÂùóÈìæ„ÄÇÂõûÂà∞‰∏äÊñáÁöÑÈÇ£‰∏™eBay ‰æãÂ≠ê‰∏≠Ôºå‰π∞ÂçñÂèåÊñπÁöÑÊØèÁ¨î‰∫§ÊòìÔºåÊó†ËÆ∫ÊòØ‰ªòÊ¨æÔºåÈÄÄÊ¨æÔºå‰∫âËÆÆÈÉΩ‰ºöË¢´ËÆ∞ÂΩïÂú®Âå∫ÂùóÈìæ‰∏äÔºå‰ªª‰Ωï‰∫∫ÈÉΩÂèØ‰ª•ËÆøÈóÆ„ÄÇ‰ª•Â§™Âùä‰ΩøÁî®‰∏ÄÁßçÂè´ÂÅöÂ∑•‰ΩúÈáèËØÅÊòéÁöÑÁÆóÊ≥ïÔºåÁ°Æ‰øù‰ª•Â§™ÂùäÁΩëÁªú‰∏≠ÊØè‰∏™ÂÆ¢Êà∑Á´ØËäÇÁÇπÈÉΩÊúâÁõ∏ÂêåÁöÑÂå∫ÂùóÈìæÊã∑Ë¥ù„ÄÇ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>‰ª£Á†Å:&lt;/p>
&lt;p>Âå∫ÂùóÈìæÁöÑÊï∞ÊçÆÂ∫ìÈÉ®ÂàÜ‰ªÖ‰ªÖ‰øùÂ≠òÊï∞ÊçÆ„ÄÇ‰ΩÜÊòØÊâÄÊúâ‰π∞ÂçñÂèñÊ∂à‰∫§ÊòìÈÄÄÊ¨æÁöÑÈÄªËæëÂú®Âì™ÈáåÂë¢ÔºüÂú®‰ª•Â§™Âùä‰∏ñÁïåÈáåÔºå‰Ω†Ë¶ÅÁî®‰∏ÄÁßçÂè´ÂÅö &lt;a href="https://solidity.readthedocs.io/en/develop/">Solidity&lt;/a> ÁöÑËØ≠Ë®ÄÊù•ÂÜôÂ∫îÁî®‰ª£Á†Å(Ë¢´Áß∞‰∏∫ÂêàÁ∫¶)„ÄÇÈöèÂêé‰Ω†Ë¶ÅÁî® Solidity ÁºñËØëÂô®ÊääÂêàÁ∫¶ÁºñËØë‰∏∫‰ª•Â§™ÂùäÂ≠óËäÇÁ†ÅÔºåÂÜçÂ∞ÜÂ≠óËäÇÁ†ÅÈÉ®ÁΩ≤Âà∞Âå∫ÂùóÈìæ‰∏ä„ÄÇËøòÊúâ‰∏Ä‰∫õÂèØ‰ª•Êõø‰ª£ Solidity ÁöÑËØ≠Ë®ÄÔºå‰ΩÜÂà∞ÁõÆÂâç‰∏∫Ê≠¢ÔºåSolidity ÊòØÂå∫ÂùóÈìæÂºÄÂèë‰∏≠ÊúÄÊµÅË°åÁöÑËØ≠Ë®Ä„ÄÇ&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Âü∫Êú¨‰∏äÂèØ‰ª•ËØ¥ÔºåÂå∫ÂùóÈìæ‰∏≠‰øùÂ≠ò‰Ω†ÁöÑÊï∞ÊçÆÔºå‰øùÂ≠ò‰ª£Á†ÅÈÄªËæëÂπ∂Âú® EVM (‰ª•Â§™ÂùäËôöÊãüÊú∫)‰∏≠ÊâßË°åËøô‰∫õ‰ª£Á†Å„ÄÇ&lt;/p>
&lt;p>‰∏∫‰∫ÜÊûÑÂª∫ÁΩëÈ°µÁâà DAppÔºå‰ª•Â§™ÂùäÂºÄÂèë‰∫Ü‰∏Ä‰∏™Êñπ‰æøÁöÑ JavaScript Â∫ìÔºå &lt;a href="https://github.com/ethereum/web3.js/">web3.js&lt;/a>ÔºåÂÆÉÂèØ‰ª•ËøûÊé•Âà∞‰Ω†ÁöÑÂå∫ÂùóÈìæËäÇÁÇπ„ÄÇ‰Ω†Âè™ÈúÄË¶ÅÂú® angularjsÔºåreactjs Á≠âËëóÂêçÊ°ÜÊû∂‰∏≠ÂºïÂÖ•ÂÆÉÂ∞±ÂèØ‰ª•ÂºÄÂßãÂºÄÂèë DApp ‰∫Ü„ÄÇ&lt;/p>
&lt;p>Âè¶‰∏Ä‰∏™‰ª•Â§™ÂùäÁöÑÈáçË¶ÅÁâπÊÄßÊòØÂÆÉÁöÑÈáëËûçÂäüËÉΩ„ÄÇÂ¶ÇÊûúÊàëÂëäËØâ‰Ω†Ôºå‰Ω†‰∏ÄÂºÄÂßã‰ΩøÁî® DApp Â∞±‰ºöÂæóÂà∞‰∏Ä‰∏™ÂÜÖÁΩÆÁöÑÈì∂Ë°åË¥¶Êà∑Ôºå‰Ω†‰ºöÊúâ‰ªÄ‰πàÂèçÂ∫îÔºüÂÆûÈôÖ‰∏äÔºå‰Ω†‰∏çÊ≠¢ÂæóÂà∞‰∏Ä‰∏™Èì∂Ë°åË¥¶Âè∑Ôºå‰Ω†ÂèØ‰ª•Âú®‰∏ÄÁßíÂÜÖÂª∫Á´ãÂæàÂ§öÈì∂Ë°åË¥¶Âè∑„ÄÇËøô‰∫õÈì∂Ë°åË¥¶Âè∑Ë¢´Áß∞‰∏∫Èí±ÂåÖÔºå‰Ω†ÂèØ‰ª•ÂÆÉ‰ª¨Áî®Êù•ÂÇ®Â≠òÈí±(‰ª•Â§™Â∏Å ‰ª•Â§™ÂùäÁîüÊÄÅ‰∏≠‰ΩøÁî®ÁöÑË¥ßÂ∏Å)Âíå‰∫§Êòì„ÄÇ&lt;/p>
&lt;p>ÊàëÊïÖÊÑèÁúÅÁï•‰∫ÜÂæàÂ§öÂå∫ÂùóÈìæÁöÑÂÜÖÈÉ®ËøêË°åÊú∫Âà∂ÔºåÂõ†‰∏∫Êàë‰∏ªË¶ÅÊÉ≥ÈõÜ‰∏≠ÂØπÊØîÂ∏∏ËßÅÁöÑ‰∏≠ÂøÉÂåñÂ∫îÁî®‰∏éÂü∫‰∫éÂå∫ÂùóÈìæÁöÑ DApp„ÄÇÂ∏åÊúõËøôÁØáÊñáÁ´†ÂÆåÊàê‰∫ÜËøô‰∏ÄÁõÆÊ†áÔºåËÆ©‰Ω†ÂØπ‰ª•Â§™ÂùäÊòØ‰ªÄ‰πà‰ª•ÂèäÂÆÉÂ¶Ç‰ΩïË¢´Áî®Êù•ÊûÑÂª∫ DApp Êúâ‰∏™Â§ßÊ¶ÇÁöÑËÆ§ËØÜ„ÄÇ&lt;/p>
&lt;p>&lt;a href="https://medium.com/@mvmurthy/ethereum-for-web-developers-890be23d1d0c">ÂéüÊñáÈìæÊé•&lt;/a>&lt;/p></description></item><item><title>Â¶Ç‰ΩïÁºñÂÜô Go - Part2 ÂÆåÁªìÁØá</title><link>https://www.peterlau.xyz/posts/how-to-write-go-code-cn-part-2-end/</link><pubDate>Sun, 23 Apr 2017 00:09:39 +0800</pubDate><guid>https://www.peterlau.xyz/posts/how-to-write-go-code-cn-part-2-end/</guid><description> &lt;blockquote>
&lt;h2 id="Á¨¨‰∏Ä‰∏™Â∫ì">Á¨¨‰∏Ä‰∏™Â∫ì &lt;a href="#%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%ba%93" class="anchor">üîó&lt;/a>&lt;/h2>&lt;/blockquote>
&lt;p>Êàë‰ª¨Â∞Ü‰ºöÂÜô‰∏Ä‰∏™Â∫ìÂπ∂Âú® &lt;code>hello&lt;/code> Á®ãÂ∫è‰∏≠‰ΩøÁî®ÂÆÉ„ÄÇ&lt;/p>
&lt;p>Á¨¨‰∏ÄÊ≠•ÊòØÈÄâÊã©‰∏Ä‰∏™ÂåÖË∑ØÂæÑ (Êàë‰ª¨‰ºö‰ΩøÁî® &lt;code>github.com/user/stringutil&lt;/code> )Âπ∂ÂàõÂª∫Â∫ìÊñá‰ª∂Â§π:&lt;/p>
&lt;pre>&lt;code>$ mkdir $GOPATH/src/github.com/user/stringutil
&lt;/code>&lt;/pre>
&lt;p>‰∏ã‰∏ÄÊ≠•ÔºåÂú®ÁõÆÂΩï‰∏ãÂàõÂª∫Âè´ÂÅö &lt;code>reverse.go&lt;/code> ÁöÑÊñá‰ª∂ÔºåÂπ∂ËæìÂÖ•‰ª•‰∏ãÂÜÖÂÆπ&lt;/p>
&lt;pre>&lt;code>// Package returns its argument string reversed rune-wise left to right
package stringutil
// Reverse ÊåâÂ≠óÁ¨¶Â∞ÜÂèÇÊï∞ string ÁøªËΩ¨
func Reverse(s string) string {
r := []rune(s)
for i, j := 0, len(r)-1; i &amp;lt; len(r)/2; i,j=i+1,j-1 {
r[i], r[j] = r[j], r[i]
}
return string(r)
}
&lt;/code>&lt;/pre>
&lt;p>Áé∞Âú®ÔºåÁî® &lt;code>go build&lt;/code> Êù•ÁºñËØëÊµãËØïËøô‰∏™ÂåÖ:&lt;/p>
&lt;pre>&lt;code>$ go build github.com/user/stringutil
&lt;/code>&lt;/pre>
&lt;p>Â¶ÇÊûú‰Ω†Âú®ÂåÖÊñá‰ª∂Â§πË∑ØÂæÑÔºåÂèØ‰ª•Âè™ÊâßË°å:&lt;/p>
&lt;pre>&lt;code>$ go build
&lt;/code>&lt;/pre>
&lt;p>Ëøô‰∏ç‰ºö‰∫ßÁîü‰∏Ä‰∏™ËæìÂá∫Êñá‰ª∂„ÄÇ‰Ω†ÂøÖÈ°ª‰ΩøÁî® &lt;code>go install&lt;/code>ÔºåËøôÂèØ‰ª•Â∞ÜÂåÖÂØπË±°ÊîæÂú®Â∑•‰ΩúÁ©∫Èó¥ÁöÑ &lt;code>pkg&lt;/code> Êñá‰ª∂Â§π‰∏ã„ÄÇ&lt;/p>
&lt;p>Âú®Á°ÆËÆ§ &lt;code>stringutil&lt;/code> ÂåÖÁºñËØëÂÆåÊàêÂêéÔºå ‰øÆÊîπ‰Ω†ÂéüÂßãÁöÑ &lt;code>hello.go&lt;/code> (‰Ωç‰∫é &lt;code>$GOPATH/src/github.com/user/hello&lt;/code> ‰∏ã) Êù•‰ΩøÁî®Ëøô‰∏™ÂåÖ:&lt;/p>
&lt;pre>&lt;code>package main
import (
&amp;quot;fmt&amp;quot;
&amp;quot;github.com/user/stringutil&amp;quot;
)
func main() {
fmt.Printf(stringutil.Reverse(&amp;quot;!oG ,olleH&amp;quot;))
}
&lt;/code>&lt;/pre>
&lt;p>ÊØèÂΩì &lt;code>go&lt;/code> Â∑•ÂÖ∑ÂÆâË£Ö‰∏Ä‰∏™ÂåÖÊàñ‰∫åËøõÂà∂Êñá‰ª∂Êó∂ÔºåÂÆÉÂêåÊó∂ÂÆâË£Ö‰∫ÜËøô‰∏™ÂåÖÂåÖÂê´ÁöÑ‰æùËµñ„ÄÇ ÊâÄ‰ª•ÂΩì‰Ω†ÂÆâË£Ö hello program Êó∂Ôºå&lt;/p>
&lt;pre>&lt;code>$ go install github.com/user/hello
&lt;/code>&lt;/pre>
&lt;p>stringutil ÂåÖ‰ºöÂêåÊó∂Ë¢´Ëá™Âä®ÂÆâË£Ö„ÄÇ&lt;/p>
&lt;p>ËøêË°åÊñ∞ÁâàÊú¨ÁöÑÁ®ãÂ∫èÔºå‰Ω†‰ºöÁúãÂà∞‰∏Ä‰∏™Êñ∞ÁöÑÁøªËΩ¨ÁöÑ‰ø°ÊÅØ:&lt;/p>
&lt;pre>&lt;code>$hello
Hello, Go!
&lt;/code>&lt;/pre>
&lt;p>ÂÆåÊàê‰ª•‰∏äÊ≠•È™§ÂêéÔºå‰Ω†ÁöÑÂ∑•‰ΩúÁ©∫Èó¥ÁúãËµ∑Êù•ÂÉèËøôÊ†∑:&lt;/p>
&lt;pre>&lt;code>bin/
hello
pkg/
linux_amd64/ # ÂèñÂÜ≥‰∫é‰Ω†‰ΩøÁî®ÁöÑÊìç‰ΩúÁ≥ªÁªüÂíåÊû∂ÊûÑ
github.com/user/
stringutil.a # ÂåÖÈ°πÁõÆ
src/
github.com/user/
hello/
hello.go
stringutil/
reverse.go
&lt;/code>&lt;/pre>
&lt;p>Ê≥®ÊÑè &lt;code>go install&lt;/code> Â∞Ü &lt;code>stringutil.a&lt;/code> ÊîæÂú® &lt;code>pkg/linux_amd64&lt;/code> ‰∏ãÂíåÊ∫êÁ†ÅË∑ØÂæÑ‰∏ÄËá¥ÁöÑÂ≠êÊñá‰ª∂Â§π‰∏ã„ÄÇËøôÊ†∑Êñπ‰æø &lt;code>go&lt;/code> Â∑•ÂÖ∑ÊâæÂà∞ÂåÖÊñá‰ª∂‰ªéËÄåÈÅøÂÖçÈáçÂ§çÁºñËØëËøô‰∏™ÂåÖ„ÄÇ &lt;code>linux_amd64&lt;/code> ËøôÈÉ®ÂàÜÊòØ‰∏∫‰∫ÜËæÖÂä©‰∫§ÂèâÁºñËØëÔºåÂπ∂‰ºöÂèçÊò†‰Ω†ÁöÑÊìç‰ΩúÁ≥ªÁªüÂèäÁ≥ªÁªüÊû∂ÊûÑ„ÄÇ&lt;/p>
&lt;p>&lt;code>Go&lt;/code> ÂèØÊâßË°åÊñá‰ª∂ÊòØÈùôÊÄÅÈìæÊé•ÁöÑÔºõËøêË°å &lt;code>Go&lt;/code> Á®ãÂ∫è‰∏çÈúÄË¶ÅÂåÖÊñá‰ª∂„ÄÇ&lt;/p>
&lt;blockquote>
&lt;h2 id="ÂåÖÂêç">ÂåÖÂêç &lt;a href="#%e5%8c%85%e5%90%8d" class="anchor">üîó&lt;/a>&lt;/h2>&lt;/blockquote>
&lt;p>&lt;code>Go&lt;/code> Ê∫ê‰ª£Á†ÅÁ¨¨‰∏ÄË°åÂøÖÈ°ªÊòØ &lt;code>package name&lt;/code>„ÄÇ &lt;code>name&lt;/code> Â∞±ÊòØÁî®Êù•ÂØºÂÖ•ÂåÖÁöÑÈªòËÆ§ÂêçÂ≠ó„ÄÇ(Âêå‰∏Ä‰∏™ÂåÖÈáåÁöÑÊñá‰ª∂ÈúÄË¶ÅÊúâÁõ∏ÂêåÁöÑÂåÖÂêç)„ÄÇ&lt;/p>
&lt;p>&lt;code>Go&lt;/code> ‰∏≠ÂåÖÂêçÊòØÂØºÂÖ•Ë∑ØÂæÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†: ‰Ωú‰∏∫ &lt;code>&amp;quot;crypto/rot13&amp;quot;&lt;/code> ÂØºÂÖ•ÁöÑÂåÖÔºåÂåÖÂêçÊòØ &lt;code>&amp;quot;rot13&amp;quot;&lt;/code>„ÄÇ&lt;/p>
&lt;p>ÂèØÊâßË°åÂëΩ‰ª§ÂøÖÈ°ª‰ΩøÁî® &lt;code>main&lt;/code> ‰Ωú‰∏∫ &lt;code>package name&lt;/code>„ÄÇ&lt;/p>
&lt;p>&lt;code>Go&lt;/code> ‰∏çË¶ÅÊ±ÇÈìæÊé•Âà∞‰∏Ä‰∏™‰∫åËøõÂà∂Êñá‰ª∂ÁöÑÂåÖÂêç‰∏çÂêåÔºåÂè™ÈúÄË¶ÅÂØºÂÖ•Ë∑ØÂæÑÂîØ‰∏ÄÂç≥ÂèØ„ÄÇ&lt;/p>
&lt;p>Êü•Áúã &lt;code>Effective Go&lt;/code> Êù•Â≠¶‰π†Êõ¥Â§öÂÖ≥‰∫é &lt;code>Go&lt;/code> ÂëΩÂêçÊÉØ‰æãÁöÑÂÜÖÂÆπ„ÄÇ&lt;/p>
&lt;blockquote>
&lt;h1 id="ÊµãËØï">ÊµãËØï &lt;a href="#%e6%b5%8b%e8%af%95" class="anchor">üîó&lt;/a>&lt;/h1>&lt;/blockquote>
&lt;p>&lt;code>Go&lt;/code> ÂåÖÂê´‰∫Ü‰∏Ä‰∏™Áî± &lt;code>go test&lt;/code> ÂëΩ‰ª§Âíå &lt;code>testing&lt;/code> ÂåÖÁªÑÊàêÁöÑËΩªÈáèÁ∫ßÊµãËØïÊ°ÜÊû∂„ÄÇ
‰Ω†ÈÄöËøáÂàõÂª∫‰∏Ä‰∏™‰ª• &lt;code>_test.go&lt;/code> ÁªìÂ∞æÁöÑÊñá‰ª∂Êù•ÂÜôÊµãËØïÔºåÊñá‰ª∂‰∏≠ÂåÖÂê´ÂëΩÂêç‰∏∫ &lt;code>TestXXX&lt;/code> ÂèÇÊï∞Á≠æÂêç‰∏∫ ( &lt;code>t *testing.T&lt;/code> ) ÁöÑÊµãËØïÂáΩÊï∞„ÄÇÊµãËØïÊ°ÜÊû∂ÊâßË°åÊØè‰∏™ËøôÊ†∑ÁöÑÂáΩÊï∞ÔºõÂ¶ÇÊûúÂáΩÊï∞Ë∞ÉÁî®‰∫Ü‰∏Ä‰∏™Á±ª‰ºº &lt;code>t.Error&lt;/code> Êàñ &lt;code>t.Fail&lt;/code> ÁöÑÂ§±Ë¥•ÂáΩÊï∞ÔºåÊµãËØïË¢´ËÆ§‰∏∫Êú™ÈÄöËøá„ÄÇ
ÂàõÂª∫Êñá‰ª∂ &lt;code>$GOPATH/src/github.com/user/stringutil/reverse_test.go&lt;/code> Êù•Ê∑ªÂä†ÊµãËØïÂà∞ &lt;code>stringutil&lt;/code> ÂåÖÔºåÂåÖÂê´Â¶Ç‰∏ã‰ª£Á†Å:&lt;/p>
&lt;p>ÁÑ∂ÂêéÁî® &lt;code>go test&lt;/code> Êù•ËøêË°åÊµãËØï„ÄÇ&lt;/p>
&lt;pre>&lt;code>$ go test github.com/user/stringutil
ok github.com/user/stringutil 0.165s
&lt;/code>&lt;/pre>
&lt;p>ÂêåÊ†∑ÔºåÂ¶ÇÊûú‰Ω†Â∞±Âú®ÂåÖË∑ØÂæÑ‰∏ãÔºåÂèØ‰ª•Áõ¥Êé•ÊâßË°å:&lt;/p>
&lt;pre>&lt;code>$ go test
ok github.com/user/stringutil 0.165s
&lt;/code>&lt;/pre>
&lt;p>ÊâßË°å &lt;code>go help test&lt;/code> ÂèØ‰ª•ÁúãÂà∞ÊµãËØïÂåÖÁöÑÊñáÊ°£„ÄÇ&lt;/p>
&lt;blockquote>
&lt;h2 id="ËøúÁ®ãÂåÖ">ËøúÁ®ãÂåÖ &lt;a href="#%e8%bf%9c%e7%a8%8b%e5%8c%85" class="anchor">üîó&lt;/a>&lt;/h2>&lt;/blockquote>
&lt;p>ÂØºÂÖ•Ë∑ØÂæÑÂèØ‰ª•Áî®Êù•ÊèèËø∞Â¶Ç‰ΩïÈÄöËøá Git Êàñ Mercurial ËøôÊ†∑ÁöÑÁâàÊú¨ÊéßÂà∂Á≥ªÁªüÊù•Ëé∑ÂèñÂåÖÊ∫êÁ†Å„ÄÇgo Â∑•ÂÖ∑ÈÄöËøáËøô‰∏™ÁâπÊÄßÊù•‰ªéËøúÁ´ØËá™Âä®Ëé∑ÂèñÂåÖ„ÄÇ‰æãÂ¶ÇÔºåÊú¨ÊñáÊ°£‰∏≠ÁöÑ‰æãÂ≠êÊúâ‰∏™ÊâòÁÆ°Âú® Github ‰∏äÁöÑ Git ‰ªìÂ∫ì &lt;a href="https://github.com/golang/example">github.com/golang/example&lt;/a>„ÄÇÂ¶ÇÊûú‰Ω†Âú®ÂØºÂÖ•Êó∂Âä†‰∏äËøô‰∏™‰ªìÂ∫ìÔºågo get ‰ºöËá™Âä®Ëé∑ÂèñÔºåÊûÑÂª∫Âπ∂ÂÆâË£ÖËøô‰∏™ÂåÖ„ÄÇ&lt;/p>
&lt;pre>&lt;code>$ go get github.com/golang/example/hello
$ $GOPATH/bin/hello
HelloÔºåGo examplesÔºÅ
&lt;/code>&lt;/pre>
&lt;p>Â¶ÇÊûúÁâπÂÆöÁöÑ‰∏Ä‰∏™ÂåÖÊ≤°ÊúâÂú®Â∑•‰ΩúÁ©∫Èó¥‰∏≠Ôºå&lt;code>go get&lt;/code> ‰ºöÂ∞ÜÂÆÉÊîæÂú® &lt;code>GOPATH&lt;/code> ÊåáÂÆöÁöÑÁ¨¨‰∏Ä‰∏™Â∑•‰ΩúÁ©∫Èó¥„ÄÇ(Â¶ÇÊûúËøô‰∏™ÂåÖÂ∑≤ÁªèÂ≠òÂú®ÔºåÈÇ£‰πà &lt;code>go get&lt;/code> ‰ºöË∑≥ËøáËé∑ÂèñËøúÁ®ã‰ª£Á†ÅÔºå‰ªÖËøõË°å &lt;code>go install&lt;/code> Ê≠•È™§)„ÄÇ&lt;/p>
&lt;p>ÊâßË°åËøá‰∏äËø∞ÁöÑ &lt;code>go get&lt;/code> ÂëΩ‰ª§ÂêéÔºåÂ∑•‰ΩúÁõÆÂΩï‰ºöÂèòÊàê‰∏Ä‰∏ãÁªìÊûÑ:&lt;/p>
&lt;pre>&lt;code>bin/
hello
pkg/
linux_amd64/ # ÂèñÂÜ≥‰∫é‰Ω†‰ΩøÁî®ÁöÑÊìç‰ΩúÁ≥ªÁªüÂíåÊû∂ÊûÑ
github.com/golang/example/
stringutil.a # ÂåÖÈ°πÁõÆ
github.com/user/
stringutil.a # ÂåÖÈ°πÁõÆ
src/
github.com/golang/example/
hello/
hello.go
stringutil/
reverse.go
reverse_test.go
github.com/user/
hello/
hello.go
stringutil/
reverse.go
reverse_test.go
&lt;/code>&lt;/pre>
&lt;p>ÊâòÁÆ°Âú® &lt;code>GitHub&lt;/code> ‰∏äÁöÑ &lt;code>hello&lt;/code> ÂëΩ‰ª§‰æùËµñ‰∫éÂêå‰∏Ä‰∏™‰ªìÂ∫ìÈáåÁöÑ &lt;code>stringutil&lt;/code> ÂåÖ„ÄÇ&lt;code>hello.go&lt;/code> Êñá‰ª∂ÈáåÂØºÂÖ•ÂåÖÊó∂‰ΩøÁî®‰∫ÜÂêåÊ†∑ÁöÑÂØºÂÖ•ËßÑÂàôÔºåÂõ†Ê≠§ &lt;code>go get&lt;/code> ÂëΩ‰ª§ÂèØ‰ª•ÂÆö‰ΩçÂπ∂ÂÆâË£ÖËøô‰∏™‰æùËµñ„ÄÇ&lt;/p>
&lt;p>&lt;code>import &amp;quot;github.com/golang/example/stringutil&amp;quot;&lt;/code> ËøôÁßçÊñπÊ≥ïÊòØ‰Ωø‰Ω†ÁöÑÂåÖÂèØ‰ª•Ë¢´Âà´‰∫∫‰ΩøÁî®ÁöÑÊúÄÁÆÄÂçïÈÄîÂæÑ„ÄÇ &lt;code>Go Wiki&lt;/code> Âíå &lt;code>godoc.org&lt;/code> Êèê‰æõ‰∫ÜÂÖ∂‰ªñ &lt;code>Go&lt;/code> È°πÁõÆÂàóË°®„ÄÇ&lt;/p>
&lt;p>Êü•Áúã &lt;code>go help importpath&lt;/code> Êù•‰∫ÜËß£Êõ¥Â§öÈÄöËøá &lt;code>go tool&lt;/code> ‰ΩøÁî®ËøúÁ®ã‰ªìÂ∫ìÁöÑ‰ø°ÊÅØ„ÄÇ&lt;/p></description></item><item><title>Â¶Ç‰ΩïÁºñÂÜô Go - Part1</title><link>https://www.peterlau.xyz/posts/how-to-write-go-code-cn-part-1/</link><pubDate>Wed, 19 Apr 2017 11:49:05 +0800</pubDate><guid>https://www.peterlau.xyz/posts/how-to-write-go-code-cn-part-1/</guid><description> &lt;h3 id="ÁÆÄ‰ªã">ÁÆÄ‰ªã &lt;a href="#%e7%ae%80%e4%bb%8b" class="anchor">üîó&lt;/a>&lt;/h3>&lt;p>Êú¨ÊñáÊ°£ÊèèËø∞‰∫ÜÂ¶Ç‰ΩïÂºÄÂèë‰∏Ä‰∏™ÁÆÄÂçïÁöÑ &lt;code>Go&lt;/code> ÂåÖÔºåÂπ∂‰ªãÁªç‰∫ÜËé∑ÂèñÔºåÊûÑÂª∫ÂíåÂÆâË£Ö &lt;code>Go&lt;/code> ÂåÖÂíåÂëΩ‰ª§ÁöÑÊ†áÂáÜÊñπÊ≥ï &lt;code>go tool&lt;/code>„ÄÇ&lt;/p>
&lt;p>&lt;code>go tool&lt;/code> Ë¶ÅÊ±Ç‰Ω†‰ª•‰∏ÄÁßçÁâπÊÆäÁöÑÊñπÂºèÁªÑÁªá‰ª£Á†Å„ÄÇËØ∑ËØ¶ÁªÜÈòÖËØªÊú¨ÊñáÊ°£„ÄÇÂÆÉ‰ªãÁªç‰∫ÜËÆæÁΩÆÂíåËøêË°å &lt;code>Go&lt;/code> ÁöÑÊúÄÁÆÄÂçïÊñπÊ≥ï„ÄÇ&lt;/p>
&lt;h3 id="‰ª£Á†ÅÁªÑÁªá">‰ª£Á†ÅÁªÑÁªá &lt;a href="#%e4%bb%a3%e7%a0%81%e7%bb%84%e7%bb%87" class="anchor">üîó&lt;/a>&lt;/h3>&lt;h4 id="Ê¶ÇËßà">Ê¶ÇËßà &lt;a href="#%e6%a6%82%e8%a7%88" class="anchor">üîó&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;code>Go&lt;/code> Á®ãÂ∫èÂëòÈÄöÂ∏∏Â∞ÜÂÖ®ÈÉ®ÁöÑ &lt;code>Go&lt;/code> ‰ª£Á†ÅÊîæÂú®ÂçïÁã¨ÁöÑÂ∑•‰ΩúÁ©∫Èó¥„ÄÇ&lt;/li>
&lt;li>‰∏Ä‰∏™Â∑•‰ΩúÁ©∫Èó¥ÂåÖÂê´‰∫ÜÂæàÂ§öÁâàÊú¨ÊéßÂà∂‰ªìÂ∫ì (‰æãÂ¶ÇÁî± &lt;code>Git&lt;/code> ÁÆ°ÁêÜ)„ÄÇ&lt;/li>
&lt;li>ÊØè‰∏™‰ªìÂ∫ìÂåÖÂê´‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂåÖ„ÄÇ&lt;/li>
&lt;li>ÊØè‰∏™ÂåÖÁî±ÂçïÁã¨ÁõÆÂΩï‰∏ã‰∏Ä‰∏™ÊàñÂ§ö‰∏™ &lt;code>Go&lt;/code> Ê∫ê‰ª£Á†ÅÁªÑÊàê„ÄÇ&lt;/li>
&lt;li>ÂåÖÊñá‰ª∂Â§πË∑ØÂæÑÂÜ≥ÂÆö‰∫ÜÂåÖÁöÑ &lt;code>import path&lt;/code> „ÄÇ&lt;/li>
&lt;/ul>
&lt;p>Ê≥®ÊÑèÔºå&lt;code>Go&lt;/code> ÁöÑ‰ª£Á†ÅÁªÑÁªá‰∏éÂÖ∂‰ªñÁºñÁ®ãËØ≠Ë®Ä‰∏çÂêåÂú®ÊØè‰∏™È°πÁõÆÁî±Ëá™Â∑±Áã¨Á´ãÁöÑÂ∑•‰ΩúÁ©∫Èó¥Ôºå ËÄå‰∏îÂ∑•‰ΩúÁ©∫Èó¥‰∏éÁâàÊú¨ÊéßÂà∂‰ªìÂ∫ìÁ¥ßÂØÜËÅîÁ≥ª„ÄÇ&lt;/p>
&lt;h4 id="Â∑•‰ΩúÁ©∫Èó¥">Â∑•‰ΩúÁ©∫Èó¥ &lt;a href="#%e5%b7%a5%e4%bd%9c%e7%a9%ba%e9%97%b4" class="anchor">üîó&lt;/a>&lt;/h4>&lt;p>Â∑•‰ΩúÁ©∫Èó¥ÊòØ‰∏Ä‰∏™Áî±‰∏â‰∏™Â≠êÁõÆÂΩïÁªÑÊàêÁöÑÊñá‰ª∂Â§π&lt;/p>
&lt;ul>
&lt;li>&lt;code>src&lt;/code> ÂåÖÂê´ &lt;code>Go&lt;/code> Ê∫ê‰ª£Á†ÅÊñá‰ª∂&lt;/li>
&lt;li>&lt;code>pkg&lt;/code> ÂåÖÂê´ &lt;code>Go&lt;/code> ÂåÖ&lt;/li>
&lt;li>&lt;code>bin&lt;/code> ÂåÖÂê´ÂèØÊâßË°åÂëΩ‰ª§&lt;/li>
&lt;/ul>
&lt;p>&lt;code>go tool&lt;/code> ÁºñËØëÊ∫êÁ†ÅÂåÖÂπ∂Â∞ÜÁîüÊàêÁöÑ‰∫åËøõÂà∂Êñá‰ª∂ÂÆâË£ÖÂà∞ &lt;code>pkg&lt;/code> Âíå &lt;code>bin&lt;/code> Êñá‰ª∂Â§π„ÄÇ&lt;/p>
&lt;p>&lt;code>src&lt;/code> Â≠êÁõÆÂΩïÈÄöÂ∏∏ÂåÖÂê´Â§ö‰∏™ÁâàÊú¨ÊéßÂà∂‰ªìÂ∫ì(Â¶Ç &lt;code>Git&lt;/code> Êàñ &lt;code>Mercurial&lt;/code> )ÔºåË∑üË∏™‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂåÖÁöÑÂºÄÂèë„ÄÇ&lt;/p>
&lt;p>‰∏ãËæπÁöÑ‰æãÂ≠êËÆ©‰Ω†Áúã‰∏ãÂÆûÈôÖÁöÑÂ∑•‰ΩúÁ©∫Èó¥Ê†∑Â≠êÔºö&lt;/p>
&lt;pre>&lt;code>bin/
hello # command executable
outyet # command executable
pkg/
linux_amd64/
github.com/golang/example/
stringutil.a # package object
src/
github.com/golang/example/
.git/ # Git repository metadata
hello/
hello.go # command source
outyet/
main.go # command source
main_test.go # test source
stringutil/
reverse.go # package source
reverse_test.go # test source
golang.org/x/image/
.git/ # Git repository metadata
bmp/
reader.go # package source
writer.go # package source
... (many more repositories and packages omitted) ...
&lt;/code>&lt;/pre>
&lt;p>‰∏äËæπÁöÑÊñá‰ª∂Ê†ëÂ±ïÁ§∫‰∫Ü‰∏Ä‰∏™ÂåÖÂê´‰∏§‰∏™‰ªìÂ∫ì(&lt;code>example&lt;/code> Âíå&lt;code> image&lt;/code>)ÁöÑÂ∑•‰ΩúÁ©∫Èó¥„ÄÇ&lt;code>example&lt;/code> ‰ªìÂ∫ìÂåÖÂê´‰∏§‰∏™ÂëΩ‰ª§(&lt;code>hello&lt;/code> Âíå &lt;code>outyet&lt;/code>)‰ª•Âèä‰∏Ä‰∏™ÂåÖ(&lt;code>stringutil&lt;/code>)„ÄÇ&lt;code>image&lt;/code> ‰ªìÂ∫ìÂåÖÂê´ &lt;code>bmp&lt;/code> ÂåÖÂíåÂÖ∂‰ªñÂåÖ„ÄÇ&lt;/p>
&lt;p>‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑÂ∑•‰ΩúÁ©∫Èó¥ÂåÖÂê´Â§ö‰∏™‰ªìÂ∫ìÂíåÂëΩ‰ª§„ÄÇ Â§ßÈÉ®ÂàÜ &lt;code>Go&lt;/code> Á®ãÂ∫èÂëòÂ∞ÜÂÖ®ÈÉ® &lt;code>Go&lt;/code> Ê∫ê‰ª£Á†ÅÂíå‰æùËµñÊîæÂú®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÂ∑•‰ΩúÁ©∫Èó¥‰∏≠„ÄÇ&lt;/p>
&lt;p>ÂëΩ‰ª§ÂíåÂ∫ìÊòØÁî±Â§öÁßçÊ∫êÁ†ÅÂåÖÊûÑÂª∫ËÄåÊù•„ÄÇ Êàë‰ª¨Á®çÂêé‰ºöËÆ®ËÆ∫Ëøô‰∏™Âå∫Âà´„ÄÇ&lt;/p>
&lt;h4 id="gopath-ÁéØÂ¢ÉÂèòÈáè">&lt;code>GOPATH&lt;/code> ÁéØÂ¢ÉÂèòÈáè &lt;a href="#gopath-%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f" class="anchor">üîó&lt;/a>&lt;/h4>&lt;p>&lt;code>GOPATH&lt;/code> ÁéØÂ¢ÉÂèòÈáèÊåáÂÆö‰∫ÜÂ∑•‰ΩúÁ©∫Èó¥ÁöÑ‰ΩçÁΩÆ„ÄÇÈªòËÆ§ÊòØ‰Ω†ÁöÑÂÆ∂ÁõÆÂΩï‰∏ãÂè´ÂÅö &lt;code>go&lt;/code> ÁöÑÊñá‰ª∂Â§π( &lt;code>UNIX&lt;/code> ‰∏ãÊòØ &lt;code>$HOME/go&lt;/code>Ôºå&lt;code>Paln9&lt;/code> ‰∏ãÊòØ &lt;code>$home/go&lt;/code>Ôºå &lt;code>Windows&lt;/code> ‰∏ã &lt;code>%USERPROFILE%\go&lt;/code> ( ÈÄöÂ∏∏ÊòØ &lt;code>C:\Users\YourName\go&lt;/code> ) )„ÄÇÂ¶ÇÊûú‰Ω†ÊÉ≥Âú®Âè¶Â§ñ‰∏Ä‰∏™‰ΩçÁΩÆ‰∏ãÂ∑•‰ΩúÔºå ‰Ω†ÈúÄË¶ÅËÆæÁΩÆ &lt;code>GOPATH&lt;/code> ‰∏∫Âè¶Â§ñ‰∏Ä‰∏™‰ΩçÁΩÆ„ÄÇ(Âè¶‰∏Ä‰∏™Â∏∏Áî®ËÆæÁΩÆÊñπÊ≥ïÊòØËÆæÁΩÆ &lt;code>GOPATH&lt;/code> ‰∏∫ &lt;code>$HOME&lt;/code>„ÄÇ) Ê≥®ÊÑè &lt;code>GOPATH&lt;/code> ‰∏çËÉΩÊòØ &lt;code>Go&lt;/code> ÂÆâË£ÖË∑ØÂæÑ„ÄÇ&lt;/p>
&lt;p>&lt;code>go env GOPATH&lt;/code> ÂëΩ‰ª§ÊâìÂç∞Âá∫ÂΩìÂâçÊúâÊïà &lt;code>GOPATH&lt;/code> ÔºõÂ¶ÇÊûúÊ≤°ËÆæÁΩÆËøô‰∏™ÂÄºÔºåÂ∞±ÊâìÂç∞Âá∫ÈªòËÆ§‰ΩçÁΩÆ„ÄÇ&lt;/p>
&lt;p>ÁÆÄ‰æøËµ∑ËßÅÔºåÂ∞ÜÂ∑•‰ΩúÁ©∫Èó¥ÁöÑ &lt;code>bin&lt;/code> Â≠êÁõÆÂΩïÊ∑ªÂä†Âà∞ &lt;code>PATH&lt;/code> ÂèòÈáèÈáå:&lt;/p>
&lt;p>&lt;code>$ export PATH=$PATH:$(go env GOPATH)/bin&lt;/code>&lt;/p>
&lt;p>ÊñáÊ°£Ââ©‰ΩôÁöÑ‰ª£Á†ÅÁâáÊÆµ‰ΩøÁî® &lt;code>$GOPATH&lt;/code> Êõø‰ª£ &lt;code>$(go env GOPATH)&lt;/code>„ÄÇ ‰∏∫‰∫ÜËÆ©ËÑöÊú¨ÂèØ‰ª•Âú®‰Ω†Ê≤°ËÆæÁΩÆ &lt;code>GOPATH&lt;/code> ÁöÑÊÉÖÂÜµ‰∏ãËøêË°åÔºå‰Ω†ÂèØ‰ª•Âú®Ëøô‰∫õÂëΩ‰ª§ÈáåÊõøÊç¢ &lt;code>$HOME/go&lt;/code> ÊàñËÄÖËøêË°å&lt;/p>
&lt;p>&lt;code>$ export GOPATH=$(go env GOPATH)&lt;/code>&lt;/p>
&lt;p>ÊÉ≥‰∫ÜËß£Êõ¥Â§öÂÖ≥‰∫é &lt;code>GOPATH&lt;/code> ÁéØÂ¢ÉÂèòÈáèÁöÑ‰ø°ÊÅØÔºåÂèØ‰ª•Êü•Áúã &lt;code>go help gopath&lt;/code>&lt;/p>
&lt;p>ÂÖ≥‰∫é‰ΩøÁî®Ëá™ÂÆö‰πâÂ∑•‰ΩúÁ©∫Èó¥ÁöÑÁü•ËØÜÔºåÂèØÊü•ÈòÖ &lt;a href="https://golang.org/wiki/SettingGOPATH">set the GOPATH environment variable&lt;/a>.&lt;/p>
&lt;h4 id="import-paths">Import paths &lt;a href="#import-paths" class="anchor">üîó&lt;/a>&lt;/h4>&lt;p>ÂØºÂÖ•Ë∑ØÂæÑ (&lt;code>import paths&lt;/code>) ÊòØÂîØ‰∏ÄÂú∞Ê†áËØÜ‰∏Ä‰∏™ÂåÖÁöÑÂ≠óÁ¨¶‰∏≤„ÄÇ ‰∏Ä‰∏™ÂåÖÁöÑÂØºÂÖ•Ë∑ØÂæÑÂØπÂ∫îÂ∑•‰ΩúÁ©∫Èó¥ÁöÑ‰ΩçÁΩÆÊàñËÄÖ‰∏Ä‰∏™ËøúÁ´ØÁöÑ‰ª£Á†Å‰ªìÂ∫ì„ÄÇ&lt;/p>
&lt;p>Ê†áÂáÜÂ∫ìÁöÑÂåÖË¢´Ëµã‰∫à‰∫ÜÁ±ª‰ºº&lt;code> &amp;quot;fmt&amp;quot;&lt;/code> Âíå&lt;code> &amp;quot;net/http&amp;quot;&lt;/code> ÁöÑÁº©ÂÜôÂΩ¢Âºè„ÄÇÂØπ‰Ω†Ëá™Â∑±ÁöÑÂåÖÊù•ËØ¥Ôºå‰Ω†ÂøÖÈ°ªÈÄâÊã©‰∏Ä‰∏™‰∏çÂ§ßÂèØËÉΩÂíåÊ†áÂáÜÂ∫ìÊàñÂÖ∂‰ªñÂ§ñÈÉ®Â∫ìÂÜ≤Á™ÅÁöÑÂü∫Ë∑ØÂæÑ„ÄÇ&lt;/p>
&lt;p>Â¶ÇÊûú‰Ω†Â∞Ü‰ª£Á†Å‰øùÂ≠òÂú®Êüê‰∏™Ê∫ê‰ª£Á†ÅÂ∫ì‰∏≠Ôºå ‰Ω†Â∫îËØ•‰ΩøÁî®Ê∫êÁ†ÅÂú∞ÂùÄÁöÑÊ†πÂú∞ÂùÄ‰Ωú‰∏∫‰Ω†ÁöÑÂü∫Ë∑ØÂæÑ„ÄÇ‰æãÂ¶ÇÔºå Â¶ÇÊûú‰Ω†Êúâ‰∏™‰Ωç‰∫é &lt;code>github.com/user&lt;/code> ÁöÑÂ∏êÂè∑Ôºå ËøôÂ∫îËØ•‰Ωú‰∏∫ÂåÖÁöÑÂü∫Ë∑ØÂæÑ„ÄÇ&lt;/p>
&lt;p>Ê≥®ÊÑè‰Ω†ÊûÑÂª∫ÂåÖÂπ∂‰∏çÈúÄË¶ÅÂ∞ÜÂÆÉÊé®ÈÄÅÂà∞ËøúÁ´Ø„ÄÇ ÈÄöËøáÂÅáÂÆö‰Ω†Êú™Êù•‰ºöÊé®ÈÄÅÂà∞ËøúÁ´ØÔºåËÄåÂ≠¶‰π†ÁùÄËøôÊ†∑ÁªÑÁªá‰ª£Á†ÅÔºå‰ªÖ‰ªÖÊòØ‰∏∫‰∫ÜÂ∏ÆÂä©‰Ω†ÂÖªÊàê‰∏Ä‰∏™Â•Ω‰π†ÊÉØ„ÄÇÂÆûÈôÖ‰∏ä‰Ω†ÂèØ‰ª•ÈÄâÂèñ‰ªª‰ΩïË∑ØÂæÑÂêçÔºåÂè™ÈúÄË¶Å‰øùËØÅÂÆÉË∂≥Â§üÈïø‰ªéËÄå‰∏é &lt;code>Go&lt;/code> Ê†áÂáÜÂ∫ìÁîüÊÄÅÁæ§‰∏≠ÁöÑÂÖ∂‰ªñÂåÖ‰∏çÂèëÁîüÂëΩÂêçÂÜ≤Á™Å„ÄÇ&lt;/p>
&lt;p>Êàë‰ª¨‰ºö‰ΩøÁî® &lt;code>github.com/user&lt;/code> ‰Ωú‰∏∫Âü∫Ë∑ØÂæÑ„ÄÇ Âú®‰Ω†ÁöÑÂ∑•‰ΩúÁ©∫Èó¥ÂàõÂª∫‰∏Ä‰∏™ÁõÆÂΩï‰øùÂ≠ò‰ª£Á†Å:&lt;/p>
&lt;p>&lt;code>$ mkdir -p $GOPATH/src/github.com/user&lt;/code>&lt;/p>
&lt;h4 id="‰Ω†ÁöÑÁ¨¨‰∏Ä‰∏™Á®ãÂ∫è">‰Ω†ÁöÑÁ¨¨‰∏Ä‰∏™Á®ãÂ∫è &lt;a href="#%e4%bd%a0%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e7%a8%8b%e5%ba%8f" class="anchor">üîó&lt;/a>&lt;/h4>&lt;p>‰∏∫‰∫ÜÁºñËØëÂπ∂ËøêË°å‰∏Ä‰∏™ÁÆÄÂçïÁ®ãÂ∫èÔºå È¶ñÂÖàÈÄâÊã©‰∏Ä‰∏™ÂåÖË∑ØÂæÑ (Êàë‰ª¨‰ºö‰ΩøÁî® &lt;code>github.com/user/hello&lt;/code> ) Âπ∂ÂàõÂª∫‰∏Ä‰∏™ÂØπÂ∫îÁöÑÊñá‰ª∂Â§π:&lt;/p>
&lt;p>&lt;code>$ mkdir -p $GOPATH/src/github.com/user/hello&lt;/code>&lt;/p>
&lt;p>‰∏ã‰∏ÄÊ≠•ÔºåÂàõÂª∫‰∏Ä‰∏™Âè´ÂÅö &lt;code>hello.go&lt;/code> ÁöÑÊñá‰ª∂Ôºå ÂåÖÂê´‰ª•‰∏ã &lt;code>Go&lt;/code> ‰ª£Á†Å„ÄÇ&lt;/p>
&lt;pre>&lt;code>package main
import &amp;quot;fmt&amp;quot;
func main() {
fmt.Printf(&amp;quot;Hello, world.\n&amp;quot;)
}
&lt;/code>&lt;/pre>
&lt;p>Áé∞Âú®‰Ω†ÂèØ‰ª•ÈÄöËøá &lt;code>go tool&lt;/code> ÁºñËØëÂπ∂ÂÆâË£ÖËøô‰∏™Á®ãÂ∫è:&lt;/p>
&lt;p>&lt;code>go install github.com/user/hello&lt;/code>&lt;/p>
&lt;p>‰Ω†ÂèØ‰ª•Âú®Á≥ªÁªüÁöÑ‰ªª‰ΩïÂú∞ÊñπÊâßË°åËøô‰∏™ÂëΩ‰ª§(ÂΩìÁÑ∂ÈúÄË¶ÅÂú®ÂΩìÂâçÁöÑ &lt;code>shell session&lt;/code> ‰∏ã)„ÄÇ &lt;code>go tool&lt;/code> ÈÄöËøá &lt;code>GOPATH&lt;/code> Â∑•‰ΩúÁ©∫Èó¥‰∏ã &lt;code>github.com/user/hello&lt;/code> ÊâæÂà∞Ê∫ê‰ª£Á†Å„ÄÇ&lt;/p>
&lt;p>Â¶ÇÊûú‰ªéÂåÖÁõÆÂΩïÂÆâË£Ö‰πüÂèØ‰ª•ÂøΩÁï•ÂåÖË∑ØÂæÑ&lt;/p>
&lt;p>&lt;code>$ cd $GOPATH/src/github.com/user/hello&lt;/code>&lt;/p>
&lt;p>&lt;code>go install&lt;/code>&lt;/p>
&lt;p>Ëøô‰∏ÄÂëΩ‰ª§ÁºñËØë &lt;code>hello&lt;/code> ÂëΩ‰ª§Ôºå ‰∫ßÁîü‰∏Ä‰∏™ÂèØÊâßË°åÊñá‰ª∂„ÄÇÈöèÂêéÂ∞ÜÂÖ∂ÂÆâË£ÖÂà∞Â∑•‰ΩúÁ©∫Èó¥ÁöÑ bin Êñá‰ª∂Â§π‰∏ã„ÄÇ Âú®Êàë‰ª¨ÁöÑ‰æãÂ≠ê‰∏≠Ôºå Ëøô‰∏™Ë∑ØÂæÑÊòØ &lt;code>$GOPATH/bin/hello&lt;/code>„ÄÇ&lt;/p>
&lt;p>&lt;code>go tool&lt;/code> Âè™‰ºöÂú®Âá∫Áé∞ÈîôËØØÊó∂ÊâìÂç∞ËæìÂá∫Ôºå Â¶ÇÊûú‰∏äËø∞ÂëΩ‰ª§Ê≤°Êúâ‰ªª‰ΩïËæìÂá∫Â∞±ËØ¥ÊòéÊâßË°åÊàêÂäü‰∫Ü„ÄÇ&lt;/p>
&lt;p>Êàë‰ª¨Áé∞Âú®ÂèØ‰ª•ÈÄöËøáÂÖ®Ë∑ØÂæÑË∞ÉÁî®ÁîüÊàêÁöÑÂèØÊâßË°åÊñá‰ª∂&lt;/p>
&lt;pre>&lt;code>$ $GOPATH/bin/hello
Hello, world.
&lt;/code>&lt;/pre>
&lt;p>Âè¶Â§ñÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÂ∞Ü $GOPATH/bin Ê∑ªÂä†Âà∞ PATHÔºåÂè™ÈúÄË¶ÅÁõ¥Êé•Ë∞ÉÁî®‰∫åËøõÂà∂Êñá‰ª∂ÂêçÂ≠óÔºö&lt;/p>
&lt;pre>&lt;code>$hello
Hello, world.
&lt;/code>&lt;/pre>
&lt;p>Â¶ÇÊûú‰Ω†‰ΩøÁî®ÁâàÊú¨ÊéßÂà∂Á≥ªÁªüÔºå Áé∞Âú®‰Ω†Â∞±ÂèØ‰ª•ÂàùÂßãÂåñ‰∏Ä‰∏™‰ªìÂ∫ì‰∫ÜÔºå Ê∑ªÂä†Êñá‰ª∂ÔºåÊèê‰∫§‰Ω†ÁöÑÁ¨¨‰∏Ä‰∏™‰øÆÊîπ„ÄÇ ÂÜçËØ¥‰∏Ä‰∏ãÔºå Ëøô‰∏ÄÊ≠•ÊòØÂèØÈÄâÁöÑÔºö‰∏çÁî®Ê∫êÁ†ÅÁÆ°ÁêÜÁ≥ªÁªüÔºå‰Ω†‰πüÂèØ‰ª•ÂÜô &lt;code>Go&lt;/code> ‰ª£Á†Å„ÄÇ&lt;/p>
&lt;p>&lt;code>$ cd $GOPATH/src/github.com/user/hello&lt;/code>&lt;/p>
&lt;pre>&lt;code>$ git init
Initialized empty Git repository in /home/user/work/src/github.com/user/hello/.git/
$ git add hello.go
$ git commit -m 'initial commit'
&lt;/code>&lt;/pre>
&lt;p>Â∞Ü‰ª£Á†ÅÊé®ÈÄÅÂà∞ËøúÁ´Ø‰ªìÂ∫ìÂ∞±ÁïôÁªôËØªËÄÖ‰Ωú‰∏∫ÁªÉ‰π†‰∫Ü„ÄÇ&lt;/p></description></item><item><title>Vagrant Blog ÊµãËØï</title><link>https://www.peterlau.xyz/posts/vagrant_test/</link><pubDate>Mon, 22 Jun 2015 12:14:54 +0000</pubDate><guid>https://www.peterlau.xyz/posts/vagrant_test/</guid><description> &lt;p>Vagrant Âíå Docker ÁöÑÂá∫Áé∞Ôºå ‰ΩøÂæóÂºÄÂèëÁéØÂ¢ÉÁöÑÈÉ®ÁΩ≤ÊûÅÂÖ∂‰æøÊç∑„ÄÇÂºÄÂèëËÄÖÂèØ‰ª•Êó†ËßÜ‰∏ªÊú∫ÁöÑÊìç‰ΩúÁéØÂ¢ÉËÄåÁû¨Èó¥ËøõÂÖ•ÂºÄÂèëÁä∂ÊÄÅ„ÄÇ OS ‰πã‰∫âÂèØ‰ª•ÁªìÊùü‰∫Ü„ÄÇ‰∏∫‰∫ÜÂÖºÈ°æÂ®±‰πêÂíåÂºÄÂèëÁöÑÈúÄÊ±ÇÔºåÂÆåÂÖ®ÂèØ‰ª•Âú® windows Á≥ªÁªü‰∏ãÂÆâË£Ö vagrantÔºå‰ªéËÄåËé∑Âæó Linux ÁéØÂ¢É„ÄÇ&lt;/p>
&lt;p>Êú¨ÊñáÂú® Host Êú∫Âô®‰∏ãÁºñÂÜôÔºåÈÄöËøáËΩØÈìæÊé•ÂÖ≥ËÅîÂà∞ Guest Á≥ªÁªüÁöÑ Hexo ÊñáÁ´†Ê∫êÊñá‰ª∂‰∏≠„ÄÇËøõË°åÊµãËØï„ÄÇ&lt;/p>
&lt;p>by &lt;strong>Peter Lau&lt;/strong>&lt;/p></description></item><item><title>ÈíàÂØπ GOEAST ÁöÑ Python ËÑöÊú¨</title><link>https://www.peterlau.xyz/posts/python-script-for-goeast/</link><pubDate>Sun, 16 Nov 2014 19:49:49 +0000</pubDate><guid>https://www.peterlau.xyz/posts/python-script-for-goeast/</guid><description> &lt;p>ÁúüÊ≤°ÊâìÁÆóÊúâ‰∫∫ËÉΩÊêúÂà∞Ëøô‰∏™ÊñáÁ´†, ËøáÂéª‰∏§Âë®Êó∂Èó¥, ‰∏∫‰∫ÜËÉΩÊâπÈáè‰ªé GOEAST (‰∏≠ÂõΩÁßëÂ≠¶Èô¢Âü∫Âõ†ÊâÄÁöÑ GO ÂØåÈõÜËÅöÁ±ªÂàÜÊûêÊúçÂä°) ‰∏ãËΩΩÂàÜÊûêÁªìÊûú, ÊàëÂÜô‰∫ÜËøô‰∏™ËÑöÊú¨. Á≠â‰∫éÊòØÂ§ç‰π†‰∫Ü Requests Ëøô‰∏™httpÁΩëÁªúÂ∫ì.&lt;/p>
&lt;p>Êï¥‰∏™ÁöÑÈ£éÊ†ºÊòØËøáÁ®ãÂºèÁöÑ. Â§öÊñá‰ª∂‰ªªÂä°Ê≤°ÊúâËøõË°åÂ§öÁ∫øÁ®ãÊàñÂ§öËøõÁ®ã‰ºòÂåñ, ÂØºËá¥ÊïàÁéáÊûÅ‰Ωé‰∏ã. Êõ¥Â§ö‰ª£Á†ÅËßÅ[Github][1]&lt;/p>
&lt;p>[1]: &lt;a href="https://github.com/Peter">https://github.com/Peter&lt;/a> Lau/Userscript/blob/master/python/spiders/dataup.py&lt;/p></description></item><item><title>‰ΩøÁî®PHPÂºÄÂèëÁΩëÁ´ôÁöÑ‰∏ö‰ΩôÈÄâÊâãÊÑüÊÉ≥</title><link>https://www.peterlau.xyz/posts/use-php-make-a-website/</link><pubDate>Fri, 14 Nov 2014 21:41:37 +0000</pubDate><guid>https://www.peterlau.xyz/posts/use-php-make-a-website/</guid><description> &lt;p>ËøôÊòØ‰∏™ÁñØÁãÇÁöÑÊó∂‰ª£. Ëá™‰ªé Facebook ËØûÁîü‰ª•Êù•, Âú∞ÁêÉ‰∏äÂá∫Áé∞‰∫ÜÂ§™Â§öËØ≠Ë®ÄÂèØ‰ª•ÁºñÂÜôÁΩëÈ°µÂ∫îÁî®. ‰ªé‰øùÁΩóÊ†ºÈõ∑ÂéÑÂßÜÊé®Â¥áÁöÑ LISP/Arc Âà∞ÊúÄËøëÁöÑÊñ∞ÁîüËØ≠Ë®Ä Go. ÂÖ∂‰∏≠ÊúÄÊàêÂäüÁöÑÂΩìÂ±û PHP.ÁúãÁúãÂΩì‰∏ãÂüπËÆ≠Êú∫ÊûÑÁöÑÁÅ´ÁàÜÂ∞±ÂèØ‰ª•Áü•ÈÅì, ËÄå‰∏îÂõΩÂÜÖÂêÑÂ§ßÁΩëÁªúÊúçÂä°ÊãõÂãüÁöÑ‰πüÈÉΩÊòØ PHP ÊñπÈù¢ÁöÑ‰∫∫. ‰ªéÁôæÂ∫¶Âà∞ÈòøÈáå, ‰ªéÊñ∞ÂÖ¥Â∞èÁ±≥Âà∞Âàõ‰∏öÊú∫ÊûÑ, ‰ºº‰πé Python/Ruby/Node Ëøô‰∫õÊñ∞ÊàêÂëòÊ≤°ÊúâÂàÜËµ∞Â§™Â§ö‰ªΩÈ¢ù, Âä†‰∏ä ASP.net Âíå Java. ËøôÊâçÊòØ‰∏âÂº∫‰∫âÈú∏. PHP ÁöÑËØ≠Ë®ÄÁâπËâ≤Âπ∂‰∏ç‰∏∫‰∫∫Êé®Â¥á, ‰ΩÜÂÖ∂Âø´ÈÄüÈÉ®ÁΩ≤, ‰æø‰∫éÂèëÂ∏ÉÁöÑÁâπËâ≤ÂÜ≥ÂÆö‰∫ÜÂÖ∂ÊµÅË°åÂ∫¶.&lt;/p>
&lt;p>PHP ÁöÑËØ≠Ê≥ïÂπ∂‰∏çÂ§çÊùÇ, Â∞±ÂÉèÊòØËÑöÊú¨ÂåñÁöÑ C ËØ≠Ë®Ä, Âè™ÈúÄË¶Å‰∏ÄÂè∞ÊîØÊåÅ PHP Ëß£ÊûêÁöÑÊúçÂä°Âô®, Êîæ‰∏ä‰ª£Á†Å, ËÆæÁΩÆÂ•ΩÂüüÂêç, OK ‰∏ÄÂàáÂ∞±Áª™, È°πÁõÆ‰∏äÁ∫ø‰∫Ü.&lt;/p>
&lt;p>ÈöèÁùÄÊó∂Èó¥ÂèëÂ±ï, PHP ‰πüÂèòÂæóÊõ¥Âä†Ê®°ÂùóÂåñÂíåÁªÑ‰ª∂Âåñ. Á∫∑ÊùÇÁöÑÊ°ÜÊû∂ÂæÄÂæÄÊâ∞‰π±‰∫Ü‰∫∫‰ª¨ÂØπ‰∫éËØ≠Ê≥ïÁöÑ‰∫ÜËß£, Âú®ÊàëÁúãÊù•ÊúÄ‰Ω≥ÁöÑÂ≠¶‰π†Âú∞ÊñπÂ∞±ÊòØÂÆòÁΩë.&lt;/p>
&lt;p>PHP5 ÂºÄÂßãÊúâ‰∫ÜÈù¢ÂêëÂØπË±°ËØ≠Ê≥ï. ÊîØÊåÅÂ∞ÅË£Ö, ÁªßÊâø. ÁÑ∂ËÄåÂú®ÊàëÁúãÊù•Ê≠£Â∏∏ÁöÑÊµÅÁ®ãÊòØÂÖàËøáÁ®ãÂºè, ÂÜçÈù¢ÂêëÂØπË±°Âåñ, Ëá≥‰∫éÂáΩÊï∞ÂºèÁºñÁ®ãÊõ¥ÂÉèÊòØ‰∏ÄÁßç‰ª£Á†Å‰π¶ÂÜôÈ£éÊ†ºËÄåÈùûÁªÑÁªáÈ£éÊ†º. ‰ΩøÁî®ËøáÁ®ãÂºèÂÜô‰∫ÜÂæàÂ§ö‰ª£Á†ÅÂ§öÊ¨°ÈáçÂ§ç‰∫ÜËá™Â∑±‰ª•Âêé, Â∞±Êõ¥ËÉΩ‰Ωì‰ºöÂà∞Èù¢ÂêëÂØπË±°ÁöÑÂ•ΩÂ§Ñ, ‰ª£Á†ÅÂ§çÁî®.&lt;/p>
&lt;p>APEC ‰ºöËÆÆÁªôÊàë‰ª¨Êîæ‰∫Ü‰∏ÄÂë®ÂÅáÊúü, Âõ†Ê≠§ÊàëÂ∞±ÊäΩ‰∫Ü‰∏§Â§©Êó∂Èó¥‰ΩìÈ™å‰∫Ü‰∏ã PHP Áõ¥Êé•ÂÜôÁΩëÁ´ôÁöÑÈÖ∏ÁàΩ. ÊúçÂä°Âô®‰∏çÁî®ÁÆ°; È°µÈù¢Ê∏≤Êüì, PHP ÂÜÖÂµåÂÖ• HTML; Êï∞ÊçÆÂ∫ìËøûÊé•, &lt;code>mysql_connect()&lt;/code>; CookieÁÆ°ÁêÜ, &lt;code>$_Cookie[]&lt;/code>; GET Âíå POST, &lt;code>$_GET[] $_POST[]&lt;/code>; ‰∏Ä‰∏™Âü∫Êú¨ÁöÑÁΩëÁ´ôÂ∞±ÊòØÈúÄË¶ÅËøô‰∫õÈÉ®ÂàÜ. ÂÖ∂‰∏≠ÂèëÁé∞Ëá™Â∑±ÂÜô‰∏Ä‰∏™È°µÈù¢ËøòÂ•Ω, Â§öÈ°µÈù¢Â∞±Êó†Ê≥ïÊéßÂà∂ÈÇ£‰πàÂ§öÁöÑÂèòÈáèÂêç. Âà∞ËøôÈáå, Âü∫Êú¨ÁöÑÂêéÁ´Ø/ÊúçÂä°Á´ØÂ∞±ÂÅöÂÆå‰∫Ü.&lt;/p>
&lt;p>ÂΩìÁÑ∂‰πü‰ªÖ‰ªÖÊòØÂü∫Êú¨ËÉΩÁî®, ÂæàÂ§öÈ™åËØÅ, ÂºÇÂ∏∏Â§ÑÁêÜÈÉΩÊ≤°Êúâ, ‰πüÊ≤°ÊúâÊµãËØï, Ê®°ÂùóÂåñ. Âü∫Êú¨ÁöÑÂ¢ûÂà†ÊîπÊü•Â∞±Áî®Êéâ‰∫Ü‰∏§Â§©Êó∂Èó¥. ËøôÂ∞±ÊòØÊ°ÜÊû∂ÁöÑÂ®ÅÂäõ, PHP ÁöÑÊ°ÜÊû∂Ë∂ÖÁ∫ß‰πãÂ§ö, Êàë‰ΩøÁî®Ëøá Yii, CI Âíå CakePHP, È≠îÊ≥ï‰∏ÄÊ†∑ÁöÑÊï∞ÊçÆÂ∫ìÊìç‰Ωú, Âø´Êç∑‰ΩÜÂæàËø∑ÊÉë. ÊúÄÂêéÊàëËÆ°ÂàíÊâæÊó∂Èó¥Áúã‰∏ãcakephp,yii ‰ª•ÂèäLavreal. LavrealÁúãËµ∑Êù•ÊâçÊòØÂÉèÊòØÁé∞‰ª£Ê°ÜÊû∂, ÂæàËø∑‰∫∫.&lt;/p>
&lt;p>ÂÜçËØ¥ËØ¥ÊúÄËøëÂØπWebÂºÄÂèëÁöÑ‰Ωì‰ºö. Âü∫Êú¨‰∏äÂ∑≤ÁªèÂÆåÊàê‰∫Ü È°µÈù¢ÊòæÁ§∫, È°µÈù¢ÈÄªËæë, ÂêéÂè∞Êï∞ÊçÆÁöÑÂàÜÁ¶ª. ÊúçÂä°Á´Ø‰ΩøÁî®ÂêÑÁßçÊúçÂä°Âô®ËØ≠Ë®Ä, Â∫îÁî®Á´ØÈááÁî® AngularJSÁ≠âÂâçÁ´ØÊ°ÜÊû∂, ÊòæÁ§∫Â±Ç‰ΩøÁî® ReactJS, HTMLCSSÊ°ÜÊû∂‰ΩøÁî®Bootstrap/Pure/AmazeÁ≠âUIÊ°ÜÊû∂. Ëøô‰πüÊòØÊàë‰ª•ÂêéÂ≠¶‰π†ÁöÑÊñπÂêë.&lt;/p>
&lt;p>update 2014-11-16&lt;/p>
&lt;p>ÁõÆÂâçËøòÂú®ÂÜôÈÇ£‰∏™Á≠îÈ¢òÁΩëÁ´ôÁöÑÂêéÂè∞ÁÆ°ÁêÜ, Êàë‰πüÂèëÁé∞‰∫Ü PHP ÁöÑÈù¢ÂêëÂØπË±°ÊòØÂ¶ÇÊ≠§ÈáçË¶ÅÁöÑ, Â∏åÊúõËÉΩÂ§üÊâæÂà∞ÂÆûÁé∞Á±ª‰ººÂ§öÂèÇÊï∞, ÂÖ∑ÂêçÂèÇÊï∞ÁöÑÂÜôÊ≥ï. Êï∞ÊçÆÂ∫ìÊ®°ÂùóËøòÊòØÁî®ÁöÑÂ∑≤ÁªèÂ∫üÂºÉÁöÑÊé•Âè£, ËÄå‰∏îËøòÊúâÂæàÂ§öÊï∞ÊçÆÂ∫ìÁöÑÁü•ËØÜ‰∏çÂÖ∑Â§á. ÊúâÊó∂Èó¥ÂÜçÊõøÊç¢Áî®‰∏ä PDO Âêß.&lt;/p>
&lt;p>ÊúÄËøë‰∏ÄÁõ¥ÊòØÂú®Â§ÑÁêÜÂ∫èÂàóÊï∞ÊçÆ, Â∏åÊúõËÉΩÂ§üÊúâÊõ¥Â§öÊó∂Èó¥ÂÜô‰ª£Á†ÅÂïä. ËØïÁî®‰∫Ü‰∏Ä‰∏ã CakePHP ÈÉΩË∑ü ROR Â≠¶‰π†ÁöÑ ËÑöÊâãÊû∂Âêó? Áõ¥Êé•Â∞±‰∫ßÁîü‰∫Ü model view controller, ÊâìÁÆóÁî®ÁùÄ‰∏™ÂºÄÂèë‰∏™Â∞èÂ∫îÁî®Âêß. ÊÅ©&lt;/p></description></item><item><title>Hylang Âø´ÈÄüÊåáÂçó</title><link>https://www.peterlau.xyz/posts/hylang-quickstart/</link><pubDate>Sun, 12 Oct 2014 12:30:43 +0000</pubDate><guid>https://www.peterlau.xyz/posts/hylang-quickstart/</guid><description> &lt;p>ÂâçÂá†Â§©Âú® &lt;a href="http://xahlee.info/">XahLee&lt;/a> ÁöÑÂçöÂÆ¢‰∏äÁúãÂà∞ÂÖ≥‰∫é Ruby Âíå Python ÁöÑËÆ®ËÆ∫, ËØ¥ Python Â§™Ë¶ÅÊ±Ç oop ÂΩ¢ÂºèËÄåÂèà‰∏çÂ§ü oop ,‰æãÂ¶Ç, Ê≤°Êúâ &lt;code>3.times&lt;/code> ËøôÁßçÁî®Ê≥ï, Âç¥Êúâ &lt;code>len(str)&lt;/code> , ËÄå‰∏î‰∏çÂ§üÂáΩÊï∞Âºè ( &amp;laquo;ÈªëÂÆ¢‰∏éÁîªÂÆ∂&amp;raquo;ÊèêÂà∞ &amp;ldquo;Perl Python Ruby&amp;rdquo;, Ë∂äÂú®ÂêéË∂äÂáΩÊï∞Âºè).&lt;/p>
&lt;ul>
&lt;li>Markdown Êã¨Âè∑Âä†Êã¨Âè∑ Ê†ºÂºèÂ∞±Ê∑∑‰π± Â∞ΩÈáèÂ∞ëÁî®&lt;/li>
&lt;/ul>
&lt;p>‰ªäÂ§©ÁúãÂà∞‰∫Ü Hylang, ‰∏Ä‰∏™ÂÖÅËÆ∏Áî® Lisp È£éÊ†ºÂÜô Python ÁöÑËß£ÈáäÂô®.&lt;/p>
&lt;p>ÁøªËØë‰∏ã5ÂàÜÈíüÂÖ•Èó®:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>(Thanks to Karen Rustad for Cuddles!)&lt;/p>
&lt;p>Âø´ÈÄü‰ΩøÁî® HY:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>ÂàõÂª∫ Python ËôöÊãüÁéØÂ¢É : &lt;a href="http://andyhelix.gitcafe.com/2014/09/10/have-fun-with-django-on-sae/">ËßÅÂâçÁØá&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ÊøÄÊ¥ªËôöÊãüÁéØÂ¢É&lt;/p>
&lt;/li>
&lt;li>
&lt;p>‰ªé PyPI ÂÆâË£Ö hy: &lt;code>pip install hy&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>‰ΩøÁî®&lt;code>hy&lt;/code>ÊâìÂºÄ REPL&lt;/p>
&lt;p>&lt;code>=&amp;gt; (print &amp;quot;Hy!&amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;code>Hy!&lt;/code>&lt;/p>
&lt;p>&lt;code>=&amp;gt; (defn salutationsnm [name] (print (+ &amp;quot;Hy &amp;quot; name &amp;quot;!&amp;quot;)))&lt;/code>&lt;/p>
&lt;p>&lt;code>=&amp;gt; (salutationsnm &amp;quot;YourName&amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;code>Hy YourName!&lt;/code>&lt;/p>
&lt;p>etc&lt;/p>
&lt;p>‰ΩøÁî® CTRL + D ÈÄÄÂá∫&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ËÑöÊú¨ËøêË°å&lt;/p>
&lt;p>‰øùÂ≠ò&lt;code>(print &amp;quot;I was going to code in python syntax, but then I got hy.&amp;quot;)&lt;/code>‰∏∫&lt;code>awesome.hy&lt;/code>&lt;/p>
&lt;p>ÊâßË°å &lt;code>hy awesome.hy&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Take a deep breath so as to not hyperventilate&lt;/p>
&lt;p>Smile villainously and sneak off to your hydeaway and do unspeakable things&lt;/p>
&lt;p>Êó¢ÁÑ∂ Python ‰∏≠ÊúâÊ®°ÂùóÊîØÊåÅÂáΩÊï∞ÂºèÁºñÁ®ã, ËøôÊ†∑‰∏ÄÁßçËß£ÈáäÂô®ÁöÑÊÑè‰πâÂú®Âì™Èáå?&lt;/p>
&lt;p>ÂØπ‰∫éÂ≠¶‰π†‰∏§ÁßçËØ≠Ë®ÄËØ≠Ê≥ïÊ†ëÁöÑËΩ¨Êç¢ÂæàÊúâÊÑèÊÄùÂêß.&lt;/p></description></item><item><title>‰∏ÄÊ¨°Áî± Linux ‰∏ãÊó†Â£∞Èü≥ÂºïÂèëÁöÑÊùÉÈôêÈîôËØØÊÉäÈ≠ÇËÆ∞</title><link>https://www.peterlau.xyz/posts/sudo-mistake/</link><pubDate>Sat, 04 Oct 2014 13:57:00 +0000</pubDate><guid>https://www.peterlau.xyz/posts/sudo-mistake/</guid><description> &lt;p>‰ªäÂ§©ÈÅáÂà∞‰∫Ü‰∏Ä‰∏™ÊÉäÈô©ÁöÑ‰∫ãÊÉÖ, Á¨îËÆ∞Êú¨ÁöÑ Ubuntu Á≥ªÁªüÊ≤°ÊúâÂ£∞Èü≥.&lt;/p>
&lt;p>ÂºÄÂßã‰ª•‰∏∫ÊòØÊ®°ÂùóÊ≤°ÊúâÂä†ËΩΩ, Ê£ÄÊü•ÂêéÂèëÁé∞Ëá™Â∑±ËÆ§‰∏çÂá∫Êù•Âì™‰∏™ÊòØÁöÑ. Áî® alasmixer ÁªìÊûúÊòæÁ§∫ &lt;code> alsamixer cannot open mixer: No such file or directory&lt;/code> Âú®ÁΩë‰∏äÊêú‰∫Ü‰∏ÄÈÄö‰ª•ÂêéÂèëÁé∞, Êúâ‰∏™ÂëΩ‰ª§ÈúÄË¶Å sudo ÊùÉÈôê.&lt;/p>
&lt;p>‰∫éÊòØÂ∞± sudo ÊâßË°å, Âá∫Êù•ÈóÆÈ¢ò‰∫Ü, Â±ÖÁÑ∂ËØ¥Êàë‰∏çÂú® sudoer Áî®Êà∑ÁªÑÈáå.&lt;/p>
&lt;p>‰ΩøÁî® groups Êü•ÁúãÁî®Êà∑ÁªÑ, ÂèëÁé∞Âè™Êúâ username Âíå www-data&lt;/p>
&lt;p>ÁªìÊûúÂæàÊòéÊòæ:&lt;/p>
&lt;p>Êò®Â§©Âú®Áªô yii Ê°ÜÊû∂Áî®Êà∑Êï∞ÊçÆËµã‰∫àÊúçÂä°Âô®ÂÜôÊùÉÈôêÊó∂, ÊàëÁî®ÁöÑÊòØËØ•Ê≠ªÁöÑ &lt;code>usermod -G groupname username&lt;/code> ËøôÂ∞±‰ΩøÂæóÊàëÁöÑÁî®Êà∑ÂêçÁ¶ªÂºÄ‰∫ÜÂÖ∂‰ªñÊâÄÊúâÁöÑÁªÑ.&lt;/p>
&lt;p>ÂÆûÈôÖÂ∫îËØ•‰ΩøÁî® &lt;code>usermod -a -G groupname username&lt;/code>&lt;/p>
&lt;p>ÊàñËÄÖ &lt;code>gpasswd -a username groupname&lt;/code>&lt;/p>
&lt;p>Â•ΩÂêß, ÊàëÁé∞Âú®ÁöÑÈóÆÈ¢òÂ∞±ÊòØË¶ÅÂú®‰∏Ä‰∏™Âè™Êúâ root Âíå‰∏Ä‰∏™ user ÁöÑÊú∫Âô®‰∏ä, ÁªôËøô‰∏™ user sudo ÊùÉÈôê&amp;hellip;&lt;/p>
&lt;p>È¶ñÂÖàÊàëÊ≤°Êúâ‰∏Ä‰∏™ËÉΩÊúâ sudo ÊùÉÈôêÁöÑÂ∏êÂè∑Âïä, root ‰∏çÁü•ÈÅìÊúâÊ≤°ÊúâËÆæÂØÜÁ†Å&amp;hellip;&lt;/p>
&lt;p>ÊÅ©, Á†¥Ëß£ root ÂØÜÁ†Å.&lt;/p>
&lt;p>‰ΩøÁî® grub ËøõÂÖ• &lt;code>init 1&lt;/code> ÁöÑÂçïÁî®Êà∑ÁïåÈù¢&lt;/p>
&lt;p>ÂØπ‰∫Ü, ÁΩë‰∏ä‰∏ÄÂ†Ü grub ÁöÑÂëΩ‰ª§, ÊàëÁöÑÊòØ grub2 &amp;hellip; Âõß&lt;/p>
&lt;p>ÂÖ∂ÂÆûËøòÁÆóÁÆÄÂçï, Âú®ÂêØÂä®È°µÂØπÂ∫îÂêØÂä®È°πÊåâ e , Âú® &lt;code>linux /boot ...&lt;/code> ‰∏ÄÂ†ÜÈáåÁöÑ root ÂèÇÊï∞ÂêéÂä†‰∏ä &lt;code>init 1&lt;/code> ÂÜçÂêéËæπÁöÑÂèÇÊï∞Âà†Âéª, ÁÑ∂ÂêéÂ∞± F10 ÂêØÂä®. OK&lt;/p>
&lt;p>&lt;strong>ÂèçÊÄù&lt;/strong>&lt;/p>
&lt;pre>&lt;code>1. ÂëΩ‰ª§Ë°åËøû‰∏™ÊÅêÊÄñÊèêÁ§∫ÈÉΩÊ≤°Êúâ ‰∏ãÊ¨°ÂèØËÉΩÂ∞± `rm -rf /` ‰∫ÜÂêß...
2. ‰∏ÄÂÆöÊ∑ªÂä†‰∏Ä‰∏™Â§áÁî®Â∏êÂè∑
3. Êàë‰∏ÄÂÆöËÆ∞ÂæóÁªô root Âä†‰∏äÂØÜÁ†Å, ËøôÊ¨°Â•ΩÂ•ΩËÆæÁΩÆËøôÈáå‰∫Ü. ËØ∂Ë¶Å, ÊàëÁöÑ root ÂØÜÁ†ÅÂ§öÂ∞ëÊù•ÁùÄ???
&lt;/code>&lt;/pre></description></item><item><title>Ë∑üÈ£é bash shellshock</title><link>https://www.peterlau.xyz/posts/bash_shellshock/</link><pubDate>Sat, 27 Sep 2014 21:23:53 +0000</pubDate><guid>https://www.peterlau.xyz/posts/bash_shellshock/</guid><description> &lt;p>##‰∫íËÅîÁΩëÂÆâÂÖ®&lt;/p>
&lt;p>‰ø°ÊÅØ‰∏ñÁïå‰ªéÊù•Ê≤°ÊúâÁªùÂØπÁöÑÂÆâÂÖ®, ÊùÉÈôê‰∫âÂ§∫, ËµÑÊ∫ê‰∫âÂ§∫ÊâçÊòØËøôÈáåÊ∞∏ËøúÁöÑ‰∏ªÈ¢ò.&lt;/p>
&lt;p>Linux/Unix ÊÄªË¢´Ê†áÊ¶ú‰∏∫ÂÆâÂÖ®ÊÄßËæÉÂ•ΩÁöÑÁ≥ªÁªü, ÊÜßÊÜ¨ËøôÂÖ®ÁêÉÂºÄÊ∫êÂäõÈáèËÉΩÂ§üËøÖÈÄüËØÜÂà´Âπ∂‰øÆÂ§çÊºèÊ¥û, ÈòªÂáª‰ø°ÊÅØÁÅæÈöæ. Linux Âú®Áª¥Âü∫ÁôæÁßëÁóÖÊØíÊù°ÁõÆ‰∏ã‰ªÖÊúâÁôæ‰Ωô‰∏™Áü•ÂêçÁóÖÊØí, ‰πüÂ∏∏Ë¢´Áî®Êù•ËØ¥ÊòéËøô‰∏ÄÁ≥ªÁªüÁöÑÂÆâÂÖ®ÊÄß. ‰ΩÜÊõ¥Â§öÁöÑ‰∫∫‰ª¨ËøòÊòØÁõ≤ÁõÆÁöÑ, ‰∏ç‰∫ÜËß£ËÉåÂêéÁπÅÊùÇÁöÑ‰ø°ÊÅØÊäÄÊúØÁü•ËØÜ, ‰πüÂè™ËÉΩ‰ªªÂá≠ÂêÑÂÆ∂ÂÆâÂÖ®ÊúçÂä°ÂÖ¨Âè∏ÁöÑËê•ÈîÄ‰∫ßÂìÅÊâìÁùÄÂÆâÂÖ®ÁöÑÂêç‰πâËÇÜÊÑèÊîØÈÖçÁî®Êà∑ÁîµËÑë, ËøôÊòØ windows ‰∏ñÁïåÁöÑÁîªÈù¢. ËÄå Linux Á≥ªÁªü‰∏ãÂë¢? Áº∫‰πèÂèãÂ•ΩÁöÑÂÆâÂÖ®ÊèêÁ§∫, ‰πüÂ∏∏Â∏∏‰ΩøÂæóÊàëÊãÖÂøÉËá™Â∑±Á≥ªÁªüÂÆâÂÖ®ÈóÆÈ¢ò, ÂÖ≥Èó≠Á´ØÂè£, ËÆæÁΩÆÊùÉÈôê, ËÆæÁΩÆÂèØÈù†ÂØÜÁ†Å, ÁúüÁöÑÂèØ‰ª•Èò≤ËåÉ‰ΩèÊù•Ëá™Êú™Áü•‰∏ñÁïåÁöÑ‰æµÂÖ•Âêó?&lt;/p>
&lt;p>&amp;ldquo;ÊàëÁî®ÁöÑÊòØÂ∞è‰ºóÁ≥ªÁªü&amp;rdquo;, &amp;ldquo;Â§ßÂ§öÊï∞ÊîªÂáªÈíàÂØπÊúçÂä°Âô®ÁöÑ&amp;rdquo;, &amp;ldquo;ÊàëÁöÑ‰ø°ÊÅØÊ≤°Êúâ‰ªª‰Ωï‰ª∑ÂÄº&amp;rdquo; Ëøô‰∫õÂÄüÂè£Âè™ÊòØ‰∏ÄÂé¢ÊÉÖÊÑø. ‰æãÂ¶ÇÂàÜÂ∏ÉÂºèÊãíÁªùÂºèÊîªÂáª, ‰ªÖ‰ªÖÊòØÈÄöËøáÂ§ßÈáèÁöÑËÇâÈ∏°Êú∫Âô®ÂèëÈÄÅ‰ø°ÊÅØÂ∞±ÂèØ‰ª•ÂÆåÊàê, Ëøô‰ΩøÁöÑÊØ´Êó†‰ø°ÊÅØ‰ª∑ÂÄºÁöÑ‰∏™‰∫∫ÁîµËÑë‰πüÊàê‰∏∫ÊîªÂáªÁõÆÊ†á. Âè¶Â§ñÈíàÂØπ Linux ÊúçÂä°Âô®ÁöÑÊîªÂáªÂÆåÂÖ®ÂèØ‰ª•Â∫îÁî®Âú®‰∏™‰∫∫ÁîµËÑë‰∏ä.&lt;/p>
&lt;p>‰∏äÊ¨°ÁàÜÂá∫ÁöÑ heartbleed ÊºèÊ¥ûËøòÂèØ‰ª•ËØ¥Á¶ªÊàëÊúâÁÇπËøú, ‰ΩÜËøôÊ¨°ÁöÑ bash shellshock, ÂΩìÂú® shell ‰∏≠Â∫îÁî®ÊµãËØï‰ª£Á†ÅÁöÑÊó∂ÂÄô, ÁúãÂà∞ÁªìÊûúÊâçÊÑüËßâÂà∞ÊºèÊ¥ûÊòØÂ≠òÂú®‰∫éÁ≥ªÁªü‰∏≠ÁöÑ. Â¶Ç‰Ωï‰øÆÂ§çËøô‰∏™ÊºèÊ¥ûÂë¢? Linux ‰∏äÂπ∂Ê≤°ÊúâÁ±ª‰ººÂÆâÂÖ®ÊúçÂä°ÂÖ¨Âè∏‰ºöÂºπÂá∫Á™óÂè£ÂëäËØâ‰Ω†Á≥ªÁªüÂ∑≤Áªè‰øÆÂ§çËØ∑ÈáçÂêØ, ËÄå‰∏îÊåâÁÖßÁõÆÂâçÁöÑÊÉÖÂÜµ, Ëøô‰∏ÄÊºèÊ¥ûËøòÊ≤°ÊúâÂÆåÂÖ®‰øÆÂ§ç. Ê†∑‰æã‰ª£Á†ÅÂè™ÊòØËæìÂá∫‰∏™ËØ≠Âè•, Â¶ÇÊûúÊòØ &lt;code>rm -rf /&lt;/code> Âë¢? Êï¥‰∏™Á≥ªÁªüÈÉΩÂÆå‰∫Ü.&lt;/p>
&lt;p>ÂÆâÂÖ®È¢ÜÂüü‰πüÊòØ‰∏Ä‰∏™Êó†Â∫ïÊ¥ûÂïä.&lt;/p>
&lt;p>&lt;a href="http://zhuanlan.zhihu.com/drops">http://zhuanlan.zhihu.com/drops&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://zhuanlan.zhihu.com/drops/19857156">http://zhuanlan.zhihu.com/drops/19857156&lt;/a>&lt;/p></description></item><item><title>Êñ∞Êµ™‰∫ëÂπ≥Âè∞‰ΩøÁî®DjangoÂ°´ÂùëÊåáÂçó</title><link>https://www.peterlau.xyz/posts/have-fun-with-django-on-sae/</link><pubDate>Wed, 10 Sep 2014 15:09:30 +0000</pubDate><guid>https://www.peterlau.xyz/posts/have-fun-with-django-on-sae/</guid><description> &lt;h2 id="Êñ∞Êµ™‰∫ëÂπ≥Âè∞‰ΩøÁî®ÊâãÂÜå">Êñ∞Êµ™‰∫ëÂπ≥Âè∞‰ΩøÁî®ÊâãÂÜå &lt;a href="#%e6%96%b0%e6%b5%aa%e4%ba%91%e5%b9%b3%e5%8f%b0%e4%bd%bf%e7%94%a8%e6%89%8b%e5%86%8c" class="anchor">üîó&lt;/a>&lt;/h2>&lt;p>&lt;a href="http://sae.sina.com.cn/doc/python/index.html">for python&lt;/a>&lt;/p>
&lt;p>Ê≥®ÊÑè django ÁöÑÂºÄÂèëÊ°ÜÊû∂ÈªòËÆ§ÊòØ 1.4 ÁöÑ, Â¶ÇÊûú‰Ω†Â∑≤ÁªèÂÆâË£Ö‰∫Ü 1.6 ÁîöËá≥ 1.7 ÊÄé‰πàÂäûÂë¢?&lt;/p>
&lt;p>ÂΩìÁÑ∂Áî® virtualenv + virtualenvwrapper ÂíØ&lt;/p>
&lt;p>‰ΩøÁî® &lt;code>pip install virtualenvwrapper&lt;/code> Âú®ÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂ &lt;code>$HOME/.bashrc&lt;/code> ‰∏≠Ê∑ªÂä† &lt;code>source /usr/local/bin/virtualenvwrapper.sh&lt;/code> ÁÑ∂Âêé &lt;code>mkvirtualenv&lt;/code> ÂëΩ‰ª§ÂàõÂª∫Êñ∞ÁéØÂ¢É ÊØîÂ¶Ç &lt;strong>django14&lt;/strong> ËøôÊ†∑Â∞ÜÂú® $HOME/.virtualenvis/ ‰∏≠Âª∫Á´ãÈöîÁ¶ªÁöÑÂºÄÂèëÁéØÂ¢É&lt;/p>
&lt;blockquote>
&lt;p>ÂàáÊç¢ÁéØÂ¢É&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>workon [env]&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>ÈöèÊó∂‰ΩøÁî®‚Äúworkon ÁéØÂ¢ÉÂêç‚ÄùÂèØ‰ª•ËøõË°åÁéØÂ¢ÉÂàáÊç¢ÔºåÂ¶ÇÊûú‰∏çÂ∏¶ÁéØÂ¢ÉÂêçÂèÇÊï∞ÔºåÂàôÊòæÁ§∫ÂΩìÂâç‰ΩøÁî®ÁöÑÁéØÂ¢É&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>deactivate&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Âú®Êüê‰∏™ÁéØÂ¢É‰∏≠‰ΩøÁî®ÔºåÂàáÊç¢Âà∞Á≥ªÁªüÁöÑpythonÁéØÂ¢É&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> ÂÖ∂‰ªñÂëΩ‰ª§
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - showvirtualenv [env] ÊòæÁ§∫ÊåáÂÆöÁéØÂ¢ÉÁöÑËØ¶ÊÉÖ„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - rmvirtualenv [env] ÁßªÈô§ÊåáÂÆöÁöÑËôöÊãüÁéØÂ¢ÉÔºåÁßªÈô§ÁöÑÂâçÊèêÊòØÂΩìÂâçÊ≤°ÊúâÂú®ËØ•ÁéØÂ¢É‰∏≠Â∑•‰Ωú„ÄÇÂ¶ÇÂú®ËØ•ÁéØÂ¢ÉÂ∑•‰ΩúÔºåÂÖà‰ΩøÁî®deactivateÈÄÄÂá∫„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - cpvirtualenv [source] [dest] Â§çÂà∂‰∏Ä‰ªΩËôöÊãüÁéØÂ¢É„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - cdvirtualenv [subdir] ÊääÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïËÆæÁΩÆ‰∏∫ÊâÄÂú®ÁöÑÁéØÂ¢ÉÁõÆÂΩï„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - cdsitepackages [subdir] ÊääÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïËÆæÁΩÆ‰∏∫ÊâÄÂú®ÁéØÂ¢ÉÁöÑsitepackagesË∑ØÂæÑ„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - add2virtualenv [dir] [dir] ÊääÊåáÂÆöÁöÑÁõÆÂΩïÂä†ÂÖ•ÂΩìÂâç‰ΩøÁî®ÁöÑÁéØÂ¢ÉÁöÑpath‰∏≠ÔºåËøôÂ∏∏‰ΩøÁî®‰∫éÂú®Â§ö‰∏™projectÈáåÈù¢ÂêåÊó∂‰ΩøÁî®‰∏Ä‰∏™ËæÉÂ§ßÁöÑÂ∫ìÁöÑÊÉÖÂÜµ„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;blockquote>
&lt;pre>&lt;code> - toggleglobalsitepackages -q ÊéßÂà∂ÂΩìÂâçÁöÑÁéØÂ¢ÉÊòØÂê¶‰ΩøÁî®ÂÖ®Â±ÄÁöÑsitepackagesÁõÆÂΩï„ÄÇ
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;p>Êé•‰∏ãÊù•‰ΩøÁî® django14 ÁéØÂ¢É‰∏≠ÁöÑ django-admin.py ÂàõÂª∫È°πÁõÆ&lt;/p>
&lt;p>&lt;code> ~/.virtualenvs/django14/bin/django-admin.py startproject djangosite&lt;/code>&lt;/p>
&lt;h2 id="sae_restful_mysql-ÈóÆÈ¢ò">sae._restful_mysql ÈóÆÈ¢ò &lt;a href="#sae_restful_mysql-%e9%97%ae%e9%a2%98" class="anchor">üîó&lt;/a>&lt;/h2>&lt;p>Êú¨Ë∫´Áî®‰∫éÂú®Êú¨Âú∞Áõ¥Êé•ÁîüÊàêËøúÁ´ØÊï∞ÊçÆÂ∫ìË°®ÁöÑÂ∫ì, ÈúÄË¶ÅÂÆâË£Ö sae-python-dev Áõ¥Êé• pip install sae-python-dev Âç≥ÂèØ&lt;/p>
&lt;p>Âú®Êú¨Âú∞‰ΩøÁî® python manager.py syncdb Â∞±ÂèØ‰ª•ÂàõÂª∫ËøúÁ´ØÊï∞ÊçÆÂ∫ìË°®‰∫Ü&lt;/p>
&lt;p>Êú¨Âú∞ÂàõÂª∫ÂÆå‰∫Ü, ÊòØ‰∏çÊòØÊå∫È´òÂÖ¥, ‰ΩÜÊòØ‰∏ä‰º†Âà∞ SAE Â∞±‰ºöÊèêÁ§∫ Êâæ‰∏çÂà∞ _restful_mysql ‰∏∫‰Ωï?&lt;/p>
&lt;p>ÂèØËßÅ sae-python-dev ÊòØ‰Ωú‰∏∫Á¨¨‰∏âÊñπÂ∫ìÊèê‰æõÁöÑ. Âõ†Ê≠§ÊàñËÄÖÁî®&lt;a href="http://sae.sina.com.cn/doc/python/faq.html">ÂÆâË£ÖÁ¨¨‰∏âÊñπÂ∫ìÁöÑÊñπÊ≥ï&lt;/a>ÊàñËÄÖ‰∏ä‰º†ÂâçÊ≥®ÈáäÊéâËøô‰∏§Âè•&lt;/p>
&lt;p>PS: ‰ΩøÁî® django1.6 ÂÆûÈôÖÊòØÂèØ‰ª•Áî®ÁöÑ, ÁîöËá≥‰∏çÈúÄË¶ÅËøô‰∏™ monkey Â∞±ÂèØ‰ª•Âú®ËøúÁ´ØÂàõÂª∫Ë°®, ÁúãÊù• SAE Â∑≤ÁªèÊõ¥Êñ∞‰∫ÜÁâàÊú¨‰∫Ü?&lt;/p>
&lt;p>PSS: ÊÄª‰πã, Â∑≤ÁªèÂèØ‰ª•Âú® SAE ‰∏äÂºÄÂèëÂ∏¶Êï∞ÊçÆÂ∫ìÊîØÊåÅÁöÑ Django Â∫îÁî®‰∫Ü. ËÆ©Êàë‰ª¨ÂºÄÂßãÊµ∑Áõó‰πãÊóÖÂíØ&lt;/p></description></item><item><title>ÂºÄÂßã‰ΩøÁî®Docker</title><link>https://www.peterlau.xyz/posts/docker-newer/</link><pubDate>Fri, 05 Sep 2014 20:16:09 +0000</pubDate><guid>https://www.peterlau.xyz/posts/docker-newer/</guid><description> &lt;h1 id="‰ªÄ‰πàÊòØ-docker">‰ªÄ‰πàÊòØ Docker? &lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-docker" class="anchor">üîó&lt;/a>&lt;/h1>&lt;p>GoËØ≠Ë®ÄÁºñÂÜôÁöÑÂ∫îÁî®ÂÆπÂô®.ÊâÄË∞ìÂ∫îÁî®ÂÆπÂô®,Â∞±ÊòØÂèØ‰ª•ÂÉèËôöÊãüÊú∫ÈÇ£Ê†∑‰∏ãËΩΩ‰∏ãÊù•,Â∑≤ÁªèÈÖçÁΩÆÂ•ΩÂ§ßÈÉ®ÂàÜÁöÑÂºÄÂèëÁéØÂ¢É(ÊØîÂ¶ÇÊúâ‰∫Ü‰∏Ä‰∫õ Python ÂåÖ, Gem Ë£ÖÂ•Ω‰∫Ü‰∏ÄÈÉ®ÂàÜ).Êñ∞‰∏Ä‰ª£ÁöÑ‰∏ÄÊ¨°ÊûÑÂª∫Âà∞Â§ÑËøêË°å.ÊçÆËØ¥ÂºÄÂßãÊòØÂü∫‰∫é LXC ,Ëøô‰∏™ËøòÊ≤°ÊúâÁ†îÁ©∂.‰∏çËøáÂ∑≤ÁªèÂÆ£Â∏ÉÂ∞ÜÊù•‰∏çÂÜç‰æùËµñËøô‰∏™, ËÄåÊòØÂèòÊàêÂèØÊèíÊãîÁöÑÊèí‰ª∂, Êèí‰ª∂ÊµÅË°åÂïä.&lt;/p>
&lt;p>ËøôË¥ßÂÉèÊòØ‰∏™ËôöÊãüÊú∫,‰ΩÜ‰∏çÂ∏¶ÂõæÂΩ¢ÁïåÈù¢,ÂΩìÁÑ∂ÂØπÊàëËøôÁßçÂëΩ‰ª§ÊéßÊ≤°ÂΩ±Âìç.ËØ¥Ëµ∑Êù•ÂÉèÊòØÈÄöËøá SSH ËÆøÈóÆVbox.&lt;/p>
&lt;h1 id="ÂºÄÂßã‰ΩøÁî®">ÂºÄÂßã‰ΩøÁî® &lt;a href="#%e5%bc%80%e5%a7%8b%e4%bd%bf%e7%94%a8" class="anchor">üîó&lt;/a>&lt;/h1>&lt;p>Ê≥®ÂÜå docker.io dockerhub Â∏êÂè∑ ‰∏çÊ≥®ÂÜå‰πüÂèØ‰ª•Áî®&amp;hellip;&lt;/p>
&lt;ol>
&lt;li>curl -s &lt;a href="https://get.docker.io/ubuntu/">https://get.docker.io/ubuntu/&lt;/a> | sudo sh&lt;/li>
&lt;li>sudo docker run -i -t ubuntu /bin/bash&lt;/li>
&lt;/ol>
&lt;p>‰∏ãËΩΩÁöÑÊòØ‰∏Ä‰∏™ubuntuÈïúÂÉè ÊàñËÄÖ ubuntu:14.04 ÊåáÂÆöÊòØ 14.04 ÁâàÊú¨&lt;/p>
&lt;p>‰∏ãËΩΩÂêéÁöÑÈïúÂÉèÁß∞‰∏∫ÂÆπÂô®, Âú®ÂÆπÂô®ÂÜÖÂèØ‰ª•ËøêË°åÂ∫îÁî®Â¶Ç bash&lt;/p>
&lt;ol start="3">
&lt;li>sudo docker run ubuntu:14.04 /bin/echo &amp;lsquo;Hello world&amp;rsquo;&lt;/li>
&lt;/ol>
&lt;p>ËæìÂá∫ Hello world Âú®ÂÆπÂô®ÂÜÖÊâßË°å, ËøîÂõûÁªìÊûú&lt;/p>
&lt;ol start="4">
&lt;li>sudo docker run -t -i ubuntu:14.04 /bin/bash&lt;/li>
&lt;/ol>
&lt;p>ÊâßË°å‰∫§‰∫íÂºèÂÆπÂô®, ‰∏çËøáÊòØÂú®14.04ÁâàÊú¨‰∏≠ËøêË°åÁöÑ&lt;/p>
&lt;ol start="5">
&lt;li>ÊØèÊ¨° docker run ÁöÑÊó∂ÂÄôÂ∞±ÊòØÈÄöËøá‰∏Ä‰∏™ÈïúÂÉèÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÂÆπÂô®, Â¶ÇÂêéÂè∞ÂÆπÂô®&lt;/li>
&lt;/ol>
&lt;p>ÂÆàÊä§ËøõÁ®ã sudo docker run -d ubuntu:14.04 /bin/sh -c &amp;ldquo;while true; do echo hello world; sleep 1; done&amp;rdquo;&lt;/p>
&lt;p>ËÑöÊú¨‰ºö‰∏ÄÁõ¥ËæìÂá∫&amp;quot;hello word&amp;quot;&lt;/p>
&lt;p>Âè™ÊúâÈÄöËøá sudo docker ps Êü•ÁúãÂêéÂè∞ËøõÁ®ãÊâæÂà∞Êåá‰ª£ÂêçÁß∞&lt;/p>
&lt;p>ÁÑ∂ÂêéÁî® sudo docker log short-name Êü•ÁúãÁªìÊûú&lt;/p>
&lt;ol start="6">
&lt;li>
&lt;p>sudo docker stop ÁªìÊùüËøô‰∏™ÂêéÂè∞&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Âè™ËæìÂÖ•dockerÊ≤°Êúâ‰ªª‰ΩïÂÖ∂ÂÆÉÈÄâÈ°πÊù•Êü•ÁúãdockerÂÆ¢Êà∑Á´ØÊâÄÊúâÁöÑÂëΩ‰ª§&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ËæìÂÖ•Docker [command]ÔºåËøôÈáå‰ºöÁúãÂà∞dockerÂëΩ‰ª§ÁöÑ‰ΩøÁî®ÊñπÊ≥ïÔºö&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>$ sudo docker attach&lt;/p>
&lt;ol start="9">
&lt;li>sudo docker run -d -P training/webapp python app.py&lt;/li>
&lt;/ol>
&lt;p>-d ÂêéÂè∞ÊâßË°å&lt;/p>
&lt;p>-P dockerÁΩëÁªúÁ´ØÂè£‰ªé‰∏ªÊú∫Êò†Â∞ÑÂà∞ÂÆπÂô®&lt;/p>
&lt;p>training/webapp ÊåáÂÆöÈïúÂÉè&lt;/p>
&lt;p>python ÂÆπÂô®&lt;/p>
&lt;p>see ubuntu version:
cat /etc/issue
see whoami
whoami&lt;/p>
&lt;ol start="10">
&lt;li>Êü•ÁúãwebÂ∫îÁî®ÂÆπÂô®&lt;/li>
&lt;/ol>
&lt;p>sudo docker ps -l # -l ËøîÂõûÊúÄÂêéÁöÑÂÆπÂô®Áä∂ÊÄÅ&lt;/p>
&lt;p>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
9a57847b4be6 training/webapp:latest &amp;ldquo;python app.py&amp;rdquo; 5 minutes ago Up 5 minutes 0.0.0.0:49153-&amp;gt;5000/tcp trusting_sammet&lt;/p>
&lt;p>ÂÆπÂô®ÂºÄÂêØ 5000(python) Á´ØÂè£Êò†Â∞ÑÂà∞‰∏ªÊú∫ 49153 ‰∏ä&lt;/p>
&lt;p>ÂèØ‰ª•ËÆøÈóÆ localhost:49153 Âà∞ÂÆπÂô®ÁöÑwebapp‰∏ä&lt;/p>
&lt;ol start="11">
&lt;li>‰ΩøÁî®docker portÂèØ‰ª•ÊåáÂÆöÂÆπÂô®IDÊàñËÄÖÂêçÂ≠óÊò†Â∞ÑÂà∞‰∏ªÊú∫Á´ØÁöÑÁ´ØÂè£Âè∑&lt;/li>
&lt;/ol>
&lt;p>sudo docker port nostalgic_morse 5000&lt;/p>
&lt;p>Êü•ÁúãÂà∞Á´ØÂè£5000Êò†Â∞ÑÂà∞ÂÆπÂô®Â§ñÁöÑ‰∏ªÊú∫Á´ØÂè£&lt;/p>
&lt;ol start="12">
&lt;li>sudo docker logs -f hungry_stallman&lt;/li>
&lt;/ol>
&lt;p>Êü•ÁúãÂÆπÂô®ÂÜÖÂ∫îÁî®ÂèëÁîüÁöÑÊó•Âøó&lt;/p>
&lt;ol start="13">
&lt;li>sudo docker top hungry_stallman&lt;/li>
&lt;/ol>
&lt;p>Êü•ÁúãÂ∫îÁî®ÁöÑËøáÁ®ã&lt;/p>
&lt;ol start="14">
&lt;li>
&lt;p>‰ΩøÁî®docker inspectÊù•Êü•ÁúãDockerÁöÑÂ∫ïÂ±Ç‰ø°ÊÅØ„ÄÇÂÆÉ‰ºöËøîÂõû‰∏Ä‰∏™JSONÊñá‰ª∂ËÆ∞ÂΩïdockerÂÆπÂô®ÁöÑÈÖçÁΩÆÂíåÁä∂ÊÄÅ‰ø°ÊÅØ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sudo docker stop hungry_stallman&lt;/p>
&lt;p>ÂÅúÊ≠¢ÂÆπÂô®&lt;/p>
&lt;p>sudo docker start hungry_stallman&lt;/p>
&lt;p>ÈáçÂêØÂÆπÂô®&lt;/p>
&lt;p>sudo docker rm hungry_stallman&lt;/p>
&lt;p>Âà†Èô§ÂÆπÂô® == Êàë‰ª¨‰∏çËÉΩÂà†Èô§Ê≠£Âú®ËøêË°åÁöÑÂÆπÂô®&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ëé∑Âèñ‰∏Ä‰∏™Êñ∞ÁöÑÈïúÂÉè&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>sudo docker run -t -i training/sinatra /bin/bash&lt;/p>
&lt;p>ËøõÂÖ•ÂÆπÂô®ÁöÑbash‰∏≠&lt;/p>
&lt;ol start="17">
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>ËøêË°å‰∏Ä‰∏™Â∏¶Ê†áÁ≠æÈïúÂÉèÁöÑÂÆπÂô®Ôºö&lt;/p>
&lt;p>$ sudo docker run -t -i ubuntu:14.04 /bin/bash&lt;/p>
&lt;p>‰æãÂ¶Ç‰Ω†Âè™‰ΩøÁî®UbuntuÔºåDockerÂ∞ÜÈªòËÆ§‰ΩøÁî®Ubuntu:latestÈïúÂÉè„ÄÇ&lt;/p>
&lt;ol start="18">
&lt;li>
&lt;p>sudo docker pull centos Ëé∑ÂèñÊñ∞ÈïúÂÉè&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Â¶Ç‰ΩïÊääÂ§ö‰∏™dockerÂÆπÂô®ËøûÊé•Âú®‰∏ÄËµ∑ÊûÑÂª∫‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÂ∫îÁî®Á®ãÂ∫è&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>HOWTO&lt;/em> ÈÄÄÂá∫docker ‰øùÁïôdockerÈÖçÁΩÆ&amp;hellip;&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>‰∏ÄÂºÄÂßãÊÉ≥ÁùÄËØïËØï perl6 Âë¢,Ë∞ÅÁü•ÈÅìÈÖçÁΩÆÂ•Ω vim (ÂØπÁöÑ, vim ÈÉΩÊ≤°Êúâ, ‰πüÊ≤°ÊúâÂõæÂΩ¢ÁïåÈù¢ Âïä) ÈÄÄÂá∫‰ª•ÂêéÂ∞±‰∏ÄÂàáÈáçÁΩÆ‰∫Ü, ÈöæÈÅìË¶ÅÊåâÁÖß DOCKERFILE ‰ªÄ‰πàÁöÑÊ≠•È™§Ëµ∞Âêó??? ‰ª•ÂêéÂÜçÁúãÂêß. Perl ÁúãÊù•ÂæóÂÜçÊâæÊó∂Èó¥ÁúãÁúã‰∫Ü.&lt;/p></description></item><item><title>ÊúÄËøëÂ≠¶ÁöÑÂá†‰∏™Ê°ÜÊû∂</title><link>https://www.peterlau.xyz/posts/flask_ror_node/</link><pubDate>Mon, 11 Aug 2014 18:47:47 +0000</pubDate><guid>https://www.peterlau.xyz/posts/flask_ror_node/</guid><description> &lt;p>ÊúÄËøëÁúãËØª‰π¶ËØªÁöÑÊå∫Â§ö, Â§ßÈÉ®ÂàÜÈÉΩÊòØÁúãÁöÑFreeÁîµÂ≠ê‰π¶ÂíåÊñáÊ°£, ËÆ°ÁÆóÊú∫ÁúüÊòØÂª∫Á´ãÂú®ÂàÜ‰∫´‰∏äÁöÑÂïä, ÂÖâÊòØFreeÂèëÂ∏ÉÁöÑËµÑÊñôÂ∞±Áúã‰∏çÂÆå. ÁöÑÁ°ÆÊòØ&amp;quot;Âú®Ëøô‰∏™Êó∂‰ª£ËÉΩÂ§üÈôêÂà∂‰Ω†ÁöÑÂè™ÊúâËá™Â∑±ÁöÑÊ±ÇÁü•Ê¨≤&amp;quot;.&lt;/p>
&lt;p>Áé∞Âú®ÊàëÊÉ≥ËØ¥ËØ¥ÊúÄËøëÂíåpython, ruby, nodeÁé©ËÄçÁöÑÊÉÖÂÜµ:&lt;/p>
&lt;p>python ‰∏ªË¶ÅÊòØÂ≠¶Êù•Áî®ÁîüÁâ©‰ø°ÊÅØÁöÑ, Biopython,ÁªìÊûúÂÆûÂú®Ê≤°ÊúâÂÆû‰æãÂ≠¶ÁùÄÊ≤°ÊÑèÊÄù.Âú®Áé©‰∫ÜÂá†‰∏™Ê°ÜÊû∂ÂêéÁªà‰∫éËÉΩÁúã‰∏ãÂéªÂÆÉÁöÑ‰ª£Á†Å‰∫Ü.PythonÊòØÈÄöÁî®ËØ≠Ë®Ä, Áî®Âú®web‰∏ä‰πü‰∏çÈîô, ÊúÄËøëÁúã‰∫Ü webpy Âíå flask, webpyÁúã‰∫ÜÁúãÂÅö‰∫Ü‰∏Ä‰∏™Â∞èÈ°πÁõÆ, ÂèØÊÉúÊ≤°ÊúâÂ§ßÂûãÈ°πÁõÆÁöÑÊ†∑‰æã; django ÂÆåÊàê‰∫ÜÈÇ£‰∏™ÂÖ•Èó®ÊïôÁ®ã, ÊÑüËßâÂêéÂè∞ÁÆ°ÁêÜÂæàÊòØÂº∫Â§ß, ‰ΩÜÁªÜËäÇ‰∏ÄÊó†ÊâÄÁü•.Áü•ÂÖ∂ÁÑ∂‰∏çÁü•‰Ωï‰ª•ÁÑ∂Âïä!&lt;/p>
&lt;p>Flask Â§ßÊ¶ÇÊòØÊàëÊúÄ‰∏ãÂäõÊ∞îÂ≠¶ÁöÑ‰∏Ä‰∏™Ê°ÜÊû∂, ‰∏∞ÂØåÁöÑÊñáÊ°£, ÂÆåÂñÑÁöÑÁªÑÁªáÊñπÂºè, ÂÄºÂæóÂ•ΩÂ•ΩÂ≠¶Â≠¶.Áé∞Âú®ÁúãÁùÄËµÑÊñô, Âç°Âú®ÊùÉÈôêÁÆ°ÁêÜËøôÈáå, ËøòÊòØÊ≤°ÊúâÂæàÂ•ΩÁêÜËß£‰ª£Á†Å‰πãÈó¥ÁöÑÂÖ≥Á≥ª, ‰ΩÜÊòØÁªà‰∫éÂØπwebÂ∫îÁî®ÁöÑÁªÜËäÇÊõ¥‰∫ÜËß£‰∫Ü.&lt;/p>
&lt;p>ruby ÁúüÂøÉ‰ºòÈõÖÁöÑËØ≠Ë®Ä, ÂÜôËµ∑Êù•ÂæàËàíÊúç, ÁªùÂØπÊòØÊàëÁöÑÁ¨¨‰∫åÈÄâÊã©. ÂÆûÂú®‰∏çÊÉ≥Á°¨ÁùÄÂ§¥ÁöÆÂÜôÈùôÊÄÅËØ≠Ë®Ä, Èô§ÈùûÊúâÊÄßËÉΩËØ±ÊÉëÂíåËÑöÊú¨ÂåñÁâπÁÇπ( go ). RubyÁöÑÊ°ÜÊû∂ËÄÅÂ§ßÊòØROR,‰ªäÂ§©‰∏ãÂçàÁî®‰∫Ü‰∏§‰∏™Â∞èÊó∂ÂÜô‰∫Ü‰∏™Âü∫Êú¨ÁöÑÂçöÂÆ¢.ÂèëÂ∏ÉÊñáÁ´†ÂíåËØÑËÆ∫, ÂÖ∂‰ªñÂü∫Êú¨ÂäüËÉΩÊâæÊó∂Èó¥ÂÆûÁé∞Âêß, Â∞±ÊòØÁº∫Êó∂Èó¥.ÂÜôËµ∑Êù•ÂæàÁàΩÂø´, ÂêÑÁßçÁîüÊàêÂô®ÁÆÄÁõ¥ËÆ©Êàë‰∏çÂøçÂÜçÁúãflask,ÊçÆËØ¥pythonÈáåÁöÑdjangoÊòØÂíåROR‰∏ÄÊ†∑ÁöÑÁªÑÁªáÊñπÂºè, ‰ΩÜdjangoÂèØÊ≤°ÊúâËøô‰πàÁàΩÂø´ÁöÑ‰ΩìÈ™å. ËôΩÁÑ∂ÊàëÂ≠¶‰π†ÁöÑÁ¨¨‰∏Ä‰∏™Ê°ÜÊû∂ÊòØsinatra, ‰ΩÜËøòÊòØ‰∏çËÉΩÂÆåÂÖ®ÁêÜËß£ÂæàÂ§öÈ≠îÊ≥ï‰∏ÄÊ†∑ÁöÑ‰ª£Á†Å, sinatraÁöÑÁªÜËäÇËøòÊòØÂæàÊ∏ÖÊô∞ÁöÑÂ±ïÁé∞ÁöÑ. ÁúüÊÉ≥ÂÆåÊàê‰∏Ä‰∏™Â§ßÂûãÂ∫îÁî®Âïä.rorÁöÑRESTfulÈìæÊé•‰πüÂæàÁªèÂÖ∏, flaskÈáåËæπË¶ÅÊòØËÉΩÂä†‰∏äËøô‰∏™Â∞±Â¶ôÊûÅ‰∫Ü. ‰ªéËµÑÊ∫êÂá∫ÂèëÁöÑÂ∫îÁî®ËÆæËÆ°.&lt;/p>
&lt;p>node È´òÂÆûÊó∂È´òÂπ∂Âèë.ÂÜônodeÂΩìÁÑ∂ÊòØ‰ªéÂ∫ïÂ±ÇÂºÄÂßãÂïä, ËôΩÁÑ∂ÂàöÂÆåÊàêÂà∞‰∏ä‰º†Êñá‰ª∂, Â≠¶Ëµ∑Êù•ËøòÊòØÂæàËΩªÊùæÁöÑ.Â∞±ÊòØ&amp;hellip;Êó∂Èó¥Âïä.Êó∂Èó¥.&lt;/p>
&lt;p>Â¶ÇÊûú‰∏Ä‰∏™‰∏çÊòØËÆ°ÁÆóÊú∫‰∏ì‰∏öÊØï‰∏öÁöÑ‰∫∫ÂñúÊ¨¢ÂÜô‰ª£Á†Å, ÈÇ£‰πà‰∏ÄÂÆöÊòØ‰∏∫‰∫ÜÊª°Ë∂≥Â•ΩÂ•áÂøÉÁöÑÂïä.!!!ËøòÊúâÊâæÂ∑•‰Ωú&amp;hellip;&lt;/p>
&lt;p>ÊâæÂ∑•‰ΩúËøòÊòØÂæóÁúãÁúãphp&amp;hellip;ÂìàÂìàÂìà!!!&lt;/p></description></item><item><title>ÊµãËØïHexoÂõæÁâá</title><link>https://www.peterlau.xyz/posts/test_hexo_image/</link><pubDate>Fri, 18 Apr 2014 21:44:32 +0000</pubDate><guid>https://www.peterlau.xyz/posts/test_hexo_image/</guid><description> &lt;h3 id="ÂõæÁâá">ÂõæÁâá &lt;a href="#%e5%9b%be%e7%89%87" class="anchor">üîó&lt;/a>&lt;/h3>&lt;p>&lt;img src="http://t.williamgates.net/thumb-0DD4_53C7517B.jpg" alt="Something" title="GoodGirl">&lt;/p>
&lt;p>&lt;code>&amp;lt;img src=&amp;quot;http://t.williamgates.net/thumb-0DD4_53C7517B.jpg&amp;quot; style=&amp;quot;width: 500&amp;quot;&amp;gt;&lt;/code>&lt;/p>
&lt;p>hahaha&lt;/p>
&lt;p>‰∏ã‰∏ÄÊ≠•Â∞±ÊòØÊãøflaskÂÜô‰∏™ÂõæÂ∫äÊîæBAE‰∏ä,ÊêûÂÆö!!&lt;/p>
&lt;h3 id="Èü≥È¢ë">Èü≥È¢ë &lt;a href="#%e9%9f%b3%e9%a2%91" class="anchor">üîó&lt;/a>&lt;/h3>&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>htmlÁöÑÊñπÊ≥ï Êö¥Âäõ&amp;hellip;&lt;/p>
&lt;p>Á©∫Ëøô‰πàÂ§ß‰∏ÄÂùóÊòØÁî±‰∫é video-containter ÁöÑ css ÈÄ†ÊàêÁöÑ, ÊÉ≥‰øÆÊîπÂ∞±ÂæóÁúãÊ∫êÁ†Å‰∫Ü, ÁïôÂà∞‰ª•ÂêéÁî®Âêß. ÊàñËÄÖÁî® HTML5 Ëß£ÂÜ≥.Ëøô‰∏™ÊñπÊ≥ï‰∏çÈîô.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-[html]" data-lang="[html]">&amp;lt;embed src=&amp;#34;http://www.xiami.com/widget/0_3515679/singlePlayer.swf&amp;#34; type=&amp;#34;application/x-shockwave-flash&amp;#34; width=&amp;#34;257&amp;#34; height=&amp;#34;33&amp;#34; wmode=&amp;#34;transparent&amp;#34;&amp;gt;&amp;lt;/embed&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="ËßÜÈ¢ë">ËßÜÈ¢ë &lt;a href="#%e8%a7%86%e9%a2%91" class="anchor">üîó&lt;/a>&lt;/h3>&lt;!-- raw HTML omitted -->
&lt;pre tabindex="0">&lt;code class="language-[html]" data-lang="[html]">&amp;lt;iframe height=498 width=510 src=&amp;#34;http://player.youku.com/embed/XMzEwNTgwMjI4&amp;#34; frameborder=0 allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/code>&lt;/pre>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>HexoÂçöÂÆ¢‰ΩøÁî®‰πãÊóÖ</title><link>https://www.peterlau.xyz/posts/hexo_beginnermd/</link><pubDate>Fri, 21 Mar 2014 21:55:16 +0000</pubDate><guid>https://www.peterlau.xyz/posts/hexo_beginnermd/</guid><description> &lt;ul>
&lt;li>Hexo ÊòØ‰ªÄ‰πà?&lt;/li>
&lt;li>‰∫îÊ≠•Êã•Êúâ Hexo&lt;/li>
&lt;li>Hexo Â∑•‰ΩúÊµÅÁ®ã&lt;/li>
&lt;li>‰ºòÂåñÈÖçÁΩÆ&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="ÁØáÂ§¥ËØ≠">ÁØáÂ§¥ËØ≠ &lt;a href="#%e7%af%87%e5%a4%b4%e8%af%ad" class="anchor">üîó&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Markdown ÁöÑËØ≠Ê≥ï‰∏≠Ê≥®ÈáäÁî® &lt;code>&amp;lt;!-- --&amp;gt;&lt;/code>.&lt;/li>
&lt;li>hexo new &amp;ldquo;title_here&amp;rdquo; Â§ÑÁêÜ Hexo ËøôÁßçÂ∏¶ x ÁöÑÂ±ÖÁÑ∂ÊúâÈóÆÈ¢ò?&lt;/li>
&lt;li>markdown ÁÆÄ‰Ωì‰∏≠Êñá&lt;a href="http://wowubuntu.com/markdown/" title="ÁÆÄ‰Ωì‰∏≠ÊñáÁâà">ÈìæÊé•&lt;/a>,Â•ΩÂ•ΩÁªÉ‰π†Âêß!!!&lt;/li>
&lt;/ol>
&lt;h3 id="hexo-ÊòØ‰ªÄ‰πà">Hexo ÊòØ‰ªÄ‰πà? &lt;a href="#hexo-%e6%98%af%e4%bb%80%e4%b9%88" class="anchor">üîó&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/tommy351/hexo" title="Âè∞ÊπæÂ∞è‰ºô">tommy351&lt;/a>ÂèëÂ∏ÉÁöÑÂü∫‰∫énodeÁöÑÈùôÊÄÅÂçöÂÆ¢Ê°ÜÊû∂.Á±ª‰ºº jekyll, ‰∏çËøáÊòØÂü∫‰∫é node/nodejs ÁöÑ.(ÊàëÊòØ‰∏≠Ëã±Ê∑∑ÊùÇÁóõÊÅ®ËÄÖ,ÊñáÂ≠óÂâçÊ†áÂè∑ÈúÄÁ©∫Ê†ºÊâßË°åËÄÖ, ‰∏≠Ëã±Ê†áÂè∑Áªü‰∏Ä‰ΩøÁî®ËÄÖ, Ê†áÁ≠æÂåñ‰ø°Âæí.)&lt;/p>
&lt;/blockquote>
&lt;p>EMACscript ÊàñËÄÖ‰øóÁß∞ Javascript Ë∂äÊù•Ë∂äÂº∫Â§ß‰∫Ü. Js ÂèØ‰ª•ÂÜôÊ°åÈù¢Â∫îÁî®, ÂÜô html, ÂÜô css, ÂÜôÂä®Áîª, ÂÜôÂä®ÊÄÅÂõæË°®, ÂÜôÂèØËßÜÂåñÊï∞ÊçÆ, ÂÜôÊúçÂä°Âô®, Âá†‰πéÊó†ÊâÄ‰∏çËÉΩ‰∫Ü.Ëøô‰∏™Áé©ÂÖ∑ÂæàÂ•ΩÁé©.&lt;/p>
&lt;h3 id="‰∫îÊ≠•ÂÆâË£Ö-hexo-Âà∞-gitcafehttpsgitcafecom-Â§©Êúù‰ª£Á†ÅÊâòÁÆ°ÂïÜ">‰∫îÊ≠•ÂÆâË£Ö Hexo Âà∞ &lt;a href="https://gitcafe.com/" title="Â§©Êúù‰ª£Á†ÅÊâòÁÆ°ÂïÜ">Gitcafe&lt;/a> &lt;a href="#%e4%ba%94%e6%ad%a5%e5%ae%89%e8%a3%85-hexo-%e5%88%b0-gitcafehttpsgitcafecom-%e5%a4%a9%e6%9c%9d%e4%bb%a3%e7%a0%81%e6%89%98%e7%ae%a1%e5%95%86" class="anchor">üîó&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Á¨¨‰∏ÄÊ≠•: ÂÆâË£Ö Node , ÊÑüË∞¢ &lt;a href="%22https://www.google.com.hk/search?q=Ryan+Dahl&amp;amp;oq=Ryan+Dahl%22">Ryan Dahl&lt;/a>(ÊØèÊ¨°ÈÉΩË¶ÅË∑ü DHH ÊêûÊ∑∑)&lt;img src="http://nodegeek.net/wp-content/uploads/2013/12/ryan_dahl-300x172.jpg" alt="">&lt;/li>
&lt;/ul>
&lt;p>ÁÑ∂Âêé‰Ω†Â∞±Êúâ‰∫Ü npm (Node Package Manager) Ëøô‰∏™‰∏úË•ø. ÊâìÂºÄÁªàÁ´Ø / CMD, ÊâßË°å&lt;/p>
&lt;pre>&lt;code> npm install -g hexo
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>Á¨¨‰∫åÊ≠•: Âú®Êú¨Âú∞ÂçöÂÆ¢Êñá‰ª∂Â§π‰∏≠ (‰æãÂ¶Ç ~\hexo) ÊâßË°å&lt;/p>
&lt;pre>&lt;code> hexo init
&lt;/code>&lt;/pre>
&lt;p>ÁîüÊàêÂü∫Êú¨Êñá‰ª∂ÁªìÊûÑ. ‰Ω†ÂèØ‰ª•Èöè‰æøÁÇπÂºÄÁúãÁúã. Êú¨Âú∞È¢ÑËßà‰Ω†ÁöÑÂçöÂÆ¢:&lt;/p>
&lt;pre>&lt;code> hexo generate
hexo server
&lt;/code>&lt;/pre>
&lt;p>Êú¨Âú∞ÁâàÂçöÂÆ¢Â∞±ËøêË°åÂú® &lt;a href="http://localhost:4000">localhost:4000&lt;/a>
ÈÄÄÂá∫ËøòÊòØ&lt;code>Ctrl+c&lt;/code>, ÊÅ≠Âñú‰Ω†Êã•Êúâ‰∫Ü‰∏Ä‰∏™ÂÆåÂÖ®ÊéßÂà∂ÁöÑÂçöÂÆ¢‰∫Ü, ÂèØ‰ª•ÂÜôÂÜôÊó•Âøó,
ËÆ∞ÂΩïÊÑüÊÇü&amp;hellip;&amp;hellip;‰ΩÜÊòØ‰∏çÂèëÂ∏ÉÊÄé‰πàË°å?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Á¨¨‰∏âÊ≠•: ÂèëÂ∏É. Ê≤°ÊúâÂèëÂ∏ÉÊÄé‰πà‰ΩìÁé∞È´òÂ∫¶Âë¢? Ê†∑Âºè, Ê®°Êùø, Âä®ÊÄÅ, Ê†áÁ≠æ‰∫ë,
ÊåÇ‰ª∂, Wordpress ÊúâÁöÑÂí±ÈÉΩË¶ÅÊúâ!ËøôÈáåÂ∞±ËØ¥ËØ¥ÂèëÂ∏ÉÂà∞ Gitcafe Âêß.
ÊçÆËØ¥Êúâ‰∏™‰∏ìÈó®‰∏∫ÊûÅÂÆ¢ÂáÜÂ§áÁöÑ‰∫ë‰∏ªÊú∫‰πü‰∏çÈîô.Ëá™Â∑±
&lt;a href="http://www.google.com">Ë∞∑Ê≠å&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>3.1 Ê≥®ÂÜå &lt;a href="http://gitcafe.com">gitcafe&lt;/a>, &lt;a href="https://help.github.com/articles/generating-ssh-keys" title="Â∏ÆÂä©ÁúãËøôÈáå">ÁîüÊàê SSH
ÂÖ¨Èí•&lt;/a>,
Âú®&lt;a href="https://gitcafe.com/account/public_keys">SSH ÂÖ¨Èí•ÁÆ°ÁêÜ&lt;/a>
‰∏ä‰º†ÂÖ¨Èí• : &lt;em>*&lt;/em>.pub Êñá‰ª∂,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.2 &lt;strong>Âùë‰∏Ä&lt;/strong> gitcafe ‰∏≠ÂøÖÈ°ªÂàõÂª∫‰∏Ä‰∏™ÂíåÁî®Êà∑ÂêçÁõ∏ÂêåÁöÑÂÖ¨ÂºÄÈ°πÁõÆ, SSH
‰∏∫ &lt;a href="mailto:git@gitcafe.com">git@gitcafe.com&lt;/a>:username/username.git ‰∏§ÊÆµÂøÖÈ°ª‰∏ÄËá¥,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.3 &lt;strong>Âùë‰∫å&lt;/strong> ‰ª£Á†ÅÂøÖÈ°ªÊèê‰∫§Âà∞ gitcafe ÁöÑ gitcafe-pages
ÂàÜÊîØÊâçËÉΩÁîüÊàêÈ°µÈù¢, github ÊòØ master ÂàÜÊîØ.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.4 ‰øÆÊîπ ~\hexo ‰∏ã _config.yml, Âú®ÁªìÂ∞æ deploy È°πÊ∑ªÂä†ÂèëÂ∏É‰ª£Á†Å:&lt;/p>
&lt;pre>&lt;code>deploy:
type: github
repository: git@gitcafe.com:\*yourname*\/\*yourname*\.git
branch: \*gitcafe-pages*\
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>3.5 ‰∏ã‰∏ÄÊ≠•:&lt;/p>
&lt;pre>&lt;code>hexo generate
hexo deploy
&lt;/code>&lt;/pre>
&lt;p>ÊèêÁ§∫ÔºöÊØèÊ¨°‰øÆÊîπÊú¨Âú∞Êñá‰ª∂ÂêéÔºåÈúÄË¶Å &lt;code>hexo generate&lt;/code>
ÊâçËÉΩ‰øùÂ≠ò.ÊØèÊ¨°‰ΩøÁî®ÂëΩ‰ª§Êó∂ÔºåÈÉΩË¶ÅÂú® ~/hexo ÁõÆÂΩï‰∏ã.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>3.6 ÂèØ‰ª•ÈÄöËøá
&lt;a href="http://yourname.gitcafe.com/">&lt;/a>&lt;a href="http://yourname.gitcafe.com/">http://yourname.gitcafe.com/&lt;/a>
ËÆøÈóÆ‰Ω†ÁöÑÂçöÂÆ¢‰∫Ü. Êê≠Âª∫Â•Ω‰∫ÜËÆ∞ÂæóÈÄöÁü•ÊàëÂì¶, ÂèÇËÄÉ‰∏ã‰Ω†‰ª¨ÁöÑËÆæËÆ°.
Êàë‰πÉËÆæËÆ°È∫ªÁìú.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Á¨¨ÂõõÊ≠•: Â≠¶‰π†‰ª•‰∏ãÊäÄÊúØ:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>git&lt;/p>
&lt;/li>
&lt;li>
&lt;p>js/node&lt;/p>
&lt;/li>
&lt;li>
&lt;p>css&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ps/gimp&lt;/p>
&lt;/li>
&lt;li>
&lt;p>html&lt;/p>
&lt;/li>
&lt;li>
&lt;p>markdown&lt;/p>
&lt;p>ÁÑ∂ÂêéÂ∞±ÂèØ‰ª•Ëá™Âú®ÁºñÂÜô‰Ω†ÁöÑÂçöÂÆ¢ÂíØ.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Á¨¨‰∫îÊ≠•: ÁÆÄÂåñÁâà: Hexo ÂëΩ‰ª§:&lt;/p>
&lt;ul>
&lt;li>hexo g == hexo generate&lt;/li>
&lt;li>hexo d == hexo deploy&lt;/li>
&lt;li>hexo s == hexo server&lt;/li>
&lt;li>hexo n &amp;ldquo;new post&amp;rdquo; == hexo new &lt;em>hexo new page title hexo new post title&lt;/em> ÈªòËÆ§ÊòØ page&lt;/li>
&lt;li>&lt;a href="http://hexo.io/docs/commands.html">more&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>ÂΩìÂøÉÔºö&lt;/p>
&lt;p>Ê†áÁ≠æÈáåÊòØ tag:_[tag1,tag2] tag ÂêéË¶ÅÊúâ‰∏Ä‰∏™Á©∫Ê†º Âê¶ÂàôÁºñËØëÊä•ÈîôÔºü&lt;/p>
&lt;h3 id="todo">TODO: &lt;a href="#todo" class="anchor">üîó&lt;/a>&lt;/h3>&lt;ol>
&lt;li>hexo Êó•Â∏∏Â∑•‰ΩúÊµÅÁ®ã;&lt;/li>
&lt;li>Â§öÂ™í‰ΩìËµÑÊ∫êÁÆ°ÁêÜ, ÂõæÁâá, Èü≥È¢ë, ËßÜÈ¢ë;&lt;/li>
&lt;li>widget ÈÖçÁΩÆ;&lt;/li>
&lt;li>hexo ÂÜÖÈÉ®ËøêË°åÊú∫Âà∂.&lt;/li>
&lt;/ol>
&lt;h3 id="Áâ¢È™ö">Áâ¢È™ö: &lt;a href="#%e7%89%a2%e9%aa%9a" class="anchor">üîó&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Markdown ‰∏çÊîØÊåÅÂõæÁâáËÆæÁΩÆÂÆΩÈ´ò, Ëá™Ë°å‰ΩøÁî® Ê†áÁ≠æ, Ëá™Ê±ÇÂ§öÁ¶è,&lt;/li>
&lt;li>Markdown Ëé´ÂêçÂÖ∂Â¶ôÁöÑÁº©Ëøõ,
ÊéíÁâàÂïä.(1&amp;gt;Ê¨°‰∏ÄÁ∫ßÂàóË°®Âè™ÈúÄË¶ÅÊØî‰∏äÁ∫ßÂ§ö‰∏Ä‰∏™Á©∫Ê†ºÂç≥ÂèØ,2&amp;gt;Ê¨°Á∫ßÂàóË°®‰∏≠ÁöÑ‰ª£Á†ÅÁº©ËøõË¶ÅÊØî‰∏ä‰∏ÄÁ∫ßÂ§ö‰∏Ä‰∏™Âçï‰Ωç&lt;code>Âõõ‰∏™Á©∫Ê†º&lt;/code>),&lt;/li>
&lt;li>Hexo ÁâàÊú¨Â∑≤ÁªèÂà∞‰∫Ü 2.4.5 ‰∫Ü, ‰∏çÁÜüÊÇâ‰ª£Á†ÅÊû∂ÊûÑ, Ê∑ªÂä†ÁùÄÈôÑ‰ª∂ÁúüÂõ∞ÈöæÂïä.&lt;/li>
&lt;/ol>
&lt;p>ÊÑüË∞¢‰ª•‰∏ãËææ‰∫∫ÁöÑÊñáÁ´†:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://zipperary.com/categories/hexo/">zipperary&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://huaoguo.com/work/2013/11/09/%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%89%98%E7%AE%A1%E5%88%B0gitcafe.html">huaoguo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.gitcafe.com/116.html">gitcafe&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://github.com/">github&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.google.com/">google&lt;/a> !== Ë∞∑Ê≠å‰Ω†Âèà‰π±ÂÖ•&amp;hellip;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>**ÊÑüË∞¢ pandoc Â∏ÆÊàëÊää‰∏ÄÁØáÊóßÊñáÁöÑ HTML ËΩ¨Êàê Markdown&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>pandoc -f html -t markdown file.html &amp;gt;&amp;gt; new_markdown.md&lt;/code>&lt;/p>
&lt;ul>
&lt;li>**ÊÑüË∞¢ unix ÁöÑÁÆ°ÈÅì !==&lt;/li>
&lt;/ul>
&lt;p>by &lt;strong>Peter Lau&lt;/strong>&lt;/p></description></item></channel></rss>