<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on CodeMist</title><link>https://www.peterlau.xyz/posts/</link><description>Recent content in Posts on CodeMist</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 30 Sep 2022 04:17:20 +0800</lastBuildDate><atom:link href="https://www.peterlau.xyz/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo</title><link>https://www.peterlau.xyz/posts/hugo/</link><pubDate>Fri, 30 Sep 2022 04:17:20 +0800</pubDate><guid>https://www.peterlau.xyz/posts/hugo/</guid><description>&lt;p>a fast static site generator.&lt;/p>
&lt;h3 id="google-font">Google Font &lt;a href="#google-font" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;https://google-fonts.mirrors.sjtug.sjtu.edu.cn/css?family=Roboto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;https://fonts.font.im/css?family=Roboto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="comment">Comment &lt;a href="#comment" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://utteranc.es/">https://utteranc.es/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">Enable Utterances
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Add the following script tag to your blog&amp;#39;s template. Position it where you want the comments to appear. Customize the layout using the .utterances and .utterances-frame selectors.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">repo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;supeterlau/supeterlau.github.io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">issue-term&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;url&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;github-light&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">async&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>PostgreSQL Logical Replication with Docker and Elixir</title><link>https://www.peterlau.xyz/posts/postgresql-logical-replication-with-docker-and-elixir/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.peterlau.xyz/posts/postgresql-logical-replication-with-docker-and-elixir/</guid><description>&lt;p>Start PostgreSQL Logical Replication and wal2json plug-in in Docker, and read the changes with Elixir Postgrex.&lt;/p>
&lt;h2 id="start-two-postgresql-nodes-using-docker-compose">Start two PostgreSQL nodes (using Docker Compose) &lt;a href="#start-two-postgresql-nodes-using-docker-compose" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;p>(lr aka Logical Replication)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir lr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p pg1/&lt;span class="o">{&lt;/span>data,share&lt;span class="o">}&lt;/span> pg2/&lt;span class="o">{&lt;/span>data,share&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">touch docker-compose.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>docker-compose.yml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pg1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">debezium/postgres:14-alpine&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bind&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./pg1/share/pg_hba.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/usr/local/share/postgresql/pg_hba.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./pg1/data:/var/lib/postgresql/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_DB&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pg2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">debezium/postgres:14-alpine&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bind&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./pg2/share/pg_hba.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/usr/local/share/postgresql/pg_hba.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./pg2/data:/var/lib/postgresql/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_DB&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start Docker-compose:&lt;/p>
&lt;p>&lt;code>docker-compose up&lt;/code>&lt;/p>
&lt;p>Thanks to Debezium&amp;rsquo;s &lt;a href="https://github.com/debezium/container-images/tree/main/postgres/14-alpine">postgresql-alpine-with-wal2json image&lt;/a>, installing Wal2JSON is extremely easy.&lt;/p>
&lt;p>Last thing, copy &lt;code>pg_hba.conf.example&lt;/code> from the container to &lt;code>./pg1/share/pg_hda.conf&lt;/code> and &lt;code>./pg2/share/pg_hda.conf&lt;/code>&lt;/p>
&lt;p>open a new terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> lr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker cp lr-pg1-1:/usr/local/share/postgresql/pg_hba.conf.sample lr/pg1/share/pg_hba.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker cp lr-pg1-1:/usr/local/share/postgresql/pg_hba.conf.sample lr/pg2/share/pg_hba.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At the end of files, add&lt;/p>
&lt;p>&lt;code>host all repuser 0.0.0.0/0 md5&lt;/code>&lt;/p>
&lt;p>restart Docker-Compose:&lt;/p>
&lt;p>press Ctrl-c&lt;/p>
&lt;p>&lt;code>docker-compose up&lt;/code>&lt;/p>
&lt;p>Viewing Service pg2 Logs:&lt;/p>
&lt;p>&lt;code>docker-compose logs -f pg2&lt;/code>&lt;/p>
&lt;h2 id="logical-decoding">Logical Decoding &lt;a href="#logical-decoding" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;h3 id="create-tables-for-pg1pg2-and-add-data">Create tables for pg1/pg2 and add data &lt;a href="#create-tables-for-pg1pg2-and-add-data" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>In pg1 as publication&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">create database source_rep&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">\c&lt;/span> source_rep&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create table test_rep&lt;span class="o">(&lt;/span>id int primary key, name varchar&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create table test_rep_other&lt;span class="o">(&lt;/span>id int primary key, name varchar&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">insert into test_rep values&lt;span class="o">(&lt;/span>generate_series&lt;span class="o">(&lt;/span>1,100&lt;span class="o">)&lt;/span>,&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="o">||&lt;/span>generate_series&lt;span class="o">(&lt;/span>1,100&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">insert into test_rep_other values&lt;span class="o">(&lt;/span>generate_series&lt;span class="o">(&lt;/span>1,100&lt;span class="o">)&lt;/span>,&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="o">||&lt;/span>generate_series&lt;span class="o">(&lt;/span>1,100&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span> count&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> from test_rep&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span> count&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> from test_rep_other&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>create PUBLICATION&lt;/p>
&lt;p>&lt;code>CREATE PUBLICATION pub FOR TABLE test_rep, test_rep_other;&lt;/code>&lt;/p>
&lt;p>In pg2 as subscription&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">create database target_rep&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create table test_rep&lt;span class="o">(&lt;/span>id int primary key, name varchar&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create table test_rep_other&lt;span class="o">(&lt;/span>id int primary key, name varchar&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>create SUBSCRIPTION&lt;/p>
&lt;p>&lt;code>CREATE SUBSCRIPTION sub CONNECTION 'dbname=source_rep host=pg1 user=dev password=dev port=5432' PUBLICATION pub;&lt;/code>&lt;/p>
&lt;p>view Logical Decoding slots:&lt;/p>
&lt;p>&lt;code>SELECT slot_name, plugin, slot_type, database, active, restart_lsn, confirmed_flush_lsn FROM pg_replication_slots;&lt;/code>&lt;/p>
&lt;h3 id="via-sql">via SQL: &lt;a href="#via-sql" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://www.postgresql.org/docs/current/logical-replication.html">https://www.postgresql.org/docs/current/logical-replication.html&lt;/a>&lt;/p>
&lt;h3 id="via-pg_recvlogical">via pg_recvlogical: &lt;a href="#via-pg_recvlogical" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;p>Make sure the slot named pub not exist&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">SELECT slot_name, plugin, slot_type, database, active, restart_lsn, confirmed_flush_lsn FROM pg_replication_slots&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>create slot&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm --network lr_default --link lr-pg1-1:postgres postgres:alpine pg_recvlogical -h pg1 -U dev -d source_rep --slot&lt;span class="o">=&lt;/span>pub --create-slot -P wal2json&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Read the changes&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm --network lr_default --link lr-pg1-1:postgres postgres:alpine pg_recvlogical -h pg1 -U dev -d source_rep --slot&lt;span class="o">=&lt;/span>pub --start -o pretty-print&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> -f -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="via-elixir-postgrex-version-0165">via Elixir Postgrex: (version 0.16.5) &lt;a href="#via-elixir-postgrex-version-0165" class="anchor">ðŸ”—&lt;/a>&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mix new app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>in mix.exs: {:postgrex, &amp;ldquo;&amp;gt;=0.0.0&amp;rdquo;}&lt;/p>
&lt;p>Refer to the sample &lt;a href="https://hexdocs.pm/postgrex/Postgrex.ReplicationConnection.html">https://hexdocs.pm/postgrex/Postgrex.ReplicationConnection.html&lt;/a>&lt;/p>
&lt;p>set :replication to &amp;ldquo;database&amp;rdquo; when start_link. &lt;a href="https://www.postgresql.org/docs/current/protocol-replication.html">READ MORE&lt;/a>&lt;/p>
&lt;p>If you start nodes as described above, be careful to modify the start_link parameter.&lt;/p>
&lt;p>try_pg.exs&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-elixir" data-lang="elixir">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">defmodule&lt;/span> &lt;span class="nc">Repl&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">use&lt;/span> &lt;span class="nc">Postgrex.ReplicationConnection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">start_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">opts&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Automatically reconnect if we lose connection.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extra_opts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">auto_reconnect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Postgrex.ReplicationConnection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">__MODULE__&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:ok&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">extra_opts&lt;/span> &lt;span class="o">++&lt;/span> &lt;span class="n">opts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&amp;gt;&lt;/span> &lt;span class="nc">IO&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inspect&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">@impl&lt;/span> &lt;span class="no">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:ok&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="ss">:ok&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">%{&lt;/span>&lt;span class="ss">step&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:disconnected&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">@impl&lt;/span> &lt;span class="no">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">handle_connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;CREATE_REPLICATION_SLOT postgrex TEMPORARY LOGICAL pgoutput NOEXPORT_SNAPSHOT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="ss">:query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">%{&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="ss">step&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:create_slot&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">@impl&lt;/span> &lt;span class="no">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">handle_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">%{&lt;/span>&lt;span class="ss">step&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:create_slot&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">when&lt;/span> &lt;span class="n">is_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;START_REPLICATION SLOT postgrex LOGICAL 0/0 (proto_version &amp;#39;1&amp;#39;, publication_names &amp;#39;postgrex_example&amp;#39;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="ss">:stream&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="p">%{&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="ss">step&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:streaming&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">@impl&lt;/span> &lt;span class="no">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># https://www.postgresql.org/docs/14/protocol-replication.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">handle_data&lt;/span>&lt;span class="p">(&amp;lt;&amp;lt;&lt;/span>&lt;span class="sc">?w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_wal_start&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_wal_end&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rest&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">binary&lt;/span>&lt;span class="p">&amp;gt;&amp;gt;,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">IO&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inspect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rest&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="ss">:noreply&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">def&lt;/span> &lt;span class="n">handle_data&lt;/span>&lt;span class="p">(&amp;lt;&amp;lt;&lt;/span>&lt;span class="sc">?k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wal_end&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">reply&lt;/span>&lt;span class="p">&amp;gt;&amp;gt;,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">messages&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="n">reply&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">[&amp;lt;&amp;lt;&lt;/span>&lt;span class="sc">?r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wal_end&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wal_end&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wal_end&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">current_time&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">&amp;gt;&amp;gt;]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="ss">:noreply&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">messages&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">@epoch&lt;/span> &lt;span class="nc">DateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_unix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sx">~U[2000-01-01 00:00:00Z]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:microsecond&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">defp&lt;/span> &lt;span class="n">current_time&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="ss">do&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nc">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">os_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:microsecond&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="na">@epoch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="ss">:ok&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_pid&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Repl&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start_link&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">database&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;source_rep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nc">Process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:infinity&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To access the lr_default network in docker, start an Elixir Docker Container in path /app and link to the lr_default network:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm --network lr_default --link lr-pg1-1:postgres -v &lt;span class="nv">$PWD&lt;/span>:/app elixir:alpine sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sh#: &lt;span class="nb">cd&lt;/span> /app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sh#: mix run try_pg.ex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>using plugin pgoutput by default.&lt;/p>
&lt;h2 id="wait-bonus-using-wal2json">Wait, Bonus! using wal2json! &lt;a href="#wait-bonus-using-wal2json" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;p>You cannot simply replace pgoutput with wal2json in your code.&lt;/p>
&lt;p>At least the parameters of pgoutput need to be removed.&lt;/p>
&lt;p>Change&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-elixir" data-lang="elixir">&lt;span class="line">&lt;span class="cl">&lt;span class="nc">START_REPLICATION&lt;/span> &lt;span class="nc">SLOT&lt;/span> &lt;span class="n">postgrex&lt;/span> &lt;span class="nc">LOGICAL&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">proto_version&lt;/span> &lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">publication_names&lt;/span> &lt;span class="s1">&amp;#39;postgrex_example&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-elixir" data-lang="elixir">&lt;span class="line">&lt;span class="cl">&lt;span class="nc">START_REPLICATION&lt;/span> &lt;span class="nc">SLOT&lt;/span> &lt;span class="n">postgrex&lt;/span> &lt;span class="nc">LOGICAL&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">proto_version&lt;/span> &lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">publication_names&lt;/span> &lt;span class="s1">&amp;#39;postgrex_example&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to use &lt;a href="https://github.com/eulerto/wal2json#parameters">wal2json parameters&lt;/a>, you need to modify the query at the same time.&lt;/p>
&lt;p>Example of simple parameters:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-elixir" data-lang="elixir">&lt;span class="line">&lt;span class="cl">&lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sx">~s{START_REPLICATION SLOT postgrex LOGICAL 0/0 (&amp;#34;pretty-print&amp;#34; &amp;#39;true&amp;#39;, &amp;#34;add-msg-prefixes&amp;#34; &amp;#39;wal2json&amp;#39;)}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Consider local debugging if there are any errors&lt;/p>
&lt;p>modify mix.exs&lt;/p>
&lt;p>&lt;code>{:postgrex, &amp;quot;&amp;gt;= 0.0.0&amp;quot;},&lt;/code>&lt;/p>
&lt;p>to&lt;/p>
&lt;p>&lt;code>{:postgrex, path: &amp;quot;deps/postgrex&amp;quot;},&lt;/code>&lt;/p>
&lt;p>find &lt;code>deps/postgrex/lib/postgrex/replication_connection.ex&lt;/code> function handle/5 (v0.16.5 L540)&lt;/p>
&lt;p>&lt;code>{:noreply, %{s | protocol: protocol, streaming: max_messages}}&lt;/code>&lt;/p>
&lt;p>below that, you can add&lt;/p>
&lt;p>&lt;code>dbg()&lt;/code>&lt;/p>
&lt;p>By executing&lt;/p>
&lt;p>&lt;code>mix run try_pg.exs&lt;/code>&lt;/p>
&lt;p>to View wal2json error information.&lt;/p>
&lt;p>Error example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-elixir" data-lang="elixir">&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">reason&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">%&lt;/span>&lt;span class="nc">Postgrex.Error&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">postgres&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">%{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">code&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:invalid_parameter_value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">file&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;wal2json.c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">line&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;730&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;option \&amp;#34;pretty_print\&amp;#34; = \&amp;#34;1\&amp;#34; is unknown&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">pg_code&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;22023&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">routine&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pg_decode_startup&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">severity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ERROR&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">unknown&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ERROR&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">where&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;slot \&amp;#34;postgrex\&amp;#34;, output plugin \&amp;#34;wal2json\&amp;#34;, in the startup callback&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">connection_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3405&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">query&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it.&lt;/p>
&lt;p>Have fun with Logical Decoding with Docker and Elixir !&lt;/p>
&lt;h2 id="warning">WARNING: &lt;a href="#warning" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://www.postgresql.org/docs/current/protocol-replication.html">https://www.postgresql.org/docs/current/protocol-replication.html&lt;/a>&lt;/p>
&lt;p>Postgrex.ReplicationConnection&lt;/p>
&lt;p>&lt;em>this module is experimental and may be subject to changes in the future.&lt;/em>&lt;/p>
&lt;h2 id="refs">Refs: &lt;a href="#refs" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://www.postgresql.org/docs/current/logical-replication.html">https://www.postgresql.org/docs/current/logical-replication.html&lt;/a>
&lt;a href="https://www.postgresql.org/docs/current/wal-internals.html">https://www.postgresql.org/docs/current/wal-internals.html&lt;/a>
&lt;a href="https://www.postgresql.org/docs/current/protocol-replication.html">https://www.postgresql.org/docs/current/protocol-replication.html&lt;/a>&lt;/p></description></item></channel></rss>