<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ror on CodeMist</title><link>https://www.peterlau.xyz/tags/ror/</link><description>Recent content in ror on CodeMist</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Aug 2014 18:47:47 +0000</lastBuildDate><atom:link href="https://www.peterlau.xyz/tags/ror/index.xml" rel="self" type="application/rss+xml"/><item><title>最近学的几个框架</title><link>https://www.peterlau.xyz/posts/flask_ror_node/</link><pubDate>Mon, 11 Aug 2014 18:47:47 +0000</pubDate><guid>https://www.peterlau.xyz/posts/flask_ror_node/</guid><description> &lt;p>最近看读书读的挺多, 大部分都是看的Free电子书和文档, 计算机真是建立在分享上的啊, 光是Free发布的资料就看不完. 的确是&amp;quot;在这个时代能够限制你的只有自己的求知欲&amp;quot;.&lt;/p>
&lt;p>现在我想说说最近和python, ruby, node玩耍的情况:&lt;/p>
&lt;p>python 主要是学来用生物信息的, Biopython,结果实在没有实例学着没意思.在玩了几个框架后终于能看下去它的代码了.Python是通用语言, 用在web上也不错, 最近看了 webpy 和 flask, webpy看了看做了一个小项目, 可惜没有大型项目的样例; django 完成了那个入门教程, 感觉后台管理很是强大, 但细节一无所知.知其然不知何以然啊!&lt;/p>
&lt;p>Flask 大概是我最下力气学的一个框架, 丰富的文档, 完善的组织方式, 值得好好学学.现在看着资料, 卡在权限管理这里, 还是没有很好理解代码之间的关系, 但是终于对web应用的细节更了解了.&lt;/p>
&lt;p>ruby 真心优雅的语言, 写起来很舒服, 绝对是我的第二选择. 实在不想硬着头皮写静态语言, 除非有性能诱惑和脚本化特点( go ). Ruby的框架老大是ROR,今天下午用了两个小时写了个基本的博客.发布文章和评论, 其他基本功能找时间实现吧, 就是缺时间.写起来很爽快, 各种生成器简直让我不忍再看flask,据说python里的django是和ROR一样的组织方式, 但django可没有这么爽快的体验. 虽然我学习的第一个框架是sinatra, 但还是不能完全理解很多魔法一样的代码, sinatra的细节还是很清晰的展现的. 真想完成一个大型应用啊.ror的RESTful链接也很经典, flask里边要是能加上这个就妙极了. 从资源出发的应用设计.&lt;/p>
&lt;p>node 高实时高并发.写node当然是从底层开始啊, 虽然刚完成到上传文件, 学起来还是很轻松的.就是&amp;hellip;时间啊.时间.&lt;/p>
&lt;p>如果一个不是计算机专业毕业的人喜欢写代码, 那么一定是为了满足好奇心的啊.!!!还有找工作&amp;hellip;&lt;/p>
&lt;p>找工作还是得看看php&amp;hellip;哈哈哈!!!&lt;/p></description></item></channel></rss>